{"version":3,"sources":["app.controller/app.native.data.ts","app.controller/app.controller.ts","components/UpDownInput/UpDownInput.tsx","components/SIValueEditor/SIValueEditor.tsx","components/mathjax.utils.ts","components/SIUnitEditor/SIUnitEditor.tsx","components/Conversion/Conversion.tsx","components/SlideUpPane/SlideUpPane.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["SISuffix","nativeSuffixes","symbol","name","YOTTA","toLowerCase","exponentOf10","ZETTA","EXA","PETA","TERA","GIGA","MEGA","KILO","HECTO","DECA","UNITY","DECI","CENTI","MILLI","MICRO","NANO","PICO","FENTO","nativeUnitDefinitions","measurement","description","isBasicDimension","value","components","factor","units","AppController","unitsDefinitions","suffixes","history","storage","definitionKey","getDefinitions","localStorage","getItem","JSON","parse","saveDefinitions","deleteDefinitions","setItem","stringify","removeItem","historyKey","getHistory","saveHistory","deleteHistory","suffixUtils","getAll","getPrevious","currSuf","prevSufIndex","forEach","suf","index","length","getNext","nextSufIndex","getByValue","sufIndex","getClosest","val","enumVals","tmp","isNaN","Number","push","sort","a","b","item","unitsDefinitionsUtils","currSymbol","prevDefIndex","def","nextDefIndex","getBySymbol","defIndex","defDict","this","Object","keys","map","key","unitsWithKnownDefinition","unitsToBeProcessed","un","currDef","unit","exponent","suffix","Error","validUnits","dimensionsDict","collectDimensions","rawUnit","dict","currUnit","_rawUnit","filter","Math","pow","dimension","baseFactor","unitSymbol","newDef","Promise","resolve","reject","initialUnits","targetUnits","author","mantisse","toExponential","split","man","exp","res","parseFloat","meta","timestamp","Date","getTime","initialValue","targetValue","initiatUnits","UpDownInput","children","isValueANumber","onNext","onPrevious","onChange","extraClasses","className","style","width","toString","onClick","evt","type","target","defaultProps","UpDownInputContainer","SIValueEditor","sivalue","handleNewMantisse","handleNewExponent","buildMathJaxUnits","addParenthesis","getSuffixByValue","num","den","buildMathJaxUnit","unitSuffix","unitExponent","abs","buildMathJaxDimensions","dimensions","dim","buildMathJaxDimension","dimensionSymbol","dimensionExponent","SIUnitEditor","siunit","unitDefUtils","mustShowParenthesis","onOpenSuffixPane","onOpenUnitPane","pRef1","useRef","useEffect","mathjaxexpression","current","innerHTML","window","MathJax","typeset","str","handleNewSuffix","handleNewUnit","currSuffix","console","log","ref","substr","toUpperCase","Conversion","getSuffix","pRef_start","pRef_equal","pRef_final","dRef_start","dRef_equal","dRef_final","dimensionsMatch","dec","round","SlideUpPane","state","onClose","htmlFor","id","checked","App","ac","getVersion","controlsDefault","initialvalue","initialunits","targetunits","viewsuffixes","viewunits","showparenthesis","useState","controls","setControls","buildOpUnit","uiConversion","_setUiConversion","setUiConversion","currUiConversion","curr","convert","catch","err","siunitToAdd","setSiunitToAdd","siunitOnDisplay","setSiunitOnDisplay","updateUnitCollection","unCollection","unObj","unIndex","idx","updateControlObj","controlsCurrent","updateKeys","updateVals","onPaneItemClick","newVal","suff","_un","cnt","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.13579213.chunk.js","sourcesContent":["import { TSuffix, TUnitDefinition, TUnitDefinitionComponent } from \"./app.types\";\r\n\r\nexport enum SISuffix {\r\n  YOTTA = 24,\r\n  ZETTA = 21,\r\n  EXA = 18,\r\n  PETA = 15,\r\n  TERA = 12,\r\n  GIGA = 9,\r\n  MEGA = 6,\r\n  KILO = 3,\r\n  HECTO = 2,\r\n  DECA = 1,\r\n  UNITY = 0,\r\n  DECI = -1,\r\n  CENTI = -2,\r\n  MILLI = -3,\r\n  MICRO = -6,\r\n  NANO = -9,\r\n  PICO = -12,\r\n  FENTO = -15,\r\n}\r\n\r\nexport const nativeSuffixes: TSuffix[] = [\r\n  { symbol: 'Y', name: SISuffix[SISuffix.YOTTA].toLowerCase(), exponentOf10: SISuffix.YOTTA },\r\n  { symbol: 'Z', name: SISuffix[SISuffix.ZETTA].toLowerCase(), exponentOf10: SISuffix.ZETTA },\r\n  { symbol: 'E', name: SISuffix[SISuffix.EXA].toLowerCase(), exponentOf10: SISuffix.EXA },\r\n  { symbol: 'P', name: SISuffix[SISuffix.PETA].toLowerCase(), exponentOf10: SISuffix.PETA },\r\n  { symbol: 'T', name: SISuffix[SISuffix.TERA].toLowerCase(), exponentOf10: SISuffix.TERA },\r\n  { symbol: 'G', name: SISuffix[SISuffix.GIGA].toLowerCase(), exponentOf10: SISuffix.GIGA },\r\n  { symbol: 'M', name: SISuffix[SISuffix.MEGA].toLowerCase(), exponentOf10: SISuffix.MEGA },\r\n  { symbol: 'k', name: SISuffix[SISuffix.KILO].toLowerCase(), exponentOf10: SISuffix.KILO },\r\n  { symbol: 'h', name: SISuffix[SISuffix.HECTO].toLowerCase(), exponentOf10: SISuffix.HECTO },\r\n  { symbol: 'da', name: SISuffix[SISuffix.DECA].toLowerCase(), exponentOf10: SISuffix.DECA },\r\n  { symbol: '', name: SISuffix[SISuffix.UNITY].toLowerCase(), exponentOf10: SISuffix.UNITY },\r\n  { symbol: 'd', name: SISuffix[SISuffix.DECI].toLowerCase(), exponentOf10: SISuffix.DECI },\r\n  { symbol: 'c', name: SISuffix[SISuffix.CENTI].toLowerCase(), exponentOf10: SISuffix.CENTI },\r\n  { symbol: 'm', name: SISuffix[SISuffix.MILLI].toLowerCase(), exponentOf10: SISuffix.MILLI },\r\n  { symbol: 'μ', name: SISuffix[SISuffix.MICRO].toLowerCase(), exponentOf10: SISuffix.MICRO },\r\n  { symbol: 'n', name: SISuffix[SISuffix.NANO].toLowerCase(), exponentOf10: SISuffix.NANO },\r\n  { symbol: 'p', name: SISuffix[SISuffix.PICO].toLowerCase(), exponentOf10: SISuffix.PICO },\r\n  { symbol: 'f', name: SISuffix[SISuffix.FENTO].toLowerCase(), exponentOf10: SISuffix.FENTO }\r\n]\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const nativeUnitDefinitions: TUnitDefinition[] = [\r\n  {\r\n    name: 'meter',\r\n    symbol: 'm',\r\n    measurement: 'Length, Height',\r\n    description: 'Measures Length',\r\n    isBasicDimension: {\r\n      value: true,\r\n      symbol: 'L'\r\n    },\r\n    components: {\r\n      factor: 1,\r\n      units: []\r\n    }\r\n  },{\r\n    name: 'second',\r\n    measurement: 'Time',\r\n    symbol: 's',\r\n    description: 'Measures Time',\r\n    isBasicDimension: {\r\n      value: true,\r\n      symbol: 'T'\r\n    },\r\n    components: {\r\n      factor: 1,\r\n      units: []\r\n    }\r\n  },{\r\n    name: 'gram',\r\n    measurement: 'Mass',\r\n    symbol: 'g',\r\n    description: 'Measures Mass',\r\n    isBasicDimension: {\r\n      value: true,\r\n      symbol: 'M'\r\n    },\r\n    components: {\r\n      factor: 1,\r\n      units: []\r\n    }\r\n  }]","import { TUnitDefinition, TUnit, TSuffix, TRecord, TOpUnit, TDimension, TSIValue, TUnitDefinitionUtils, TSuffixUtils } from \"./app.types\"\r\nimport { nativeUnitDefinitions, nativeSuffixes, SISuffix } from \"./app.native.data\";\r\n\r\nexport default class AppController {\r\n\r\n  private unitsDefinitions: TUnitDefinition[]\r\n  private suffixes: TSuffix[]\r\n  private history: TRecord[]\r\n  public getHistory(): TRecord[]{\r\n    return [...this.history]\r\n  }\r\n\r\n\r\n  public getVersion(){ return \"2.0\"; }\r\n\r\n\r\n  constructor(){\r\n     \r\n    let defDict: {[key: string]: TUnitDefinition} = {};\r\n    [...nativeUnitDefinitions, ...this.storage.getDefinitions()].forEach(def => defDict[def.symbol] = {...def})\r\n    this.unitsDefinitions = Object.keys(defDict).map(key => defDict[key])\r\n\r\n    this.suffixes = nativeSuffixes\r\n    this.history = []\r\n  }\r\n\r\n\r\n  private storage = {\r\n\r\n    definitionKey: 'customdefinitions',\r\n    getDefinitions: (): TUnitDefinition[] => {\r\n      const units = localStorage.getItem(this.storage.definitionKey)\r\n      return units ? JSON.parse(units) as TUnitDefinition[] : []\r\n    },\r\n    saveDefinitions: () => {\r\n      this.storage.deleteDefinitions()\r\n      localStorage.setItem(this.storage.definitionKey, JSON.stringify(this.unitsDefinitions))\r\n    },\r\n    deleteDefinitions: () => {\r\n      localStorage.removeItem(this.storage.definitionKey)\r\n    },\r\n\r\n\r\n\r\n    historyKey: 'history',\r\n    getHistory: (): TRecord[] => {\r\n      const units = localStorage.getItem(this.storage.historyKey)\r\n      return units ? JSON.parse(units) as TRecord[] : []\r\n    },\r\n    saveHistory: () => {\r\n      this.storage.deleteHistory()\r\n      localStorage.setItem(this.storage.historyKey, JSON.stringify(this.history))\r\n    },\r\n    deleteHistory: () => {\r\n      localStorage.removeItem(this.storage.historyKey)\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  buildOpUnit(units: TUnit[]): TOpUnit{\r\n\r\n    // Check that all unit symbols have associated definitions\r\n    let unitsWithKnownDefinition: {[key: string]: TUnit} = {}\r\n    let unitsToBeProcessed: any = {} // Create a tracker for the units that haven't been processed yet\r\n    units.forEach(un => unitsToBeProcessed[un.symbol] = 1)\r\n\r\n    this.unitsDefinitions.forEach(currDef => {\r\n      units.forEach(unit => {\r\n        if(unit.symbol === currDef.symbol){\r\n          // Mark the current unit as processed (i.e remove it from tracker)\r\n          unitsToBeProcessed[unit.symbol] && (delete unitsToBeProcessed[unit.symbol]);\r\n          // If the unit has already been met, collapse all its instances into one with updated suffix and exponent\r\n          if(unitsWithKnownDefinition[unit.symbol]){\r\n            unitsWithKnownDefinition[unit.symbol].exponent += unit.exponent\r\n            unitsWithKnownDefinition[unit.symbol].suffix += unit.suffix * unit.exponent\r\n          }else{\r\n            unitsWithKnownDefinition[unit.symbol] = {...unit}\r\n            unitsWithKnownDefinition[unit.symbol].suffix = unit.suffix * unit.exponent\r\n          }\r\n        }\r\n      })\r\n    })\r\n\r\n\r\n\r\n    if(Object.keys(unitsToBeProcessed).length !== 0){\r\n      throw new Error(`Unknown Units Found: ${JSON.stringify(unitsToBeProcessed)}`);\r\n    }\r\n    \r\n    \r\n\r\n    //Collect Dimensions\r\n    let collectDimensions = (rawUnit: TUnit[], dict: {[key: string]: number}): {[key: string]: number} => {\r\n\r\n      // Ensure that the key factor is always present\r\n      !dict[\"factor\"] && (dict[\"factor\"] = 1)\r\n      \r\n\r\n      if(rawUnit.length !== 0){\r\n        let [currUnit, ..._rawUnit] = [...rawUnit];\r\n        let currDef = this.unitsDefinitions.filter(def => def.symbol === currUnit.symbol)[0];\r\n\r\n        // If we found a basic dimension, collect it along with its exponent\r\n        currDef && currDef.isBasicDimension.value === true && dict[currDef.isBasicDimension.symbol] && (dict[currDef.isBasicDimension.symbol] = dict[currDef.isBasicDimension.symbol] + currUnit.exponent);\r\n        currDef && currDef.isBasicDimension.value === true && !dict[currDef.isBasicDimension.symbol] && (dict[currDef.isBasicDimension.symbol] = currUnit.exponent);\r\n        currDef && currDef.isBasicDimension.value === true && (dict[\"factor\"] *= Math.pow(10, currUnit.suffix)); //Suffix already has accumulated the exponent from above\r\n\r\n\r\n        // If we found a composite unit, extract component into raw dimensions to be processed in later recursion cycles\r\n        currDef && currDef.isBasicDimension.value !== true && (_rawUnit = [\r\n          ..._rawUnit, \r\n          ...currDef.components.units.map(un => {\r\n            un.exponent *= currUnit.exponent\r\n            un.suffix *= currUnit.exponent\r\n            return un\r\n          })\r\n        ])\r\n        currDef && currDef.isBasicDimension.value !== true && (dict[\"factor\"] *= currDef.components.factor * Math.pow(10, currUnit.suffix))\r\n\r\n        \r\n        return collectDimensions(_rawUnit, dict)\r\n      }else{\r\n        return dict\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n    let validUnits = Object.keys(unitsWithKnownDefinition).sort().map(key => unitsWithKnownDefinition[key])\r\n    let dimensionsDict: {[key: string]: number} = collectDimensions(validUnits,  {})\r\n    let factor = dimensionsDict[\"factor\"]\r\n    delete dimensionsDict[\"factor\"]\r\n    let dimensions = Object.keys(dimensionsDict).sort().map(key => { return { symbol: key, exponent: dimensionsDict[key] }})\r\n\r\n\r\n\r\n    // Build Object\r\n    const unit: TOpUnit = {\r\n      units: validUnits,\r\n      dimension: dimensions,\r\n      baseFactor: factor\r\n    }\r\n\r\n\r\n    return unit;\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  hasDefinitionFor(unitSymbol: string): TUnitDefinition|null{\r\n    const def = this.unitsDefinitions.filter(def => def.symbol === unitSymbol)[0]\r\n    return def ? def : null\r\n  }\r\n\r\n  addDefinition(newDef: TUnitDefinition, isBasicDimension?: boolean): Promise<TUnitDefinition>{\r\n    // Check whether we already have a definition with this symbol\r\n    let existingDef = this.unitsDefinitions.filter(def => def.symbol === newDef.symbol)[0]\r\n    if(existingDef){\r\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error\r\n      throw new Error(\"Definition with this symbol already exists\");\r\n    }else if(newDef.symbol === '' || newDef.measurement === '' || newDef.name === ''){\r\n      throw new Error(\"Definition is not complete\");\r\n    }\r\n\r\n    // const def = JSON.parse(newDef) as TRecord[]\r\n    const def = {...newDef}\r\n    def.name = def.name.toLowerCase()\r\n    if(!isBasicDimension){\r\n      def.isBasicDimension.value = false\r\n      def.isBasicDimension.symbol = ''\r\n    }else{\r\n      let exisitingDefWithSameDimension = this.unitsDefinitions.filter(def => def.isBasicDimension.value === true && def.isBasicDimension.symbol === newDef.isBasicDimension.symbol)[0]\r\n      if(exisitingDefWithSameDimension){\r\n        throw new Error(\"Definition with this dimension already exists\");\r\n      }\r\n    }\r\n\r\n\r\n    // add definition to internal variable\r\n    this.unitsDefinitions = [...this.unitsDefinitions, def]\r\n\r\n    // save definition to storage\r\n    return new Promise((resolve, reject) => {\r\n      this.storage.saveDefinitions()\r\n      resolve(this.unitsDefinitions.filter(def => def.symbol === newDef.symbol)[0])\r\n    })\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  convert(val: TSIValue, initialUnits: TOpUnit, targetUnits: TOpUnit, author: string = \"\"): Promise<TSIValue>{\r\n    \r\n    return new Promise((resolve, reject) => {\r\n      let temp = initialUnits.baseFactor * Math.pow(10, val.exponent) * val.mantisse / targetUnits.baseFactor\r\n      let [man, exp] = temp.toExponential().toLowerCase().split(\"e\")\r\n      let res: TSIValue = {\r\n        mantisse: parseFloat(man),\r\n        exponent: parseFloat(exp)\r\n      }\r\n\r\n      if(JSON.stringify(initialUnits.dimension) !== JSON.stringify(targetUnits.dimension)){\r\n        reject(\"Dimension Do Not Match!\")\r\n      }\r\n\r\n\r\n\r\n      this.history = [...this.history, {\r\n        meta: {author: author, timestamp: new Date().getTime()},\r\n        initialValue: val,\r\n        targetValue: res,\r\n        initiatUnits: initialUnits,\r\n        targetUnits: targetUnits,\r\n      }]\r\n      this.storage.saveHistory()\r\n\r\n\r\n      resolve(res)\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n  suffixUtils: TSuffixUtils = {\r\n    getAll: (): TSuffix[]=>{\r\n      return [...this.suffixes]\r\n    },\r\n    getPrevious: (currSuf: SISuffix): TSuffix => {\r\n      let prevSufIndex = 0\r\n      this.suffixes.forEach((suf, index) => {\r\n        if(suf.exponentOf10 === currSuf){\r\n          prevSufIndex = index + 1\r\n        }\r\n      })\r\n      return prevSufIndex < this.suffixes.length ? this.suffixes[prevSufIndex] : this.suffixes[0]\r\n      \r\n    },\r\n    getNext: (currSuf: SISuffix): TSuffix => {\r\n      let nextSufIndex = 0\r\n      this.suffixes.forEach((suf, index) => {\r\n        if(suf.exponentOf10 === currSuf){\r\n          nextSufIndex = index - 1\r\n        }\r\n      })\r\n      return nextSufIndex >= 0 ? this.suffixes[nextSufIndex] : this.suffixes[this.suffixes.length - 1] \r\n    },\r\n    getByValue: (currSuf: SISuffix): TSuffix => {\r\n      let sufIndex = 0\r\n      this.suffixes.forEach((suf, index) => {\r\n        if(suf.exponentOf10 === currSuf){\r\n          sufIndex = index\r\n        }\r\n      })\r\n      return this.suffixes[sufIndex] \r\n    },\r\n    getClosest: (val: number): TSuffix => {\r\n      let enumVals = []\r\n      for (let tmp in SISuffix) {\r\n        if (!isNaN(Number(tmp))) {\r\n          enumVals.push(Number(tmp))\r\n        }\r\n      }\r\n      enumVals.sort((a,b)=>a-b);\r\n      for(let item of enumVals){\r\n        if(val <= item){\r\n          val = item;\r\n          break\r\n        }\r\n      }\r\n      let sufIndex = 0\r\n      this.suffixes.forEach((suf, index) => {\r\n        if(suf.exponentOf10 === val){\r\n          sufIndex = index\r\n        }\r\n      })\r\n      return this.suffixes[sufIndex] \r\n    }\r\n  }\r\n\r\n\r\n\r\n  unitsDefinitionsUtils: TUnitDefinitionUtils = {\r\n    getAll: (): TUnitDefinition[]=>{\r\n      return [...this.unitsDefinitions]\r\n    },\r\n    getPrevious: (currSymbol: string): TUnitDefinition => {\r\n      let prevDefIndex = 0\r\n      this.unitsDefinitions.forEach((def, index) => {\r\n        if(def.symbol === currSymbol){\r\n          prevDefIndex = index - 1\r\n        }\r\n      })\r\n      return prevDefIndex >= 0 ? this.unitsDefinitions[prevDefIndex] : this.unitsDefinitions[this.unitsDefinitions.length - 1] \r\n    },\r\n    getNext: (currSymbol: string): TUnitDefinition => {\r\n      let nextDefIndex = 0\r\n      this.unitsDefinitions.forEach((def, index) => {\r\n        if(def.symbol === currSymbol){\r\n          nextDefIndex = index + 1\r\n        }\r\n      })\r\n      return nextDefIndex < this.unitsDefinitions.length ? this.unitsDefinitions[nextDefIndex] : this.unitsDefinitions[0] \r\n    },\r\n    getBySymbol: (currSymbol: string): TUnitDefinition => {\r\n      let defIndex = 0\r\n      this.unitsDefinitions.forEach((def, index) => {\r\n        if(def.symbol === currSymbol){\r\n          defIndex = index \r\n        }\r\n      })\r\n      return this.unitsDefinitions[defIndex]\r\n    },\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n","import React, { useState } from 'react';\r\n\r\nimport \"./UpDownInput.css\"\r\n\r\ntype TProps = {\r\n  value: any,\r\n  onChange: (newVal: string)=>void,\r\n  onNext: ()=>void,\r\n  onPrevious: ()=>void,\r\n  isValueANumber?: boolean,\r\n  extraClasses?: string,\r\n}\r\nconst UpDownInput: React.FC<TProps> = ({children, value, isValueANumber, onNext, onPrevious, onChange, extraClasses}) => {\r\n\r\n  // const willPotentiallyCacheThis: string = value.toString() \r\n  // const [cachedValue, setCachedValue] = useState<string|undefined>()\r\n  \r\n\r\n  return (\r\n    <div className={`up-down-input-component ${extraClasses}`} style={{width: `${value.toString().length+2}rem`}}>\r\n\r\n      <div className=\"up-down-input-control\" onClick={evt=>onNext()}><i className=\"fas fa-caret-up\"></i></div>\r\n      <div className=\"up-down-input-value\">\r\n        {\r\n          isValueANumber && (\r\n            <input type=\"number\" /*pattern=\"[+-]?[0-9]*[.,]?[0-9]*\" value={cachedValue ? value : value} */\r\n                                value={value}\r\n                                onChange={(evt)=>{\r\n                                  // if(!evt.target.value){\r\n                                  //     setCachedValue(willPotentiallyCacheThis);\r\n                                  //     onChange(willPotentiallyCacheThis.replace(\".\",\",\"));\r\n                                  // }else{\r\n                                      // setCachedValue(undefined)\r\n                                      // onChange(evt.target.value.replace(\".\",\",\"));\r\n                                      // evt.tar\r\n                                      onChange(evt.target.value);\r\n                                  // }\r\n                                }} \r\n                                // onInput={evt=>{\r\n                                //   const targetVal = (evt.target as HTMLInputElement).value\r\n                                //   console.log(targetVal)\r\n                                // }}\r\n                                // onKeyPress={evt=>{\r\n                                //   let targetVal = (evt.target as HTMLInputElement).value\r\n                                //   console.log(evt)\r\n                                //   console.log(evt.key)\r\n                                //   evt.key === \"\" && ((evt.target as HTMLInputElement).value = value + \",\")\r\n                                //   // console.log(evt.target.)\r\n                                  \r\n                                //   console.log(targetVal)\r\n                                //   targetVal.replace(\".\",\",\")\r\n                                //   console.log(targetVal)\r\n                                //   // onChange(targetVal)\r\n                                // }}\r\n            />\r\n          )\r\n        }\r\n        {!isValueANumber && (<input type=\"text\" value={value} onChange={evt=>onChange(evt.target.value)}/>)}\r\n      </div>\r\n      <div className=\"up-down-input-control\" onClick={evt=>onPrevious()}><i className=\"fas fa-caret-down\"></i></div>\r\n\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\nUpDownInput.defaultProps = {\r\n  isValueANumber: false,\r\n  extraClasses: \"\"\r\n}\r\nexport default UpDownInput\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ntype TProps1 = {\r\n  onNext: ()=>void,\r\n  onPrevious: ()=>void,\r\n  extraClasses?: string,\r\n}\r\nconst UpDownInputContainer: React.FC<TProps1> = ({children, onNext, onPrevious, extraClasses}) => {\r\n\r\n  return (\r\n    <div className={`up-down-input-component up-down-input-component--container ${extraClasses}`} > {/*style={{width: `${children.toString().length+1}rem`}}>*/}\r\n\r\n      <div className=\"up-down-input-control\" onClick={evt=>onNext()}><i className=\"fas fa-caret-up\"></i></div>\r\n      <div className=\"up-down-input-value\">\r\n        {children}\r\n      </div>\r\n      <div className=\"up-down-input-control\" onClick={evt=>onPrevious()}><i className=\"fas fa-caret-down\"></i></div>\r\n\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\nUpDownInputContainer.defaultProps = {\r\n  extraClasses: \"\"\r\n}\r\n\r\nexport {UpDownInputContainer}","import React, { useState, Fragment } from 'react';\r\n\r\nimport \"./SIValueEditor.css\"\r\nimport UpDownInput from '../UpDownInput/UpDownInput';\r\nimport { TSIValue } from '../../app.controller/app.types';\r\n\r\ntype TProps = {\r\n  sivalue: TSIValue,\r\n  onChange: (newVal: TSIValue)=>void,\r\n  extraClasses?: string,\r\n}\r\nconst SIValueEditor: React.FC<TProps> = ({sivalue, onChange, extraClasses}) => {\r\n  \r\n  const handleNewMantisse = (sivalue: TSIValue, mantisse: number)=>{\r\n    sivalue.mantisse = mantisse\r\n    onChange(sivalue)\r\n  }\r\n  const handleNewExponent = (sivalue: TSIValue, exponent: number)=>{\r\n    sivalue.exponent = exponent\r\n    onChange(sivalue)\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <div className=\"si-value-title\"><h3>Enter the value to be converted</h3></div>\r\n      <div className={`si-value-editor ${extraClasses}`}>\r\n\r\n        \r\n              \r\n        <div className=\"si-value-mantisse\">\r\n          <UpDownInput value={sivalue.mantisse} \r\n                      onChange={(val)=>handleNewMantisse(sivalue, typeof val === \"number\" ? val : parseFloat(val))} \r\n                      onNext={()=>handleNewMantisse(sivalue, sivalue.mantisse+1)} \r\n                      onPrevious={()=>handleNewMantisse(sivalue, sivalue.mantisse-1)}\r\n                      isValueANumber={true}\r\n          />\r\n        </div>\r\n        <div className=\"fixed-text\"><p>x 10</p> </div>\r\n        <div className=\"si-value-exponent\">\r\n          <UpDownInput value={sivalue.exponent} \r\n                      onChange={(val)=>handleNewExponent(sivalue, typeof val === \"number\" ? val : parseFloat(val))} \r\n                      onNext={()=>handleNewExponent(sivalue, sivalue.exponent+1)} \r\n                      onPrevious={()=>handleNewExponent(sivalue, sivalue.exponent-1)}\r\n                      isValueANumber={true}\r\n          />\r\n        </div>\r\n\r\n      </div>\r\n    </Fragment>\r\n\r\n  )\r\n\r\n}\r\n\r\n\r\nSIValueEditor.defaultProps = {\r\n  extraClasses: \"\"\r\n}\r\nexport default SIValueEditor","import { TUnit, TSuffix, TDimension } from \"../app.controller/app.types\";\r\nimport { SISuffix } from \"../app.controller/app.native.data\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst buildMathJaxUnits = (units: TUnit[], addParenthesis: boolean, getSuffixByValue: (suff: SISuffix)=>TSuffix):string => {\r\n  let num: string = ''\r\n  let den: string = ''\r\n  units.forEach(unit => {\r\n    unit.exponent >= 0 && (num = num + buildMathJaxUnit(unit.symbol, getSuffixByValue(unit.suffix/unit.exponent), unit.exponent, addParenthesis));\r\n    unit.exponent < 0 &&  (den = den + buildMathJaxUnit(unit.symbol, getSuffixByValue(unit.suffix/unit.exponent), unit.exponent, addParenthesis));\r\n  })\r\n  // return `(${num === '' ? '1' : num})${den === '' ? '' : `/(${den})`}`\r\n  return `${den === '' ? `${num === '' ? '1' : num}` : `(${num === '' ? '1' : num})/(${den})`}`\r\n}\r\n\r\nconst buildMathJaxUnit = (unitSymbol: string, unitSuffix: TSuffix, unitExponent: number, addParenthesis: boolean):string => {\r\n  \r\n  // let suffix = unit.suffix && SISuffix[unit.suffix] !== SISuffix[SISuffix.UNITY] ? nativeData.getSuffixObject(unit.suffix).symbol  : ''\r\n  let suffix = unitSuffix.symbol\r\n  let exp = Math.abs(unitExponent) === 1 ? '' : `^${Math.abs(unitExponent)}`\r\n  let tmp = ''\r\n  unitExponent >= 0 && (tmp = tmp + `${addParenthesis?'(':''}${suffix}\\\\${unitSymbol}${addParenthesis?')':''}${exp}`);\r\n  unitExponent < 0 &&  (tmp = tmp + `${addParenthesis?'(':''}${suffix}\\\\${unitSymbol}${addParenthesis?')':''}${exp}`);\r\n\r\n  return tmp\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst buildMathJaxDimensions = (dimensions: TDimension[], addParenthesis: boolean):string => {\r\n  let num: string = ''\r\n  let den: string = ''\r\n  dimensions.forEach(dim => {\r\n    dim.exponent >= 0 && (num = num + buildMathJaxDimension(dim.symbol, dim.exponent, addParenthesis));\r\n    dim.exponent < 0 &&  (den = den + buildMathJaxDimension(dim.symbol, dim.exponent, addParenthesis));\r\n  })\r\n  return `${den === '' ? `${num === '' ? '1' : num}` : `(${num === '' ? '1' : num})/(${den})`}`\r\n}\r\n\r\nconst buildMathJaxDimension = (dimensionSymbol: string, dimensionExponent: number, addParenthesis: boolean):string => {\r\n  \r\n  let exp = Math.abs(dimensionExponent) === 1 ? '' : `^${Math.abs(dimensionExponent)}`\r\n  let tmp = ''\r\n  dimensionExponent >= 0 && (tmp = tmp + `${addParenthesis?'(':''}\\\\${dimensionSymbol}${exp}${addParenthesis?')':''}`);\r\n  dimensionExponent < 0 &&  (tmp = tmp + `${addParenthesis?'(':''}\\\\${dimensionSymbol}${exp}${addParenthesis?')':''}`);\r\n\r\n  return tmp\r\n}\r\nconst toCapital = (str: string): string => str.substr(0,1).toUpperCase() + str.substr(1).toLowerCase()\r\n// const round = (val: number, dec: number)=>Number(`${Math.round(Number(`${val}e${dec}`))}e-${dec}`)\r\nconst round = (val: number, dec: number)=>Number(`${Math.round(Number(`${val}e${dec}`))}e-${dec}`)\r\n\r\n\r\nexport {buildMathJaxUnits, buildMathJaxUnit, buildMathJaxDimensions, toCapital, round}","import React, { useState, useRef, useEffect } from 'react';\r\n\r\nimport \"./SIUnitEditor.css\"\r\nimport UpDownInput, { UpDownInputContainer } from '../UpDownInput/UpDownInput';\r\nimport { TSIValue, TUnit, TOpUnit, TSuffix, TUnitDefinition, TSuffixUtils, TUnitDefinitionUtils } from '../../app.controller/app.types';\r\nimport { SISuffix } from '../../app.controller/app.native.data';\r\nimport { buildMathJaxUnit } from '../mathjax.utils';\r\n\r\ntype TProps = {\r\n  siunit: TUnit,\r\n  onChange: (newVal: TUnit)=>void,\r\n  suffixUtils: TSuffixUtils,\r\n  mustShowParenthesis: boolean,\r\n  unitDefUtils: TUnitDefinitionUtils,\r\n  extraClasses?: string,\r\n  onOpenSuffixPane: ()=>void\r\n  onOpenUnitPane: ()=>void\r\n}\r\nconst SIUnitEditor: React.FC<TProps> = ({siunit, onChange, extraClasses, suffixUtils, unitDefUtils, mustShowParenthesis, onOpenSuffixPane, onOpenUnitPane}) => {\r\n  \r\n  let pRef1 = useRef<any>()\r\n  useEffect(() => {\r\n    let mathjaxexpression = buildMathJaxUnit(siunit.symbol, suffixUtils.getByValue(siunit.suffix/siunit.exponent), siunit.exponent, mustShowParenthesis);\r\n    siunit.exponent < 0 && (mathjaxexpression = `(1)/(${mathjaxexpression})`)\r\n    pRef1.current && (pRef1.current.innerHTML = `\\`${mathjaxexpression}\\``);\r\n    window.MathJax && window.MathJax.typeset && window.MathJax.typeset()\r\n  });\r\n  \r\n\r\n  const handleNewSuffix = (siunit: TUnit, suffix: SISuffix)=>{\r\n    siunit.suffix = suffix \r\n    onChange(siunit)\r\n  }\r\n  const handleNewUnit = (siunit: TUnit, symbol: string)=>{\r\n    siunit.suffix = siunit.suffix/siunit.exponent \r\n    siunit.symbol = symbol \r\n    onChange(siunit)\r\n  }\r\n  const handleNewExponent = (siunit: TUnit, exponent: number)=>{\r\n    siunit.suffix = siunit.suffix/siunit.exponent;\r\n    if(exponent === 0){\r\n      if(siunit.exponent < exponent){ siunit.exponent = 1; }\r\n      else { siunit.exponent = -1; } \r\n    } else { \r\n      siunit.exponent = exponent; \r\n    }\r\n    onChange(siunit)\r\n  }\r\n  const toCapital = (str: string): string => str.substr(0,1).toUpperCase() + str.substr(1).toLowerCase()\r\n  \r\n\r\n\r\n\r\n  const currSuffix: SISuffix = suffixUtils.getClosest(siunit.suffix/siunit.exponent).exponentOf10\r\n\r\n\r\n\r\n  console.log('[SIUnitEditor]: ',siunit, siunit.suffix, siunit.exponent, siunit.suffix/siunit.exponent, currSuffix)\r\n\r\n  return (\r\n    <div className={`si-unit-editor ${extraClasses}`}>\r\n\r\n        <div className=\"si-unit-mathjax\" ref={pRef1}></div>\r\n            \r\n        <div className=\"si-unit-container\">\r\n            <UpDownInputContainer onNext={()=>handleNewSuffix(siunit, suffixUtils.getNext(currSuffix).exponentOf10)} \r\n                                  onPrevious={()=>handleNewSuffix(siunit, suffixUtils.getPrevious(currSuffix).exponentOf10)} \r\n            >\r\n                <p className={`si-unit-text ${currSuffix === 0 ? 'text-transparent' : ''}`} onClick={evt=>onOpenSuffixPane()}>\r\n                  {\r\n                      currSuffix > 3 \r\n                      ? toCapital(SISuffix[currSuffix]) \r\n                      : SISuffix[currSuffix].toLowerCase() \r\n                  }\r\n                </p>\r\n\r\n            </UpDownInputContainer>\r\n\r\n\r\n            <div className=\"si-unit-separator\"></div>\r\n            \r\n            \r\n            <UpDownInputContainer onNext={()=>handleNewUnit(siunit, unitDefUtils.getNext(siunit.symbol).symbol)}\r\n                                  onPrevious={()=>handleNewUnit(siunit, unitDefUtils.getPrevious(siunit.symbol).symbol)}\r\n            >\r\n                 <p className=\"si-unit-text\" onClick={evt=>onOpenUnitPane()}>{siunit.symbol + \" \"}</p>\r\n            </UpDownInputContainer>\r\n            <UpDownInput value={siunit.exponent} \r\n                        onChange={(val)=>handleNewExponent(siunit, parseFloat(val))} \r\n                        onNext={()=>handleNewExponent(siunit, siunit.exponent + 1)} \r\n                        onPrevious={()=>handleNewExponent(siunit, siunit.exponent - 1)} \r\n                        isValueANumber={true}\r\n                        extraClasses=\"si-unit-exponent\"\r\n            />\r\n        </div>\r\n\r\n\r\n\r\n\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\nSIUnitEditor.defaultProps = {\r\n  extraClasses: \"\"\r\n}\r\nexport default SIUnitEditor","import React, { useState, useRef, useEffect } from 'react';\r\n\r\nimport \"./Conversion.css\"\r\nimport { TSIValue, TOpUnit, TSuffix } from '../../app.controller/app.types';\r\nimport { SISuffix } from '../../app.controller/app.native.data';\r\nimport { buildMathJaxUnits, buildMathJaxDimensions, round } from '../mathjax.utils';\r\n\r\n\r\ntype TProps = {\r\n  initialValue: TSIValue,\r\n  targetValue: TSIValue,\r\n  initialUnits: TOpUnit,\r\n  targetUnits: TOpUnit,\r\n  mustShowParenthesis: boolean,\r\n  getSuffix: (suff: SISuffix) => TSuffix\r\n  extraClasses?: string,\r\n}\r\nconst Conversion: React.FC<TProps> = ({initialValue, targetValue, extraClasses, initialUnits, targetUnits, getSuffix, mustShowParenthesis}) => {\r\n  \r\n  let pRef_start = useRef<any>()\r\n  let pRef_equal = useRef<any>()\r\n  let pRef_final = useRef<any>()\r\n  let dRef_start = useRef<any>()\r\n  let dRef_equal = useRef<any>()\r\n  let dRef_final = useRef<any>()\r\n  const dimensionsMatch = JSON.stringify(initialUnits.dimension) === JSON.stringify(targetUnits.dimension)\r\n  useEffect(() => {\r\n\r\n    pRef_start.current && (pRef_start.current.innerHTML = `\\`${initialValue.mantisse}&nbsp;*&nbsp;10^(${initialValue.exponent})&nbsp;${buildMathJaxUnits(initialUnits.units, mustShowParenthesis, getSuffix)}\\``);\r\n    pRef_equal.current && (pRef_equal.current.innerHTML = `\\`=\\``);\r\n    pRef_final.current && (pRef_final.current.innerHTML = `\\`${round(targetValue.mantisse, 4)}&nbsp;*&nbsp;10^(${targetValue.exponent})&nbsp;${buildMathJaxUnits(targetUnits.units, mustShowParenthesis, getSuffix)}\\``);\r\n\r\n    window.MathJax && window.MathJax.typeset && window.MathJax.typeset()\r\n  });\r\n  useEffect(() => {\r\n\r\n    dRef_start.current && (dRef_start.current.innerHTML = `\\`${buildMathJaxDimensions(initialUnits.dimension, false)}\\``);\r\n    dRef_equal.current && (dRef_equal.current.innerHTML = `\\`${dimensionsMatch ? '=' : '≠'}\\``);\r\n    dRef_final.current && (dRef_final.current.innerHTML = `\\`${buildMathJaxDimensions(targetUnits.dimension, false)}\\``);\r\n\r\n    window.MathJax && window.MathJax.typeset && window.MathJax.typeset()\r\n  });\r\n\r\n\r\n  return (\r\n    <div className={`si-conversion ${extraClasses}`}>\r\n\r\n      <div className={`si-conversion-display`}>\r\n        <div ref={pRef_start} className=\"mathjax-item\"></div>\r\n        <div ref={pRef_equal} className=\"mathjax-item\"></div>\r\n        <div ref={pRef_final} className=\"mathjax-item mathjax-item--result\"></div>\r\n      </div>\r\n\r\n\r\n      <div className=\"si-conversion-dimension-title\">Dimensions</div>\r\n      <div className={`si-conversion-dimension-container ${dimensionsMatch?'bg-ok bg-green-200':'bg-danger bg-red-200'}`}>\r\n        <div className={`si-conversion-dimension ${dimensionsMatch?'text-green-700':'text-red-800'}`}>\r\n          <div ref={dRef_start} className=\"mathjax-item\"></div>\r\n          <div ref={dRef_equal} className=\"mathjax-item\"></div>\r\n          <div ref={dRef_final} className=\"mathjax-item\"></div>\r\n        </div>\r\n        <div className={`si-conversion-match`}>\r\n          {\r\n            !dimensionsMatch && (\r\n              <p>Dimensions Do Not Match</p>\r\n            )\r\n          }\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\nConversion.defaultProps = {\r\n  extraClasses: \"\"\r\n}\r\nexport default Conversion","import React, { useState } from 'react';\r\n\r\nimport \"./SlideUpPane.css\"\r\n\r\ntype TProps = {\r\n  state: boolean,\r\n  onClose: ()=>void,\r\n  extraClasses?: string,\r\n}\r\nconst SlideUpPane: React.FC<TProps> = ({children, state, onClose, extraClasses}) => {\r\n\r\n\r\n\r\n  return (\r\n    <div className={`bottom-pane ${state?'bottom-pane--visible':''}`}>\r\n      <div className=\"bottom-pane-inner\">\r\n        <label className=\"bottom-pane-close\" htmlFor=\"bottom-pane-close\"><i className=\"fas fa-times\"></i><input type=\"checkbox\" id=\"bottom-pane-close\" checked={state} onChange={evt=>onClose()}/></label>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\nSlideUpPane.defaultProps = {\r\n  extraClasses: \"\"\r\n}\r\nexport default SlideUpPane\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ntype TProps1 = {\r\n  onNext: ()=>void,\r\n  onPrevious: ()=>void,\r\n  extraClasses?: string,\r\n}\r\nconst UpDownInputContainer: React.FC<TProps1> = ({children, onNext, onPrevious, extraClasses}) => {\r\n\r\n  return (\r\n    <div className={`up-down-input-component up-down-input-component--container ${extraClasses}`} > {/*style={{width: `${children.toString().length+1}rem`}}>*/}\r\n\r\n      <div className=\"up-down-input-control\" onClick={evt=>onNext()}><i className=\"fas fa-caret-up\"></i></div>\r\n      <div className=\"up-down-input-value\">\r\n        {children}\r\n      </div>\r\n      <div className=\"up-down-input-control\" onClick={evt=>onPrevious()}><i className=\"fas fa-caret-down\"></i></div>\r\n\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\nUpDownInputContainer.defaultProps = {\r\n  extraClasses: \"\"\r\n}\r\n\r\nexport {UpDownInputContainer}","import React, { useRef, useState } from 'react';\n\nimport './App.css';\nimport './utils.css';\nimport AppController from './app.controller/app.controller';\nimport { TSIValue, TOpUnit, TUnit, TUnitDefinition, TSuffix } from './app.controller/app.types';\nimport { SISuffix } from './app.controller/app.native.data';\nimport SIValueEditor from './components/SIValueEditor/SIValueEditor';\nimport SIUnitEditor from './components/SIUnitEditor/SIUnitEditor';\nimport Conversion from './components/Conversion/Conversion';\nimport { toCapital } from './components/mathjax.utils';\nimport SlideUpPane, { UpDownInputContainer } from './components/SlideUpPane/SlideUpPane';\n\ndeclare global {\n  interface Window { MathJax: any; }\n}\ntype TUiItem = {\n  initialValue: TSIValue,\n  initialUnits: TOpUnit,\n  targetUnits: TOpUnit,\n  targetValue: TSIValue,\n  author: string\n}\ntype TControls = {\n  initialvalue: boolean,\n  initialunits: boolean,\n  targetunits: boolean,\n  viewsuffixes: boolean,\n  viewunits: boolean,\n  showparenthesis: boolean,\n}\nfunction App() {\n\n  window.MathJax && console.log(window.MathJax)\n\n  let ac = useRef<AppController|null>(null);\n  (ac.current === null) && (ac.current = new AppController());\n  const {unitsDefinitionsUtils, suffixUtils} = ac.current\n  console.log('[App]: Conversion Manager Version: ', ac.current.getVersion())\n\n  const controlsDefault = {\n    initialvalue: false,\n    initialunits: false,\n    targetunits: false,\n    viewsuffixes: false,\n    viewunits: false,\n    showparenthesis: false,\n  }\n  const [controls, setControls] = useState<TControls>(controlsDefault)\n  const {showparenthesis, ..._showSideBarData} = controls\n  // const showSideBarData = Object.values(_showSideBarData).reduce((acc: boolean, val: boolean)=>acc||val, false)\n\n\n\n\n  const [uiConversion, _setUiConversion] = useState<TUiItem>({\n    initialValue: { mantisse: 1, exponent: 1 },\n    initialUnits: ac.current.buildOpUnit([{suffix: SISuffix.CENTI, symbol: 'm', exponent: 2},{suffix: SISuffix.DECI, symbol: 's', exponent: 2}]),\n    targetUnits: ac.current.buildOpUnit([{suffix: SISuffix.CENTI, symbol: 'm', exponent: 2},{suffix: SISuffix.DECI, symbol: 's', exponent: 2}]),\n    targetValue: { mantisse: 1, exponent: 1 },\n    author: \"\"\n  })\n  const setUiConversion = async (ac: AppController, currUiConversion: TUiItem, key: string, val: any)=>{\n    let curr = {...currUiConversion}\n\n    key.toLowerCase() === \"initialValue\".toLowerCase() && val && (curr.initialValue = {...val as TSIValue})\n    key.toLowerCase() === \"initialUnits\".toLowerCase() && val && (curr.initialUnits = ac.buildOpUnit(val as TUnit[]))\n    key.toLowerCase() === \"targetUnits\".toLowerCase() && val && (curr.targetUnits = ac.buildOpUnit(val as TUnit[]))\n    key.toLowerCase() === \"author\".toLowerCase() && val && (curr.author = val as string)\n    if(key.toLowerCase() !== \"author\".toLowerCase()){\n      const tmp = await ac.convert(curr.initialValue, curr.initialUnits, curr.targetUnits)\n                          .catch(err => console.log(err));\n      tmp && (curr.targetValue = {...tmp})\n    }\n    \n    console.log(key, val, curr.initialUnits)\n\n    _setUiConversion({...curr})\n  }\n  console.log(uiConversion.initialUnits.units)\n\n\n\n\n  // const [unitPane, usingPaneForControl] = useState<boolean>(false)\n  const [siunitToAdd, setSiunitToAdd] = useState<TUnitDefinition>(unitsDefinitionsUtils.getBySymbol(\"m\"))\n  const [siunitOnDisplay, setSiunitOnDisplay] = useState<TUnit>({suffix: SISuffix.UNITY, symbol: 'm', exponent: 0})\n  const onResetApp = ()=>{\n    // setAlsoShowUnitsPane(false)\n    setControls({...controlsDefault})\n    setSiunitToAdd(unitsDefinitionsUtils.getBySymbol(\"m\"))\n    ac.current && _setUiConversion({\n      initialValue: { mantisse: 1, exponent: 1 },\n      initialUnits: ac.current.buildOpUnit([{suffix: SISuffix.CENTI, symbol: 'm', exponent: 2},{suffix: SISuffix.DECI, symbol: 's', exponent: 2}]),\n      targetUnits: ac.current.buildOpUnit([{suffix: SISuffix.CENTI, symbol: 'm', exponent: 2},{suffix: SISuffix.DECI, symbol: 's', exponent: 2}]),\n      targetValue: { mantisse: 1, exponent: 1 },\n      author: \"\"\n    })\n  }\n  \n  \n  \n  \n  \n  const updateUnitCollection = (unCollection: TUnit[], unObj: TUnit, unIndex: number): TUnit[]=>{\n    const uns = unCollection.map((tmp, idx) => {\n      (unIndex === idx) && (tmp = {...unObj});\n      (unIndex !== idx) && (tmp.suffix /= tmp.exponent);\n      return tmp;\n    })\n    return uns\n  }\n  const updateControlObj = (controlsDefault: TControls, controlsCurrent: TControls, updateKeys: string[], updateVals: boolean[])=>{\n    let state = {...controlsDefault}; \n\n    for(let idx in updateKeys){\n      switch(updateKeys[idx]){\n        case 'initialunits': state.initialunits = updateVals[idx]; break;\n        case 'initialvalue': state.initialvalue = updateVals[idx]; break;\n        case 'targetunits': state.targetunits = updateVals[idx]; break;\n        case 'viewsuffixes': state.viewsuffixes = updateVals[idx]; break;\n        case 'viewunits': state.viewunits = updateVals[idx]; break;\n        default: break;\n      }\n    }\n\n    state.showparenthesis = controlsCurrent.showparenthesis; \n    return state\n  }\n  let onPaneItemClick = useRef<Function|null>(null)\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  return (\n    <div className=\"App d-flex-row bg-white\">\n\n        <div className=\"app-container bg-red-100\">\n\n\n          \n          \n          <div className=\"current-conversion\">\n            <Conversion initialValue={uiConversion.initialValue}\n                        targetValue={uiConversion.targetValue}\n                        initialUnits={uiConversion.initialUnits}\n                        targetUnits={uiConversion.targetUnits}\n                        getSuffix={suffixUtils.getByValue}\n                        mustShowParenthesis={showparenthesis}\n            />\n          </div>\n\n\n\n\n\n\n          <SlideUpPane state={controls.initialvalue} onClose={()=>{let state = {...controlsDefault}; state.showparenthesis = controls.showparenthesis; state.initialvalue = false; setControls(state)}}>\n            <SIValueEditor sivalue={{...uiConversion.initialValue}} \n                         onChange={newVal=>ac.current && setUiConversion(ac.current, uiConversion, \"initialValue\", newVal)}\n            />\n          </SlideUpPane>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n          <SlideUpPane state={controls.initialunits} onClose={()=>{let state = {...controlsDefault}; state.showparenthesis = controls.showparenthesis; state.initialunits = false; setControls(state)}}>\n            {\n              uiConversion.initialUnits.units.map((un, index) => { \n                return (\n                  <SIUnitEditor siunit={un} \n                                key={index}\n                                suffixUtils={suffixUtils}\n                                unitDefUtils={unitsDefinitionsUtils}\n                                mustShowParenthesis={showparenthesis}\n                                onOpenSuffixPane={()=>{\n                                  onPaneItemClick.current = (suff: TSuffix)=>{\n                                    setControls(updateControlObj(controlsDefault, controls, [\"viewsuffixes\", \"initialunits\"], [false, true]))\n                                    let _un = {...un}\n                                    _un.suffix = suff.exponentOf10 \n                                    ac.current && setUiConversion(ac.current, uiConversion, \"initialUnits\", updateUnitCollection(uiConversion.initialUnits.units, _un, index))\n                                    onPaneItemClick.current = null;\n                                  }\n                                  setSiunitOnDisplay(tmp => {tmp.suffix = un.suffix/un.exponent; tmp.symbol = un.symbol ; return {...tmp}})\n                                  setControls(updateControlObj(controlsDefault, controls, [\"viewsuffixes\"], [true]))\n                                }}\n                                onOpenUnitPane={()=>{\n                                  onPaneItemClick.current = (def: TUnitDefinition)=>{\n                                    setControls(updateControlObj(controlsDefault, controls, [\"viewsuffixes\", \"initialunits\"], [false, true]))\n                                    let _un = {...un}\n                                    _un.symbol = def.symbol\n                                    _un.suffix = _un.suffix/_un.exponent  \n                                    ac.current && setUiConversion(ac.current, uiConversion, \"initialUnits\", updateUnitCollection(uiConversion.initialUnits.units, _un, index))\n                                    onPaneItemClick.current = null;\n                                  }\n                                  setSiunitOnDisplay(tmp => {tmp.suffix = un.suffix/un.exponent; tmp.symbol = un.symbol ; return {...tmp}})\n                                  setControls(updateControlObj(controlsDefault, controls, [\"viewunits\"], [true]))\n                                }}\n                                onChange={newVal=>ac.current && setUiConversion(ac.current, uiConversion, \"initialUnits\", updateUnitCollection(uiConversion.initialUnits.units, newVal, index))}\n                  />\n                )\n              })\n            }\n            <div className=\"si-unit-editor-add-unit\" >\n              <div className=\"si-unit-editor-add-button\" onClick={evt=>ac.current && setUiConversion(ac.current, uiConversion, \"initialUnits\", [...uiConversion.initialUnits.units.map(un=>{un.suffix = un.suffix/un.exponent; return {...un}}), {suffix: SISuffix.UNITY, symbol: siunitToAdd.symbol, exponent: 1}])}>\n                <i className=\"fas fa-plus\"></i>\n              </div>\n              <p>Add Unit: </p>\n              <div>\n                <UpDownInputContainer onNext={()=>setSiunitToAdd({...unitsDefinitionsUtils.getNext(siunitToAdd.symbol)})}\n                                      onPrevious={()=>setSiunitToAdd({...unitsDefinitionsUtils.getPrevious(siunitToAdd.symbol)})}\n                >\n                    {siunitToAdd.symbol + \" \"}\n                </UpDownInputContainer>\n              </div>\n            </div>\n          </SlideUpPane>\n\n\n          <SlideUpPane state={controls.targetunits} onClose={()=>{let state = {...controlsDefault}; state.showparenthesis = controls.showparenthesis; state.targetunits = false; setControls(state)}}>\n            {\n              uiConversion.targetUnits.units.map((un, index) => { \n                return (\n                  <SIUnitEditor siunit={un} \n                                key={index}\n                                suffixUtils={suffixUtils}\n                                unitDefUtils={unitsDefinitionsUtils}\n                                onOpenSuffixPane={()=>{\n                                  onPaneItemClick.current = (suff: TSuffix)=>{\n                                    setControls(updateControlObj(controlsDefault, controls, [\"viewsuffixes\", \"targetunits\"], [false, true]))\n                                    let _un = {...un}\n                                    _un.suffix = suff.exponentOf10 \n                                    ac.current && setUiConversion(ac.current, uiConversion, \"targetUnits\", updateUnitCollection(uiConversion.targetUnits.units, _un, index))\n                                    onPaneItemClick.current = null;\n                                  }\n                                  setSiunitOnDisplay(tmp => {tmp.suffix = un.suffix/un.exponent; tmp.symbol = un.symbol ; return {...tmp}})\n                                  setControls(updateControlObj(controlsDefault, controls, [\"viewsuffixes\"], [true]))\n                                }}\n                                onOpenUnitPane={()=>{\n                                  onPaneItemClick.current = (def: TUnitDefinition)=>{\n                                    setControls(updateControlObj(controlsDefault, controls, [\"viewsuffixes\", \"targetunits\"], [false, true]))\n                                    let _un = {...un}\n                                    _un.symbol = def.symbol\n                                    _un.suffix = _un.suffix/_un.exponent  \n                                    ac.current && setUiConversion(ac.current, uiConversion, \"targetUnits\", updateUnitCollection(uiConversion.targetUnits.units, _un, index))\n                                    onPaneItemClick.current = null;\n                                  }\n                                  setSiunitOnDisplay(tmp => {tmp.suffix = un.suffix/un.exponent; tmp.symbol = un.symbol ; return {...tmp}})\n                                  setControls(updateControlObj(controlsDefault, controls, [\"viewunits\"], [true]))\n                                }}\n                                mustShowParenthesis={showparenthesis}\n                                onChange={newVal=>ac.current && setUiConversion(ac.current, uiConversion, \"targetUnits\", updateUnitCollection(uiConversion.targetUnits.units, newVal, index))}\n                  />\n                )\n              })\n            }\n            <div className=\"si-unit-editor-add-unit\" >\n              <div className=\"si-unit-editor-add-button\" onClick={evt=>ac.current && setUiConversion(ac.current, uiConversion, \"targetUnits\", [...uiConversion.targetUnits.units.map(un=>{un.suffix = un.suffix/un.exponent; return {...un}}), {suffix: SISuffix.UNITY, symbol: siunitToAdd.symbol, exponent: 1}])}>\n                <i className=\"fas fa-plus\"></i>\n              </div>\n              <p>Add Unit: </p>\n              <div>\n                <UpDownInputContainer onNext={()=>setSiunitToAdd({...unitsDefinitionsUtils.getNext(siunitToAdd.symbol)})}\n                                      onPrevious={()=>setSiunitToAdd({...unitsDefinitionsUtils.getPrevious(siunitToAdd.symbol)})}\n                >\n                    {siunitToAdd.symbol + \" \"}\n                </UpDownInputContainer>\n              </div>\n            </div>\n          </SlideUpPane>\n        </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        <div className=\"app-sidebar bg-gray-800 text-white box-shadow\">\n\n\n          <div className={`app-side-data-container ${controls.viewsuffixes ? 'app-side-data-container--visible' : ''}`}>\n            {\n              suffixUtils.getAll().map((un, id) => (\n                <div key={id} onClick={ evt => { onPaneItemClick && onPaneItemClick.current && onPaneItemClick.current(un); setSiunitOnDisplay(tmp => {tmp.suffix=un.exponentOf10; return {...tmp}}) } } className={`app-side-data-item app-side-data-item-suffix ${un.exponentOf10 === 0?'app-side-data-item-suffix--disabled':''} ${siunitOnDisplay.suffix===un.exponentOf10?'app-side-data-item-suffix--active':''}`}>\n                  <p className=\"suffix-exponent\">10 <span>{un.exponentOf10>0?'+':''}{un.exponentOf10}</span></p>\n                  <p className=\"suffix-details\">\n                    <span className=\"suffix-name\">{un.exponentOf10 > 0 ? toCapital(un.name) : un.name.toLowerCase()}</span>\n                    <span className=\"suffix-symbol\">{un.symbol}&nbsp;</span>\n                  </p>\n                </div>\n              ))\n            }\n          </div>\n\n\n\n          <div className={`app-side-data-container ${controls.viewunits ? 'app-side-data-container--visible' : ''}`}>\n            {\n              unitsDefinitionsUtils.getAll().map((un, id) => (\n                <div key={id} onClick={ evt => onPaneItemClick && onPaneItemClick.current && onPaneItemClick.current(un) }  className={`app-side-data-item app-side-data-item-unit-definition  ${siunitOnDisplay.symbol===un.symbol?'app-side-data-item-unit-definition--active':''}`}>\n                  <p className=\"definition-symbol\">{un.symbol}</p>\n                  <p className=\"definition-details\">\n                    <span className=\"definition-name\">{un.name}</span>\n                    <span className=\"definition-measures\">*{un.measurement}</span>\n                  </p>\n                </div>\n              ))\n            }\n          </div>\n\n\n\n\n\n\n\n\n\n\n\n          <div className=\"app-side-controls-container bg-gray-800\">\n            <label htmlFor=\"control-initialunits\" className={`sidebar-control-container ${controls.initialunits?'sidebar-control-container--selected':''}`}><input type=\"checkbox\" id=\"control-initialunits\" checked={controls.initialunits} onChange={evt => { let state = {...controlsDefault}; state.showparenthesis = controls.showparenthesis; state.initialunits = evt.target.checked; setControls(state)}}/><div className=\"sidebar-control_details\">Initial Units</div><div className=\"sidebar-control\"><i className=\"fas fa-balance-scale\"></i></div></label>\n            <label htmlFor=\"control-initialvalue\" className={`sidebar-control-container ${controls.initialvalue?'sidebar-control-container--selected':''}`}><input type=\"checkbox\" id=\"control-initialvalue\" checked={controls.initialvalue} onChange={evt => { let state = {...controlsDefault}; state.showparenthesis = controls.showparenthesis; state.initialvalue = evt.target.checked; setControls(state)}}/><div className=\"sidebar-control_details\">Value To Convert</div><div className=\"sidebar-control\"><i className=\"fas fa-sort-numeric-up\"></i></div></label>\n            <label htmlFor=\"control-targetunits\" className={`sidebar-control-container ${controls.targetunits?'sidebar-control-container--selected':''}`}><input type=\"checkbox\" id=\"control-targetunits\" checked={controls.targetunits} onChange={evt => { let state = {...controlsDefault}; state.showparenthesis = controls.showparenthesis; state.targetunits = evt.target.checked; setControls(state)}}/><div className=\"sidebar-control_details\">Final Units</div><div className=\"sidebar-control\"><i className=\"fas fa-balance-scale-right\"></i></div></label>\n            <label htmlFor=\"control-viewsuffixes\" className={`sidebar-control-container ${controls.viewsuffixes?'sidebar-control-container--selected':''}`}><input type=\"checkbox\" id=\"control-viewsuffixes\" checked={controls.viewsuffixes} onChange={evt => { let state = {...controlsDefault}; state.showparenthesis = controls.showparenthesis; state.viewsuffixes = evt.target.checked; setControls(state)}}/><div className=\"sidebar-control_details\">View Suffixes</div><div className=\"sidebar-control\"><i className=\"fas fa-sort-amount-down\"></i></div></label>\n            <label htmlFor=\"control-viewunits\" className={`sidebar-control-container ${controls.viewunits?'sidebar-control-container--selected':''}`}><input type=\"checkbox\" id=\"control-viewunits\" checked={controls.viewunits} onChange={evt => { let state = {...controlsDefault}; state.showparenthesis = controls.showparenthesis; state.viewunits = evt.target.checked; setControls(state)}}/><div className=\"sidebar-control_details\">View Units</div><div className=\"sidebar-control\"><i className=\"fas fa-font\"></i></div></label>\n            <label htmlFor=\"control-showparenthesis\" className={`sidebar-control-container ${controls.showparenthesis?'sidebar-control-container--selected':''}`}><input type=\"checkbox\" id=\"control-showparenthesis\" checked={controls.showparenthesis} onChange={evt => { const state = evt.target.checked; setControls(cnt => {cnt.showparenthesis=state;return {...cnt}})}}/><div className=\"sidebar-control_details\">Show/Hide Parenthesis</div><div className=\"sidebar-control sidebar-control-parenthesis\"><p>()</p></div></label>\n            <div className=\"sidebar-control-container\" onClick={evt=>onResetApp()}><div className=\"sidebar-control_details\">Reset App</div><div className=\"sidebar-control\"><i className=\"fas fa-undo-alt\"></i></div></div>\n          </div>\n\n        </div>\n\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}