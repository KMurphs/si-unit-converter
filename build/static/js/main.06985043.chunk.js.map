{"version":3,"sources":["app.controller/app.native.data.ts","app.controller/app.controller.ts","components/UpDownInput/UpDownInput.tsx","components/SIValueEditor/SIValueEditor.tsx","components/mathjax.utils.ts","components/SIUnitEditor/SIUnitEditor.tsx","components/Conversion/Conversion.tsx","components/SlideUpPane/SlideUpPane.tsx","components/Modal/Modal.tsx","components/CustomInput/CustomInput.tsx","components/CustomCheckbox/CustomCheckbox.tsx","components/SIUnitEditor/AddSIUnitButton.tsx","components/SIDefinitionEditor/SIDefinitionEditor.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["SISuffix","nativeSuffixes","symbol","name","YOTTA","toLowerCase","exponentOf10","ZETTA","EXA","PETA","TERA","GIGA","MEGA","KILO","HECTO","DECA","UNITY","DECI","CENTI","MILLI","MICRO","NANO","PICO","FENTO","nativeUnitDefinitions","measurement","description","isBasicDimension","value","components","factor","units","AppController","unitsDefinitions","suffixes","history","storage","definitionKey","getDefinitions","localStorage","getItem","JSON","parse","saveDefinitions","deleteDefinitions","setItem","stringify","removeItem","historyKey","getHistory","saveHistory","deleteHistory","suffixUtils","getAll","getPrevious","currSuf","prevSufIndex","forEach","suf","index","length","getNext","nextSufIndex","getByValue","sufIndex","getClosest","val","enumVals","tmp","isNaN","Number","push","sort","a","b","item","unitsDefinitionsUtils","currSymbol","prevDefIndex","def","nextDefIndex","getBySymbol","defIndex","defDict","this","Object","keys","map","key","unitsWithKnownDefinition","unitsToBeProcessed","un","currDef","unit","exponent","suffix","Error","validUnits","dimensionsDict","collectDimensions","rawUnit","dict","currUnit","_rawUnit","filter","isNewDimension","undefined","Math","pow","dimensions","dim","dimension","baseFactor","unitSymbol","newDef","Promise","resolve","reject","initialUnits","targetUnits","author","mantisse","toExponential","split","man","exp","res","parseFloat","meta","timestamp","Date","getTime","initialValue","targetValue","initiatUnits","UpDownInput","children","isValueANumber","onNext","onPrevious","onChange","extraClasses","className","style","width","toString","onClick","evt","type","target","defaultProps","UpDownInputContainer","SIValueEditor","sivalue","handleNewMantisse","handleNewExponent","buildMathJaxUnits","addParenthesis","getSuffixByValue","num","den","buildMathJaxUnit","unitSuffix","unitExponent","abs","buildMathJaxDimensions","buildMathJaxDimension","dimensionSymbol","dimensionExponent","SIUnitEditor","siunit","unitDefUtils","mustShowParenthesis","onOpenSuffixPane","onOpenUnitPane","pRef1","useRef","useEffect","mathjaxexpression","current","innerHTML","window","MathJax","typeset","str","handleNewSuffix","handleNewUnit","currSuffix","console","log","ref","substr","toUpperCase","Conversion","getSuffix","pRef_start","pRef_equal","pRef_final","dRef_start","dRef_equal","dRef_final","dimensionsMatch","dec","round","SlideUpPane","state","onClose","htmlFor","id","checked","Modal","onDeactivate","isActive","useState","isChildVisible","setIsChildVisible","isChildActivated","setTimeout","stopPropagation","CustomInputText","handleChange","placeholder","disabled","preventDefault","CustomInputNumberUndefined","min","max","step","willPotentiallyCacheThis","cachedValue","setCachedValue","MAX_SAFE_INTEGER","CustomCheckbox","tokens","_tokens","token1","token2","token3","uniqueID","random","AddSIUnitButton","onAdd","SIDefinitionEditor","definition","onSave","currDefinition","fieldKey","fieldValue","useLocalDefinition","setLocalDefinition","localDefinition","siunitToAdd","setSiunitToAdd","newVal","updateUnitCollection","App","ac","getVersion","controlsDefault","initialvalue","initialunits","targetunits","viewsuffixes","viewunits","showparenthesis","controls","setControls","buildOpUnit","uiConversion","_setUiConversion","setUiConversion","currUiConversion","curr","convert","catch","err","siunitOnDisplay","setSiunitOnDisplay","updateControlObj","controlsCurrent","updateKeys","updateVals","idx","onPaneItemClick","definitionToEdit","setDefinitionToEdit","suff","_un","isNew","addDefinition","cnt","unCollection","unObj","unIndex","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.06985043.chunk.js","sourcesContent":["import { TSuffix, TUnitDefinition } from \"./app.types\";\r\n\r\nexport enum SISuffix {\r\n  YOTTA = 24,\r\n  ZETTA = 21,\r\n  EXA = 18,\r\n  PETA = 15,\r\n  TERA = 12,\r\n  GIGA = 9,\r\n  MEGA = 6,\r\n  KILO = 3,\r\n  HECTO = 2,\r\n  DECA = 1,\r\n  UNITY = 0,\r\n  DECI = -1,\r\n  CENTI = -2,\r\n  MILLI = -3,\r\n  MICRO = -6,\r\n  NANO = -9,\r\n  PICO = -12,\r\n  FENTO = -15,\r\n}\r\n\r\nexport const nativeSuffixes: TSuffix[] = [\r\n  { symbol: 'Y', name: SISuffix[SISuffix.YOTTA].toLowerCase(), exponentOf10: SISuffix.YOTTA },\r\n  { symbol: 'Z', name: SISuffix[SISuffix.ZETTA].toLowerCase(), exponentOf10: SISuffix.ZETTA },\r\n  { symbol: 'E', name: SISuffix[SISuffix.EXA].toLowerCase(), exponentOf10: SISuffix.EXA },\r\n  { symbol: 'P', name: SISuffix[SISuffix.PETA].toLowerCase(), exponentOf10: SISuffix.PETA },\r\n  { symbol: 'T', name: SISuffix[SISuffix.TERA].toLowerCase(), exponentOf10: SISuffix.TERA },\r\n  { symbol: 'G', name: SISuffix[SISuffix.GIGA].toLowerCase(), exponentOf10: SISuffix.GIGA },\r\n  { symbol: 'M', name: SISuffix[SISuffix.MEGA].toLowerCase(), exponentOf10: SISuffix.MEGA },\r\n  { symbol: 'k', name: SISuffix[SISuffix.KILO].toLowerCase(), exponentOf10: SISuffix.KILO },\r\n  { symbol: 'h', name: SISuffix[SISuffix.HECTO].toLowerCase(), exponentOf10: SISuffix.HECTO },\r\n  { symbol: 'da', name: SISuffix[SISuffix.DECA].toLowerCase(), exponentOf10: SISuffix.DECA },\r\n  { symbol: '', name: SISuffix[SISuffix.UNITY].toLowerCase(), exponentOf10: SISuffix.UNITY },\r\n  { symbol: 'd', name: SISuffix[SISuffix.DECI].toLowerCase(), exponentOf10: SISuffix.DECI },\r\n  { symbol: 'c', name: SISuffix[SISuffix.CENTI].toLowerCase(), exponentOf10: SISuffix.CENTI },\r\n  { symbol: 'm', name: SISuffix[SISuffix.MILLI].toLowerCase(), exponentOf10: SISuffix.MILLI },\r\n  { symbol: 'μ', name: SISuffix[SISuffix.MICRO].toLowerCase(), exponentOf10: SISuffix.MICRO },\r\n  { symbol: 'n', name: SISuffix[SISuffix.NANO].toLowerCase(), exponentOf10: SISuffix.NANO },\r\n  { symbol: 'p', name: SISuffix[SISuffix.PICO].toLowerCase(), exponentOf10: SISuffix.PICO },\r\n  { symbol: 'f', name: SISuffix[SISuffix.FENTO].toLowerCase(), exponentOf10: SISuffix.FENTO }\r\n]\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const nativeUnitDefinitions: TUnitDefinition[] = [\r\n  {\r\n    name: 'meter',\r\n    symbol: 'm',\r\n    measurement: 'Length, Height',\r\n    description: 'Measures Length',\r\n    isBasicDimension: {\r\n      value: true,\r\n      symbol: 'L'\r\n    },\r\n    components: {\r\n      factor: 1,\r\n      units: []\r\n    }\r\n  },{\r\n    name: 'second',\r\n    measurement: 'Time',\r\n    symbol: 's',\r\n    description: 'Measures Time',\r\n    isBasicDimension: {\r\n      value: true,\r\n      symbol: 'T'\r\n    },\r\n    components: {\r\n      factor: 1,\r\n      units: []\r\n    }\r\n  },{\r\n    name: 'gram',\r\n    measurement: 'Mass',\r\n    symbol: 'g',\r\n    description: 'Measures Mass',\r\n    isBasicDimension: {\r\n      value: true,\r\n      symbol: 'M'\r\n    },\r\n    components: {\r\n      factor: 1,\r\n      units: []\r\n    }\r\n  }]","import { TUnitDefinition, TUnit, TSuffix, TRecord, TOpUnit, TSIValue, TUnitDefinitionUtils, TSuffixUtils } from \"./app.types\"\r\nimport { nativeUnitDefinitions, nativeSuffixes, SISuffix } from \"./app.native.data\";\r\n\r\nexport default class AppController {\r\n\r\n  private unitsDefinitions: TUnitDefinition[]\r\n  private suffixes: TSuffix[]\r\n  private history: TRecord[]\r\n  public getHistory(): TRecord[]{\r\n    return [...this.history]\r\n  }\r\n\r\n\r\n  public getVersion(){ return \"2.0\"; }\r\n\r\n\r\n  constructor(){\r\n     \r\n    let defDict: {[key: string]: TUnitDefinition} = {};\r\n    [...nativeUnitDefinitions, ...this.storage.getDefinitions()].forEach(def => defDict[def.symbol] = {...def})\r\n    this.unitsDefinitions = Object.keys(defDict).map(key => defDict[key])\r\n\r\n    this.suffixes = nativeSuffixes\r\n    this.history = []\r\n  }\r\n\r\n\r\n  private storage = {\r\n\r\n    definitionKey: 'customdefinitions',\r\n    getDefinitions: (): TUnitDefinition[] => {\r\n      const units = localStorage.getItem(this.storage.definitionKey)\r\n      return units ? JSON.parse(units) as TUnitDefinition[] : []\r\n    },\r\n    saveDefinitions: () => {\r\n      this.storage.deleteDefinitions()\r\n      localStorage.setItem(this.storage.definitionKey, JSON.stringify(this.unitsDefinitions))\r\n    },\r\n    deleteDefinitions: () => {\r\n      localStorage.removeItem(this.storage.definitionKey)\r\n    },\r\n\r\n\r\n\r\n    historyKey: 'history',\r\n    getHistory: (): TRecord[] => {\r\n      const units = localStorage.getItem(this.storage.historyKey)\r\n      return units ? JSON.parse(units) as TRecord[] : []\r\n    },\r\n    saveHistory: () => {\r\n      this.storage.deleteHistory()\r\n      localStorage.setItem(this.storage.historyKey, JSON.stringify(this.history))\r\n    },\r\n    deleteHistory: () => {\r\n      localStorage.removeItem(this.storage.historyKey)\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  buildOpUnit(units: TUnit[]): TOpUnit{\r\n\r\n    // Check that all unit symbols have associated definitions\r\n    let unitsWithKnownDefinition: {[key: string]: TUnit} = {}\r\n    let unitsToBeProcessed: any = {} // Create a tracker for the units that haven't been processed yet\r\n    units.forEach(un => unitsToBeProcessed[un.symbol] = 1)\r\n\r\n    this.unitsDefinitions.forEach(currDef => {\r\n      units.forEach(unit => {\r\n        if(unit.symbol === currDef.symbol){\r\n          // Mark the current unit as processed (i.e remove it from tracker)\r\n          unitsToBeProcessed[unit.symbol] && (delete unitsToBeProcessed[unit.symbol]);\r\n          // If the unit has already been met, collapse all its instances into one with updated suffix and exponent\r\n          if(unitsWithKnownDefinition[unit.symbol]){\r\n            unitsWithKnownDefinition[unit.symbol].exponent += unit.exponent\r\n            unitsWithKnownDefinition[unit.symbol].suffix += unit.suffix * unit.exponent\r\n          }else{\r\n            unitsWithKnownDefinition[unit.symbol] = {...unit}\r\n            unitsWithKnownDefinition[unit.symbol].suffix = unit.suffix * unit.exponent\r\n          }\r\n        }\r\n      })\r\n    })\r\n\r\n\r\n\r\n    if(Object.keys(unitsToBeProcessed).length !== 0){\r\n      throw new Error(`Unknown Units Found: ${JSON.stringify(unitsToBeProcessed)}`);\r\n    }\r\n\r\n\r\n    //Collect Dimensions\r\n    let collectDimensions = (rawUnit: TUnit[], dict: {[key: string]: number}): {[key: string]: number} => {\r\n\r\n      // Ensure that the key factor is always present\r\n      !dict[\"factor\"] && (dict[\"factor\"] = 1)\r\n      \r\n\r\n      if(rawUnit.length !== 0){\r\n        let [currUnit, ..._rawUnit] = [...rawUnit];\r\n        let currDef = this.unitsDefinitions.filter(def => def.symbol === currUnit.symbol)[0];\r\n\r\n        // If we found a basic dimension, collect it along with its exponent\r\n        const isNewDimension = dict[currDef.isBasicDimension.symbol] === undefined\r\n        currDef && currDef.isBasicDimension.value === true && !isNewDimension && (dict[currDef.isBasicDimension.symbol] = dict[currDef.isBasicDimension.symbol] + currUnit.exponent);\r\n        currDef && currDef.isBasicDimension.value === true && isNewDimension  && (dict[currDef.isBasicDimension.symbol] = currUnit.exponent);\r\n        currDef && currDef.isBasicDimension.value === true && (dict[\"factor\"] *= Math.pow(10, currUnit.suffix)); //Suffix already has accumulated the exponent from above\r\n\r\n        \r\n        // If we found a composite unit, extract component into raw dimensions to be processed in later recursion cycles\r\n        currDef && currDef.isBasicDimension.value !== true && (_rawUnit = [\r\n          ..._rawUnit, \r\n          ...currDef.components.units.map(un => {\r\n            let tmp = {...un}\r\n            tmp.exponent *= currUnit.exponent\r\n            tmp.suffix *= currUnit.exponent\r\n            return tmp\r\n          })\r\n        ])\r\n        currDef && currDef.isBasicDimension.value !== true && (dict[\"factor\"] *= currDef.components.factor * Math.pow(10, currUnit.suffix))\r\n\r\n\r\n        return collectDimensions(_rawUnit, dict)\r\n      }else{\r\n        return dict\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n    let validUnits = Object.keys(unitsWithKnownDefinition).sort().map(key => {return {...unitsWithKnownDefinition[key]}})\r\n    let dimensionsDict: {[key: string]: number} = collectDimensions(validUnits,  {})\r\n    let factor = dimensionsDict[\"factor\"]\r\n    delete dimensionsDict[\"factor\"]\r\n    let dimensions = Object.keys(dimensionsDict).sort().map(key => { return { symbol: key, exponent: dimensionsDict[key] }}).filter(dim => dim.exponent !== 0)\r\n\r\n\r\n    // Build Object\r\n    const unit: TOpUnit = {\r\n      units: [...validUnits],\r\n      dimension: [...dimensions],\r\n      baseFactor: factor\r\n    }\r\n\r\n\r\n    return unit;\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  hasDefinitionFor(unitSymbol: string): TUnitDefinition|null{\r\n    const def = this.unitsDefinitions.filter(def => def.symbol === unitSymbol)[0]\r\n    return def ? {...def} : null\r\n  }\r\n\r\n  addDefinition(newDef: TUnitDefinition, isBasicDimension?: boolean): Promise<TUnitDefinition>{\r\n    // Check whether we already have a definition with this symbol\r\n    let existingDef = this.unitsDefinitions.filter(def => def.symbol === newDef.symbol)[0]\r\n    if(existingDef){\r\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error\r\n      throw new Error(\"Definition with this symbol already exists\");\r\n    }else if(newDef.symbol === '' || newDef.measurement === '' || newDef.name === ''){\r\n      throw new Error(\"Definition is not complete\");\r\n    }\r\n\r\n    // const def = JSON.parse(newDef) as TRecord[]\r\n    const def = {...newDef}\r\n    def.name = def.name.toLowerCase()\r\n    if(!isBasicDimension){\r\n      def.isBasicDimension.value = false\r\n      def.isBasicDimension.symbol = ''\r\n    }else{\r\n      let exisitingDefWithSameDimension = this.unitsDefinitions.filter(def => def.isBasicDimension.value === true && def.isBasicDimension.symbol === newDef.isBasicDimension.symbol)[0]\r\n      if(exisitingDefWithSameDimension){\r\n        throw new Error(\"Definition with this dimension already exists\");\r\n      }\r\n    }\r\n\r\n\r\n    // add definition to internal variable\r\n    this.unitsDefinitions = [...this.unitsDefinitions, def]\r\n\r\n    // save definition to storage\r\n    return new Promise((resolve, reject) => {\r\n      this.storage.saveDefinitions()\r\n      resolve({...this.unitsDefinitions.filter(def => def.symbol === newDef.symbol)[0]})\r\n    })\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  convert(val: TSIValue, initialUnits: TOpUnit, targetUnits: TOpUnit, author: string = \"\"): Promise<TSIValue>{\r\n    \r\n    return new Promise((resolve, reject) => {\r\n      let temp = initialUnits.baseFactor * Math.pow(10, val.exponent) * val.mantisse / targetUnits.baseFactor\r\n      let [man, exp] = temp.toExponential().toLowerCase().split(\"e\")\r\n      let res: TSIValue = {\r\n        mantisse: parseFloat(man),\r\n        exponent: parseFloat(exp)\r\n      }\r\n\r\n      if(JSON.stringify(initialUnits.dimension) !== JSON.stringify(targetUnits.dimension)){\r\n        reject(\"Dimension Do Not Match!\")\r\n      }\r\n\r\n\r\n\r\n      this.history = [...this.history, {\r\n        meta: {author: author, timestamp: new Date().getTime()},\r\n        initialValue: val,\r\n        targetValue: res,\r\n        initiatUnits: initialUnits,\r\n        targetUnits: targetUnits,\r\n      }]\r\n      this.storage.saveHistory()\r\n\r\n\r\n      resolve(res)\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n  suffixUtils: TSuffixUtils = {\r\n    getAll: (): TSuffix[]=>{\r\n      return [...this.suffixes]\r\n    },\r\n    getPrevious: (currSuf: SISuffix): TSuffix => {\r\n      let prevSufIndex = 0\r\n      this.suffixes.forEach((suf, index) => {\r\n        if(suf.exponentOf10 === currSuf){\r\n          prevSufIndex = index + 1\r\n        }\r\n      })\r\n      return prevSufIndex < this.suffixes.length ? this.suffixes[prevSufIndex] : this.suffixes[0]\r\n      \r\n    },\r\n    getNext: (currSuf: SISuffix): TSuffix => {\r\n      let nextSufIndex = 0\r\n      this.suffixes.forEach((suf, index) => {\r\n        if(suf.exponentOf10 === currSuf){\r\n          nextSufIndex = index - 1\r\n        }\r\n      })\r\n      return nextSufIndex >= 0 ? this.suffixes[nextSufIndex] : this.suffixes[this.suffixes.length - 1] \r\n    },\r\n    getByValue: (currSuf: SISuffix): TSuffix => {\r\n      let sufIndex = 0\r\n      this.suffixes.forEach((suf, index) => {\r\n        if(suf.exponentOf10 === currSuf){\r\n          sufIndex = index\r\n        }\r\n      })\r\n      return this.suffixes[sufIndex] \r\n    },\r\n    getClosest: (val: number): TSuffix => {\r\n      let enumVals = []\r\n      for (let tmp in SISuffix) {\r\n        if (!isNaN(Number(tmp))) {\r\n          enumVals.push(Number(tmp))\r\n        }\r\n      }\r\n      enumVals.sort((a,b)=>a-b);\r\n      for(let item of enumVals){\r\n        if(val <= item){\r\n          val = item;\r\n          break\r\n        }\r\n      }\r\n      let sufIndex = 0\r\n      this.suffixes.forEach((suf, index) => {\r\n        if(suf.exponentOf10 === val){\r\n          sufIndex = index\r\n        }\r\n      })\r\n      return this.suffixes[sufIndex] \r\n    }\r\n  }\r\n\r\n\r\n\r\n  unitsDefinitionsUtils: TUnitDefinitionUtils = {\r\n    getAll: (): TUnitDefinition[]=>{\r\n      return [...this.unitsDefinitions]\r\n    },\r\n    getPrevious: (currSymbol: string): TUnitDefinition => {\r\n      let prevDefIndex = 0\r\n      this.unitsDefinitions.forEach((def, index) => {\r\n        if(def.symbol === currSymbol){\r\n          prevDefIndex = index - 1\r\n        }\r\n      })\r\n      return prevDefIndex >= 0 ? this.unitsDefinitions[prevDefIndex] : this.unitsDefinitions[this.unitsDefinitions.length - 1] \r\n    },\r\n    getNext: (currSymbol: string): TUnitDefinition => {\r\n      let nextDefIndex = 0\r\n      this.unitsDefinitions.forEach((def, index) => {\r\n        if(def.symbol === currSymbol){\r\n          nextDefIndex = index + 1\r\n        }\r\n      })\r\n      return nextDefIndex < this.unitsDefinitions.length ? this.unitsDefinitions[nextDefIndex] : this.unitsDefinitions[0] \r\n    },\r\n    getBySymbol: (currSymbol: string): TUnitDefinition => {\r\n      let defIndex = 0\r\n      this.unitsDefinitions.forEach((def, index) => {\r\n        if(def.symbol === currSymbol){\r\n          defIndex = index \r\n        }\r\n      })\r\n      return this.unitsDefinitions[defIndex]\r\n    },\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nimport \"./UpDownInput.css\"\r\n\r\ntype TProps = {\r\n  value: any,\r\n  onChange: (newVal: string)=>void,\r\n  onNext: ()=>void,\r\n  onPrevious: ()=>void,\r\n  isValueANumber?: boolean,\r\n  extraClasses?: string,\r\n}\r\nconst UpDownInput: React.FC<TProps> = ({children, value, isValueANumber, onNext, onPrevious, onChange, extraClasses}) => {\r\n\r\n  // const willPotentiallyCacheThis: string = value.toString() \r\n  // const [cachedValue, setCachedValue] = useState<string|undefined>()\r\n  \r\n\r\n  return (\r\n    <div className={`up-down-input-component ${extraClasses}`} style={{width: `${value.toString().length+2}rem`}}>\r\n\r\n      <div className=\"up-down-input-control\" onClick={evt=>onNext()}><i className=\"fas fa-caret-up\"></i></div>\r\n      <div className=\"up-down-input-value\">\r\n        {\r\n          isValueANumber && (\r\n            <input type=\"number\" /*pattern=\"[+-]?[0-9]*[.,]?[0-9]*\" value={cachedValue ? value : value} */\r\n                                value={value}\r\n                                onChange={(evt)=>{\r\n                                  // if(!evt.target.value){\r\n                                  //     setCachedValue(willPotentiallyCacheThis);\r\n                                  //     onChange(willPotentiallyCacheThis.replace(\".\",\",\"));\r\n                                  // }else{\r\n                                      // setCachedValue(undefined)\r\n                                      // onChange(evt.target.value.replace(\".\",\",\"));\r\n                                      // evt.tar\r\n                                      onChange(evt.target.value);\r\n                                  // }\r\n                                }} \r\n                                // onInput={evt=>{\r\n                                //   const targetVal = (evt.target as HTMLInputElement).value\r\n                                //   console.log(targetVal)\r\n                                // }}\r\n                                // onKeyPress={evt=>{\r\n                                //   let targetVal = (evt.target as HTMLInputElement).value\r\n                                //   console.log(evt)\r\n                                //   console.log(evt.key)\r\n                                //   evt.key === \"\" && ((evt.target as HTMLInputElement).value = value + \",\")\r\n                                //   // console.log(evt.target.)\r\n                                  \r\n                                //   console.log(targetVal)\r\n                                //   targetVal.replace(\".\",\",\")\r\n                                //   console.log(targetVal)\r\n                                //   // onChange(targetVal)\r\n                                // }}\r\n            />\r\n          )\r\n        }\r\n        {!isValueANumber && (<input type=\"text\" value={value} onChange={evt=>onChange(evt.target.value)}/>)}\r\n      </div>\r\n      <div className=\"up-down-input-control\" onClick={evt=>onPrevious()}><i className=\"fas fa-caret-down\"></i></div>\r\n\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\nUpDownInput.defaultProps = {\r\n  isValueANumber: false,\r\n  extraClasses: \"\"\r\n}\r\nexport default UpDownInput\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ntype TProps1 = {\r\n  onNext: ()=>void,\r\n  onPrevious: ()=>void,\r\n  extraClasses?: string,\r\n}\r\nconst UpDownInputContainer: React.FC<TProps1> = ({children, onNext, onPrevious, extraClasses}) => {\r\n\r\n  return (\r\n    <div className={`up-down-input-component up-down-input-component--container ${extraClasses}`} > {/*style={{width: `${children.toString().length+1}rem`}}>*/}\r\n\r\n      <div className=\"up-down-input-control\" onClick={evt=>onNext()}><i className=\"fas fa-caret-up\"></i></div>\r\n      <div className=\"up-down-input-value\">\r\n        {children}\r\n      </div>\r\n      <div className=\"up-down-input-control\" onClick={evt=>onPrevious()}><i className=\"fas fa-caret-down\"></i></div>\r\n\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\nUpDownInputContainer.defaultProps = {\r\n  extraClasses: \"\"\r\n}\r\n\r\nexport {UpDownInputContainer}","import React from 'react';\r\n\r\nimport \"./SIValueEditor.css\"\r\nimport UpDownInput from '../UpDownInput/UpDownInput';\r\nimport { TSIValue } from '../../app.controller/app.types';\r\n\r\ntype TProps = {\r\n  sivalue: TSIValue,\r\n  onChange: (newVal: TSIValue)=>void,\r\n  extraClasses?: string,\r\n}\r\nconst SIValueEditor: React.FC<TProps> = ({sivalue, onChange, extraClasses}) => {\r\n  \r\n  const handleNewMantisse = (sivalue: TSIValue, mantisse: number)=>{\r\n    sivalue.mantisse = mantisse\r\n    onChange(sivalue)\r\n  }\r\n  const handleNewExponent = (sivalue: TSIValue, exponent: number)=>{\r\n    sivalue.exponent = exponent\r\n    onChange(sivalue)\r\n  }\r\n  return (\r\n\r\n    <div className=\"si-value-container\">\r\n      <div className=\"si-value-title\"><h3>Enter the value to be converted</h3></div>\r\n      <div className={`si-value-editor ${extraClasses}`}>\r\n\r\n        \r\n              \r\n        <div className=\"si-value-mantisse\">\r\n          <UpDownInput value={sivalue.mantisse} \r\n                      onChange={(val)=>handleNewMantisse(sivalue, typeof val === \"number\" ? val : parseFloat(val))} \r\n                      onNext={()=>handleNewMantisse(sivalue, sivalue.mantisse+1)} \r\n                      onPrevious={()=>handleNewMantisse(sivalue, sivalue.mantisse-1)}\r\n                      isValueANumber={true}\r\n          />\r\n        </div>\r\n        <div className=\"fixed-text\"><p>x 10</p> </div>\r\n        <div className=\"si-value-exponent\">\r\n          <UpDownInput value={sivalue.exponent} \r\n                      onChange={(val)=>handleNewExponent(sivalue, typeof val === \"number\" ? val : parseFloat(val))} \r\n                      onNext={()=>handleNewExponent(sivalue, sivalue.exponent+1)} \r\n                      onPrevious={()=>handleNewExponent(sivalue, sivalue.exponent-1)}\r\n                      isValueANumber={true}\r\n          />\r\n        </div>\r\n\r\n      </div>\r\n         \r\n    </div>\r\n\r\n\r\n\r\n  )\r\n\r\n}\r\n\r\n\r\nSIValueEditor.defaultProps = {\r\n  extraClasses: \"\"\r\n}\r\nexport default SIValueEditor","import { TUnit, TSuffix, TDimension } from \"../app.controller/app.types\";\r\nimport { SISuffix } from \"../app.controller/app.native.data\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst buildMathJaxUnits = (units: TUnit[], addParenthesis: boolean, getSuffixByValue: (suff: SISuffix)=>TSuffix):string => {\r\n  let num: string = ''\r\n  let den: string = ''\r\n  units.forEach(unit => {\r\n    unit.exponent >= 0 && (num = num + buildMathJaxUnit(unit.symbol, getSuffixByValue(unit.suffix/unit.exponent), unit.exponent, addParenthesis));\r\n    unit.exponent < 0 &&  (den = den + buildMathJaxUnit(unit.symbol, getSuffixByValue(unit.suffix/unit.exponent), unit.exponent, addParenthesis));\r\n  })\r\n  // return `(${num === '' ? '1' : num})${den === '' ? '' : `/(${den})`}`\r\n  return `${den === '' ? `${num === '' ? '1' : num}` : `(${num === '' ? '1' : num})/(${den})`}`\r\n}\r\n\r\nconst buildMathJaxUnit = (unitSymbol: string, unitSuffix: TSuffix, unitExponent: number, addParenthesis: boolean):string => {\r\n  \r\n  // let suffix = unit.suffix && SISuffix[unit.suffix] !== SISuffix[SISuffix.UNITY] ? nativeData.getSuffixObject(unit.suffix).symbol  : ''\r\n  let suffix = unitSuffix.symbol\r\n  let exp = Math.abs(unitExponent) === 1 ? '' : `^${Math.abs(unitExponent)}`\r\n  let tmp = ''\r\n  unitExponent >= 0 && (tmp = tmp + `${addParenthesis?'(':''}${suffix}\\\\${unitSymbol}${addParenthesis?')':''}${exp}`);\r\n  unitExponent < 0 &&  (tmp = tmp + `${addParenthesis?'(':''}${suffix}\\\\${unitSymbol}${addParenthesis?')':''}${exp}`);\r\n\r\n  return tmp\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst buildMathJaxDimensions = (dimensions: TDimension[], addParenthesis: boolean):string => {\r\n  let num: string = ''\r\n  let den: string = ''\r\n  dimensions.forEach(dim => {\r\n    dim.exponent >= 0 && (num = num + buildMathJaxDimension(dim.symbol, dim.exponent, addParenthesis));\r\n    dim.exponent < 0 &&  (den = den + buildMathJaxDimension(dim.symbol, dim.exponent, addParenthesis));\r\n  })\r\n  return `${den === '' ? `${num === '' ? '1' : num}` : `(${num === '' ? '1' : num})/(${den})`}`\r\n}\r\n\r\nconst buildMathJaxDimension = (dimensionSymbol: string, dimensionExponent: number, addParenthesis: boolean):string => {\r\n  \r\n  let exp = Math.abs(dimensionExponent) === 1 ? '' : `^${Math.abs(dimensionExponent)}`\r\n  let tmp = ''\r\n  dimensionExponent >= 0 && (tmp = tmp + `${addParenthesis?'(':''}\\\\${dimensionSymbol}${exp}${addParenthesis?')':''}`);\r\n  dimensionExponent < 0 &&  (tmp = tmp + `${addParenthesis?'(':''}\\\\${dimensionSymbol}${exp}${addParenthesis?')':''}`);\r\n\r\n  return tmp\r\n}\r\nconst toCapital = (str: string): string => str.substr(0,1).toUpperCase() + str.substr(1).toLowerCase()\r\n// const round = (val: number, dec: number)=>Number(`${Math.round(Number(`${val}e${dec}`))}e-${dec}`)\r\nconst round = (val: number, dec: number)=>Number(`${Math.round(Number(`${val}e${dec}`))}e-${dec}`)\r\n\r\n\r\nexport {buildMathJaxUnits, buildMathJaxUnit, buildMathJaxDimensions, toCapital, round}","import React, { useRef, useEffect } from 'react';\r\n\r\nimport \"./SIUnitEditor.css\"\r\nimport UpDownInput, { UpDownInputContainer } from '../UpDownInput/UpDownInput';\r\nimport { TUnit, TSuffixUtils, TUnitDefinitionUtils } from '../../app.controller/app.types';\r\nimport { SISuffix } from '../../app.controller/app.native.data';\r\nimport { buildMathJaxUnit } from '../mathjax.utils';\r\n\r\ntype TProps = {\r\n  siunit: TUnit,\r\n  onChange: (newVal: TUnit)=>void,\r\n  suffixUtils: TSuffixUtils,\r\n  mustShowParenthesis: boolean,\r\n  unitDefUtils: TUnitDefinitionUtils,\r\n  extraClasses?: string,\r\n  onOpenSuffixPane: ()=>void\r\n  onOpenUnitPane: ()=>void\r\n}\r\nconst SIUnitEditor: React.FC<TProps> = ({siunit, onChange, extraClasses, suffixUtils, unitDefUtils, mustShowParenthesis, onOpenSuffixPane, onOpenUnitPane}) => {\r\n  \r\n  let pRef1 = useRef<any>()\r\n  useEffect(() => {\r\n    let mathjaxexpression = buildMathJaxUnit(siunit.symbol, suffixUtils.getByValue(siunit.suffix/siunit.exponent), siunit.exponent, mustShowParenthesis);\r\n    siunit.exponent < 0 && (mathjaxexpression = `(1)/(${mathjaxexpression})`)\r\n    pRef1.current && (pRef1.current.innerHTML = `\\`${mathjaxexpression}\\``);\r\n    window.MathJax && window.MathJax.typeset && window.MathJax.typeset()\r\n  });\r\n  \r\n\r\n  const handleNewSuffix = (siunit: TUnit, suffix: SISuffix)=>{\r\n    siunit.suffix = suffix \r\n    onChange(siunit)\r\n  }\r\n  const handleNewUnit = (siunit: TUnit, symbol: string)=>{\r\n    siunit.suffix = siunit.suffix/siunit.exponent \r\n    siunit.symbol = symbol \r\n    onChange(siunit)\r\n  }\r\n  const handleNewExponent = (siunit: TUnit, exponent: number)=>{\r\n    siunit.suffix = siunit.suffix/siunit.exponent;\r\n    if(exponent === 0){\r\n      if(siunit.exponent < exponent){ siunit.exponent = 1; }\r\n      else { siunit.exponent = -1; } \r\n    } else { \r\n      siunit.exponent = exponent; \r\n    }\r\n    onChange(siunit)\r\n  }\r\n  const toCapital = (str: string): string => str.substr(0,1).toUpperCase() + str.substr(1).toLowerCase()\r\n  \r\n\r\n\r\n\r\n  const currSuffix: SISuffix = suffixUtils.getClosest(siunit.suffix/siunit.exponent).exponentOf10\r\n\r\n\r\n\r\n  console.log('[SIUnitEditor]: ',siunit, siunit.suffix, siunit.exponent, siunit.suffix/siunit.exponent, currSuffix)\r\n\r\n  return (\r\n    <div className={`si-unit-editor ${extraClasses}`}>\r\n\r\n        <div className=\"si-unit-mathjax\" ref={pRef1}></div>\r\n            \r\n        <div className=\"si-unit-container\">\r\n            <UpDownInputContainer onNext={()=>handleNewSuffix(siunit, suffixUtils.getNext(currSuffix).exponentOf10)} \r\n                                  onPrevious={()=>handleNewSuffix(siunit, suffixUtils.getPrevious(currSuffix).exponentOf10)} \r\n            >\r\n                <p className={`si-unit-text ${currSuffix === 0 ? 'text-transparent' : ''}`} onClick={evt=>onOpenSuffixPane()}>\r\n                  {\r\n                      currSuffix > 3 \r\n                      ? toCapital(SISuffix[currSuffix]) \r\n                      : SISuffix[currSuffix].toLowerCase() \r\n                  }\r\n                </p>\r\n\r\n            </UpDownInputContainer>\r\n\r\n\r\n            <div className=\"si-unit-separator\"></div>\r\n            \r\n            \r\n            <UpDownInputContainer onNext={()=>handleNewUnit(siunit, unitDefUtils.getNext(siunit.symbol).symbol)}\r\n                                  onPrevious={()=>handleNewUnit(siunit, unitDefUtils.getPrevious(siunit.symbol).symbol)}\r\n            >\r\n                 <p className=\"si-unit-text\" onClick={evt=>onOpenUnitPane()}>{siunit.symbol + \" \"}</p>\r\n            </UpDownInputContainer>\r\n            <UpDownInput value={siunit.exponent} \r\n                        onChange={(val)=>handleNewExponent(siunit, parseFloat(val))} \r\n                        onNext={()=>handleNewExponent(siunit, siunit.exponent + 1)} \r\n                        onPrevious={()=>handleNewExponent(siunit, siunit.exponent - 1)} \r\n                        isValueANumber={true}\r\n                        extraClasses=\"si-unit-exponent\"\r\n            />\r\n        </div>\r\n\r\n\r\n\r\n\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\nSIUnitEditor.defaultProps = {\r\n  extraClasses: \"\"\r\n}\r\nexport default SIUnitEditor","import React, { useRef, useEffect } from 'react';\r\n\r\nimport \"./Conversion.css\"\r\nimport { TSIValue, TOpUnit, TSuffix } from '../../app.controller/app.types';\r\nimport { SISuffix } from '../../app.controller/app.native.data';\r\nimport { buildMathJaxUnits, buildMathJaxDimensions, round } from '../mathjax.utils';\r\n\r\n\r\ntype TProps = {\r\n  initialValue: TSIValue,\r\n  targetValue: TSIValue,\r\n  initialUnits: TOpUnit,\r\n  targetUnits: TOpUnit,\r\n  mustShowParenthesis: boolean,\r\n  getSuffix: (suff: SISuffix) => TSuffix\r\n  extraClasses?: string,\r\n}\r\nconst Conversion: React.FC<TProps> = ({initialValue, targetValue, extraClasses, initialUnits, targetUnits, getSuffix, mustShowParenthesis}) => {\r\n  \r\n  let pRef_start = useRef<any>()\r\n  let pRef_equal = useRef<any>()\r\n  let pRef_final = useRef<any>()\r\n  let dRef_start = useRef<any>()\r\n  let dRef_equal = useRef<any>()\r\n  let dRef_final = useRef<any>()\r\n  const dimensionsMatch = JSON.stringify(initialUnits.dimension) === JSON.stringify(targetUnits.dimension)\r\n  useEffect(() => {\r\n\r\n    pRef_start.current && (pRef_start.current.innerHTML = `\\`${initialValue.mantisse}&nbsp;*&nbsp;10^(${initialValue.exponent})&nbsp;${buildMathJaxUnits(initialUnits.units, mustShowParenthesis, getSuffix)}\\``);\r\n    pRef_equal.current && (pRef_equal.current.innerHTML = `\\`=\\``);\r\n    pRef_final.current && (pRef_final.current.innerHTML = `\\`${round(targetValue.mantisse, 4)}&nbsp;*&nbsp;10^(${targetValue.exponent})&nbsp;${buildMathJaxUnits(targetUnits.units, mustShowParenthesis, getSuffix)}\\``);\r\n\r\n    window.MathJax && window.MathJax.typeset && window.MathJax.typeset()\r\n  });\r\n  useEffect(() => {\r\n\r\n    dRef_start.current && (dRef_start.current.innerHTML = `\\`${buildMathJaxDimensions(initialUnits.dimension, false)}\\``);\r\n    dRef_equal.current && (dRef_equal.current.innerHTML = `\\`${dimensionsMatch ? '=' : '≠'}\\``);\r\n    dRef_final.current && (dRef_final.current.innerHTML = `\\`${buildMathJaxDimensions(targetUnits.dimension, false)}\\``);\r\n\r\n    window.MathJax && window.MathJax.typeset && window.MathJax.typeset()\r\n  });\r\n\r\n\r\n  return (\r\n    <div className={`si-conversion ${extraClasses}`}>\r\n\r\n      <div className={`si-conversion-display`}>\r\n        <div ref={pRef_start} className=\"mathjax-item\"></div>\r\n        <div ref={pRef_equal} className=\"mathjax-item\"></div>\r\n        <div ref={pRef_final} className={`mathjax-item mathjax-item--result ${dimensionsMatch?'':'mathjax-item--grayed'}`}></div>\r\n      </div>\r\n\r\n\r\n      <div className=\"si-conversion-dimension-title\">Dimensions</div>\r\n      <div className={`si-conversion-dimension-container ${dimensionsMatch?'bg-ok bg-green-200':'bg-danger bg-red-200'}`}>\r\n        <div className={`si-conversion-dimension ${dimensionsMatch?'text-green-700':'text-red-800'}`}>\r\n          <div ref={dRef_start} className=\"mathjax-item\"></div>\r\n          <div ref={dRef_equal} className=\"mathjax-item\"></div>\r\n          <div ref={dRef_final} className=\"mathjax-item\"></div>\r\n        </div>\r\n        <div className={`si-conversion-match`}>\r\n          {\r\n            !dimensionsMatch && (\r\n              <p>Dimensions Do Not Match</p>\r\n            )\r\n          }\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\nConversion.defaultProps = {\r\n  extraClasses: \"\"\r\n}\r\nexport default Conversion","import React from 'react';\r\n\r\nimport \"./SlideUpPane.css\"\r\n\r\ntype TProps = {\r\n  state: boolean,\r\n  onClose: ()=>void,\r\n  extraClasses?: string,\r\n}\r\nconst SlideUpPane: React.FC<TProps> = ({children, state, onClose, extraClasses}) => {\r\n\r\n\r\n\r\n  return (\r\n    <div className={`bottom-pane ${state?'bottom-pane--visible':''} ${extraClasses}`}>\r\n      <div className=\"bottom-pane-inner\">\r\n        <label className=\"bottom-pane-close\" htmlFor=\"bottom-pane-close\"><i className=\"fas fa-times\"></i><input type=\"checkbox\" id=\"bottom-pane-close\" checked={state} onChange={evt=>onClose()}/></label>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\nSlideUpPane.defaultProps = {\r\n  extraClasses: \"\"\r\n}\r\nexport default SlideUpPane\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ntype TProps1 = {\r\n  onNext: ()=>void,\r\n  onPrevious: ()=>void,\r\n  extraClasses?: string,\r\n}\r\nconst UpDownInputContainer: React.FC<TProps1> = ({children, onNext, onPrevious, extraClasses}) => {\r\n\r\n  return (\r\n    <div className={`up-down-input-component up-down-input-component--container ${extraClasses}`} > {/*style={{width: `${children.toString().length+1}rem`}}>*/}\r\n\r\n      <div className=\"up-down-input-control\" onClick={evt=>onNext()}><i className=\"fas fa-caret-up\"></i></div>\r\n      <div className=\"up-down-input-value\">\r\n        {children}\r\n      </div>\r\n      <div className=\"up-down-input-control\" onClick={evt=>onPrevious()}><i className=\"fas fa-caret-down\"></i></div>\r\n\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\nUpDownInputContainer.defaultProps = {\r\n  extraClasses: \"\"\r\n}\r\n\r\nexport {UpDownInputContainer}","import React, { useState, useRef } from 'react';\r\n\r\n\r\nimport './Modal.css';\r\n\r\n\r\n\r\ntype TProps = {\r\n  isActive: boolean\r\n  onDeactivate: ()=>void\r\n  extraClasses?: string\r\n}\r\nconst Modal: React.FC<TProps> = ({children, onDeactivate,isActive, extraClasses}) => {\r\n\r\n  const [isChildVisible, setIsChildVisible] = useState<boolean>(false)\r\n  let isChildActivated = useRef<boolean>(false)  \r\n  if(isActive && !isChildActivated.current && !isChildVisible){\r\n    isChildActivated.current = true\r\n    setTimeout(()=>{\r\n      setIsChildVisible(true)\r\n    }, 300)     \r\n  }\r\n\r\n\r\n  return (\r\n    <div className={`modal-container ${extraClasses} ${isActive?'modal-container--active':''}`}\r\n          onClick={evt => {\r\n            isChildActivated.current = false\r\n            onDeactivate()\r\n            setIsChildVisible(false)\r\n            evt.stopPropagation()\r\n          }}\r\n    >\r\n      <div className={`modal-children-container ${isChildVisible?'modal-children--visible':''}`} onClick={evt => evt.stopPropagation()}>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n\r\n}\r\nModal.defaultProps = {\r\n  extraClasses: \"\"\r\n}\r\nexport default Modal;\r\n","import React, { useState } from 'react';\r\nimport './CustomInput.css';\r\n\r\n\r\n\r\ntype Props = {\r\n    value: string,\r\n    handleChange: (newValue: string)=>void,\r\n    extraClasses?: string,\r\n    disabled?: boolean,\r\n    placeholder?: string\r\n}\r\ntype PropsNumber = {\r\n    value: number,\r\n    handleChange: (newValue: string)=>void,\r\n    extraClasses?: string,\r\n    placeholder?: string,\r\n    min?: number,\r\n    max?: number,\r\n    disabled?: boolean,\r\n    step?: number,\r\n}\r\n  \r\n  \r\nconst CustomInputText: React.FC<Props> = ({value, handleChange, extraClasses, placeholder, disabled}) => {\r\n    return (\r\n        <div className={`custom-input align-self-stretch flex flex-column ${extraClasses} ${disabled ? 'custom-input--disabled': ''}`}>\r\n            <div className='disabling-overlay' onClick={evt => {evt.stopPropagation(); evt.preventDefault()}}></div>\r\n            <input type=\"text\" value={value} onChange={evt=>handleChange(evt.target.value)} placeholder={placeholder}/>\r\n            <span className=\"pen-icon flex-centered\"><i className=\"fas fa-pen\"></i></span>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst CustomInputNumber: React.FC<PropsNumber> = ({value, handleChange, extraClasses, placeholder, disabled, min, max, step}) => {\r\n    return (\r\n        <div className={`custom-input align-self-stretch flex flex-column ${extraClasses} ${disabled ? 'custom-input--disabled': ''}`}>\r\n            <div className='disabling-overlay' onClick={evt => {evt.stopPropagation(); evt.preventDefault()}}></div>\r\n            <input type=\"number\" value={value} onChange={evt=>handleChange(evt.target.value)} min={min} max={max} step={step} placeholder={placeholder}/>\r\n            <span className=\"pen-icon flex-centered\"><i className=\"fas fa-pen\"></i></span>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst CustomInputNumberUndefined: React.FC<PropsNumber> = ({value, handleChange, extraClasses, placeholder, disabled, min, max, step}) => {\r\n    // This component will allow the input field to remain empty while the user is typing.\r\n    // It is therefore agnostic of the empty/undefined/null value policy of the higher compoennt/source of truth\r\n    // While the field is empty the last value from the source of truth is cached.\r\n    // This only works under the assumption that the value can only change from this field, and that the source of\r\n    // truth does not in anyway coerce/update/cahnge this value\r\n\r\n    // To allow the field to remain empty while the user is typing\r\n    // Give the illusion to the source of truth (higher component) that the value never becomes empty:\r\n    // When it actually does, cache the current value received from props and send that to the source of truth\r\n    // on subsequent re-renders until the user enters a non null value\r\n    // thus allowing the input field to remain empty, and prevent it to be coerced to some value by a source\r\n    // of truth that does not like empty fields...\r\n    const willPotentiallyCacheThis: string = value.toString() \r\n    const [cachedValue, setCachedValue] = useState<string|undefined>()\r\n    \r\n    return (\r\n        <div className={`custom-input align-self-stretch flex flex-column ${extraClasses} ${disabled ? 'custom-input--disabled': ''}`}>\r\n            <div className='disabling-overlay' onClick={evt => {evt.stopPropagation(); evt.preventDefault()}}></div>\r\n            <input type=\"number\" value={cachedValue ? '' : value} onChange={evt=>{\r\n                    if(!evt.target.value){\r\n                        setCachedValue(willPotentiallyCacheThis);\r\n                        handleChange(willPotentiallyCacheThis);\r\n                    }else{\r\n                        setCachedValue(undefined)\r\n                        handleChange(evt.target.value);\r\n                    }\r\n                }} min={min} max={max} step={step} placeholder={placeholder}/>\r\n            <span className=\"pen-icon flex-centered\"><i className=\"fas fa-pen\"></i></span>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst CustomInputTextPassword: React.FC<Props> = ({value, handleChange, extraClasses, placeholder, disabled}) => {\r\n    return (\r\n        <div className={`custom-input align-self-stretch flex flex-column ${extraClasses} ${disabled ? 'custom-input--disabled': ''}`}>\r\n            <div className='disabling-overlay' onClick={evt => {evt.stopPropagation(); evt.preventDefault()}}></div>\r\n            <input type=\"password\" value={value} onChange={evt=>handleChange(evt.target.value)} placeholder={placeholder}/>\r\n            <span className=\"pen-icon flex-centered\"><i className=\"fas fa-pen\"></i></span>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst CustomInputNumberPassword: React.FC<Props> = ({value, handleChange, extraClasses, placeholder, disabled}) => {\r\n    return (\r\n        <div className={`custom-input align-self-stretch flex flex-column ${extraClasses} ${disabled ? 'custom-input--disabled': ''}`}>\r\n            <div className='disabling-overlay' onClick={evt => {evt.stopPropagation(); evt.preventDefault()}}></div>\r\n            <input type=\"password\" pattern=\"[0-9]*\" value={value === 'NaN' ? '' : value} onChange={evt=>handleChange(evt.target.value)} placeholder={placeholder}/>\r\n            <span className=\"pen-icon flex-centered\"><i className=\"fas fa-pen\"></i></span>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n  \r\nCustomInputText.defaultProps = {\r\n    value: '',\r\n    extraClasses: '',\r\n    placeholder: 'Your Input Here',\r\n    disabled: false\r\n}\r\nCustomInputNumber.defaultProps = {\r\n    value: 0,\r\n    extraClasses: '',\r\n    placeholder: 'Your Input Here',\r\n    min: -1*Number.MAX_SAFE_INTEGER,\r\n    max: Number.MAX_SAFE_INTEGER,\r\n    step: 1,\r\n    disabled: false\r\n}\r\nCustomInputTextPassword.defaultProps = {...CustomInputText.defaultProps}\r\nCustomInputNumberPassword.defaultProps = {...CustomInputText.defaultProps}\r\nexport { CustomInputText, CustomInputNumber, CustomInputTextPassword, CustomInputNumberPassword, CustomInputNumberUndefined };","import React from 'react';\r\nimport './CustomCheckbox.css';\r\n\r\n\r\n\r\ntype Props = {\r\n    checked: boolean,\r\n    handleChange: (newValue: boolean)=>void,\r\n    extraClasses?: string,\r\n    tokens?: string[]\r\n    disabled?: boolean\r\n}\r\n\r\n  \r\n  \r\nconst CustomCheckbox: React.FC<Props> = ({checked, handleChange, extraClasses, tokens, disabled}) => {\r\n\r\n    const _tokens = tokens || []\r\n    const token1 = _tokens[0] === '' ? '' : _tokens[0] || 'Checkbox'\r\n    const token2 = _tokens[1] || 'Selected'\r\n    const token3 = _tokens[2] || 'Deselected'\r\n\r\n    //Unique ID to prevent several instances of the menu on the same page to interfere with each other due to the use of label and input ids\r\n    const uniqueID = `${new Date().getTime()}-${Math.round((Math.random()*1000))}`;\r\n\r\n    return (\r\n        <label htmlFor={`toggle-control-${uniqueID}`} id={`custom-checkbox-${uniqueID}`} className={`custom-checkbox-container ${checked?'custom-checkbox-container--checked':''} ${extraClasses}`}>\r\n            <input type=\"checkbox\" disabled={disabled} checked={checked} id={`toggle-control-${uniqueID}`} name=\"\" onChange={evt => handleChange(evt.target.checked)}/>\r\n            <div className=\"custom-checkbox-background\">\r\n                <span></span>\r\n            </div>\r\n            <p><span>{token1}</span>&nbsp;<span>{token3}</span> <span>{token2}</span></p>     \r\n        </label>\r\n    );\r\n}\r\n\r\n  \r\nCustomCheckbox.defaultProps = {\r\n    checked: false,\r\n    extraClasses: '',\r\n    tokens: ['Checkbox', 'Selected', 'Deselected'],\r\n    disabled: false\r\n}\r\n\r\n\r\nexport default CustomCheckbox;","import React from 'react';\r\n\r\n\r\nimport './SIUnitEditor.css';\r\n\r\n\r\n\r\ntype TProps = {\r\n  onAdd: ()=>void\r\n  extraClasses?: string\r\n}\r\nconst AddSIUnitButton: React.FC<TProps> = ({children, onAdd, extraClasses}) => {\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"si-unit-editor-add-unit\" >\r\n      <div className=\"si-unit-editor-add-button\" onClick={evt=>onAdd()}>\r\n        <i className=\"fas fa-plus\"></i>\r\n      </div>\r\n      <p>Add Unit: </p>\r\n      <div>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n\r\n}\r\nAddSIUnitButton.defaultProps = {\r\n  extraClasses: \"\"\r\n}\r\nexport default AddSIUnitButton;\r\n","import React, { Fragment, useState } from 'react';\r\n\r\nimport \"./SIDefinitionEditor.css\"\r\nimport { TUnitDefinition, TUnit, TSuffixUtils, TUnitDefinitionUtils } from '../../app.controller/app.types';\r\nimport { CustomInputText, CustomInputNumberUndefined } from '../CustomInput/CustomInput';\r\nimport CustomCheckbox from '../CustomCheckbox/CustomCheckbox';\r\nimport SIUnitEditor from '../SIUnitEditor/SIUnitEditor';\r\nimport { updateUnitCollection } from '../../App';\r\nimport AddSIUnitButton from '../SIUnitEditor/AddSIUnitButton';\r\nimport { UpDownInputContainer } from '../UpDownInput/UpDownInput';\r\n\r\n\r\ntype TProps = {\r\n  definition: TUnitDefinition|undefined,\r\n  onChange: (newVal: TUnitDefinition)=>void,\r\n  onSave: (newVal: TUnitDefinition, isNew: boolean)=>void,\r\n  suffixUtils: TSuffixUtils,\r\n  mustShowParenthesis: boolean,\r\n  unitDefUtils: TUnitDefinitionUtils,\r\n  extraClasses?: string,\r\n}\r\nconst SIDefinitionEditor: React.FC<TProps> = ({definition, onChange, extraClasses,  suffixUtils, mustShowParenthesis, unitDefUtils, onSave}) => {\r\n\r\n  \r\n  const handleChange = (currDefinition: TUnitDefinition, fieldKey: string, fieldValue: any, useLocalDefinition: boolean)=>{\r\n\r\n    let tmp = {...currDefinition}\r\n    switch(fieldKey){\r\n      case 'name': tmp.name = fieldValue as string; break;\r\n      case 'symbol': tmp.symbol = fieldValue as string; break;\r\n      case 'measurement': tmp.measurement = fieldValue as string; break;\r\n      case 'description': tmp.description = fieldValue as string; break;\r\n      case 'isBasicDimension.value': tmp.isBasicDimension.value = fieldValue as boolean; break;\r\n      case 'isBasicDimension.symbol': tmp.isBasicDimension.symbol = fieldValue as string; break;\r\n      case 'components.factor': tmp.components.factor = fieldValue as number; break;\r\n      case 'components.units': tmp.components.units = fieldValue as TUnit[]; break;\r\n      default: break;\r\n    }\r\n    if(!useLocalDefinition){\r\n      onChange(tmp)\r\n    }\r\n    setLocalDefinition({...tmp})\r\n  }\r\n\r\n  const emptyUnitDefinition: TUnitDefinition = {\r\n    symbol: '',\r\n    name: '',\r\n    description: '',\r\n    measurement: '',\r\n    components: {\r\n      factor: 1,\r\n      units: []\r\n    },\r\n    isBasicDimension: {\r\n      value: false,\r\n      symbol: ''\r\n    }\r\n  }\r\n  \r\n  const useLocalDefinition = definition === undefined\r\n  const [localDefinition, setLocalDefinition] = useState<TUnitDefinition>(emptyUnitDefinition)\r\n  const currDefinition = definition ? definition : localDefinition\r\n  definition && JSON.stringify(definition) !== JSON.stringify(localDefinition) && setLocalDefinition({...definition})\r\n\r\n  const [siunitToAdd, setSiunitToAdd] = useState<string>(\"\")\r\n  console.log(\"[SIDefinitionEditor]: \", definition, useLocalDefinition, localDefinition)\r\n\r\n  return (\r\n    <div className={`definition-page ${extraClasses}`}>\r\n\r\n\r\n\r\n      <h1>{useLocalDefinition ? 'Creating' : 'Viewing'} Unit Definition</h1>\r\n\r\n\r\n\r\n      <div className=\"definition-id\">\r\n        <div className=\"definition-page-group\">\r\n          <span>Unit Name</span>\r\n          <CustomInputText value={currDefinition.name} disabled={!useLocalDefinition} handleChange={(val)=>handleChange(currDefinition, \"name\", val, useLocalDefinition)}/>\r\n        </div>\r\n        <div className=\"definition-page-group\">\r\n          <span>Symbol</span>\r\n          <CustomInputText value={currDefinition.symbol} disabled={!useLocalDefinition} handleChange={(val)=>handleChange(currDefinition, \"symbol\", val, useLocalDefinition)}/>\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n      <div className=\"definition-docs\">\r\n        <div className=\"definition-page-group\">\r\n          <span>What does the unit measures </span>\r\n          <CustomInputText value={currDefinition.measurement} disabled={!useLocalDefinition} handleChange={(val)=>handleChange(currDefinition, \"measurement\", val, useLocalDefinition)}/>\r\n        </div>\r\n        <div className=\"definition-page-group\">\r\n          <span>Description for this unit</span>\r\n          <textarea value={currDefinition.description} disabled={!useLocalDefinition} onChange={(evt)=>handleChange(currDefinition, \"description\", evt.target.value, useLocalDefinition)}/>\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n      <div className=\"definition-composition\">\r\n        <div className=\"definition-page-group\">\r\n          <span>isBasicDimension</span>\r\n          <CustomCheckbox extraClasses={\"text-black\"} disabled={!useLocalDefinition} checked={currDefinition.isBasicDimension.value} handleChange={(val)=>handleChange(currDefinition, \"isBasicDimension.value\", val, useLocalDefinition)} tokens={['', 'Unit is a Basic Dimension', 'Unit is Composed']}/>\r\n        </div>\r\n\r\n\r\n        {\r\n          currDefinition.isBasicDimension.value && (\r\n            <Fragment>\r\n              <div className=\"definition-page-group\">\r\n                <span>Dimension Symbol</span>\r\n                <CustomInputText value={currDefinition.isBasicDimension.symbol} disabled={!useLocalDefinition} handleChange={(val)=>handleChange(currDefinition, \"isBasicDimension.symbol\", val, useLocalDefinition)}/>\r\n              </div>\r\n            </Fragment>\r\n          )\r\n        }\r\n\r\n\r\n\r\n        {\r\n          !currDefinition.isBasicDimension.value && (\r\n            <Fragment>\r\n              <div className=\"definition-page-group\">\r\n                <span>Conversion Factor</span>\r\n                <CustomInputNumberUndefined value={currDefinition.components.factor} disabled={!useLocalDefinition} handleChange={(val)=>handleChange(currDefinition, \"components.factor\", val, useLocalDefinition)}/>\r\n              </div>\r\n              <div className=\"definition-page-group\">\r\n                <span>Unit Composition</span>\r\n                {\r\n                  currDefinition.components.units.map((un, index) => { \r\n                    return (\r\n                      <SIUnitEditor siunit={un} \r\n                                    key={index}\r\n                                    suffixUtils={suffixUtils}\r\n                                    unitDefUtils={unitDefUtils}\r\n                                    onOpenSuffixPane={()=>{}}\r\n                                    onOpenUnitPane={()=>{}}\r\n                                    mustShowParenthesis={mustShowParenthesis}\r\n                                    onChange={newVal=> handleChange(currDefinition, \"components.units\", updateUnitCollection(currDefinition.components.units, newVal, index), useLocalDefinition)}\r\n                      />\r\n                    )\r\n                  })\r\n                }\r\n\r\n                \r\n                <AddSIUnitButton onAdd={()=>handleChange(currDefinition, \"components.units\", updateUnitCollection([...currDefinition.components.units, {suffix: 0, symbol: siunitToAdd, exponent: 1}], {suffix: 0, symbol: siunitToAdd, exponent: 1}, -1), useLocalDefinition)}>\r\n                    <UpDownInputContainer onNext={()=>setSiunitToAdd(unitDefUtils.getNext(siunitToAdd).symbol)}\r\n                                          onPrevious={()=>setSiunitToAdd(unitDefUtils.getPrevious(siunitToAdd).symbol)}\r\n                    >\r\n                        {siunitToAdd + \" \"}\r\n                    </UpDownInputContainer>\r\n                </AddSIUnitButton>\r\n\r\n              </div>\r\n            </Fragment>\r\n          )\r\n        }\r\n        \r\n      </div>    \r\n\r\n\r\n      <div className=\"definition-page-group\">\r\n        <button className=\"definition-save\" onClick={evt=>onSave(currDefinition, useLocalDefinition)}>\r\n          {useLocalDefinition ? 'Save' : 'Close'}\r\n        </button>\r\n      </div>       \r\n\r\n    </div>\r\n\r\n  )\r\n\r\n}\r\n\r\n\r\nSIDefinitionEditor.defaultProps = {\r\n  extraClasses: \"\"\r\n}\r\nexport default SIDefinitionEditor\r\n\r\n\r\n// {\r\n//   name: \"Newton\",\r\n//   symbol: 'N',\r\n//   description: \"\",\r\n//   measurement: \"Force\",\r\n//   isBasicDimension: {\r\n//     value: true,\r\n//     symbol: 'L'\r\n//   },\r\n//   components: {\r\n//     factor: 1,\r\n//     units: [\r\n//       { suffix: SISuffix.KILO, symbol: 'g', exponent: 1 },\r\n//       { suffix: SISuffix.UNITY, symbol: 'm', exponent: 1 },\r\n//       { suffix: SISuffix.UNITY, symbol: 's', exponent: -2 }\r\n//     ]\r\n//   }","import React, { useRef, useState } from 'react';\n\nimport './App.css';\nimport './utils.css';\nimport AppController from './app.controller/app.controller';\nimport { TSIValue, TOpUnit, TUnit, TUnitDefinition, TSuffix } from './app.controller/app.types';\nimport { SISuffix } from './app.controller/app.native.data';\nimport SIValueEditor from './components/SIValueEditor/SIValueEditor';\nimport SIUnitEditor from './components/SIUnitEditor/SIUnitEditor';\nimport Conversion from './components/Conversion/Conversion';\nimport { toCapital } from './components/mathjax.utils';\nimport SlideUpPane, { UpDownInputContainer } from './components/SlideUpPane/SlideUpPane';\nimport Modal from './components/Modal/Modal';\nimport SIDefinitionEditor from './components/SIDefinitionEditor/SIDefinitionEditor';\nimport AddSIUnitButton from './components/SIUnitEditor/AddSIUnitButton';\n\ndeclare global {\n  interface Window { MathJax: any; }\n}\ntype TUiItem = {\n  initialValue: TSIValue,\n  initialUnits: TOpUnit,\n  targetUnits: TOpUnit,\n  targetValue: TSIValue,\n  author: string\n}\ntype TControls = {\n  initialvalue: boolean,\n  initialunits: boolean,\n  targetunits: boolean,\n  viewsuffixes: boolean,\n  viewunits: boolean,\n  showparenthesis: boolean,\n}\nfunction App() {\n\n  window.MathJax && console.log(window.MathJax)\n\n  let ac = useRef<AppController|null>(null);\n  (ac.current === null) && (ac.current = new AppController());\n  const {unitsDefinitionsUtils, suffixUtils} = ac.current\n  console.log('[App]: Conversion Manager Version: ', ac.current.getVersion())\n\n  const controlsDefault = {\n    initialvalue: false,\n    initialunits: false,\n    targetunits: false,\n    viewsuffixes: false,\n    viewunits: false,\n    showparenthesis: false,\n  }\n  const [controls, setControls] = useState<TControls>(controlsDefault)\n  const {showparenthesis} = controls\n  // const {showparenthesis, ..._showSideBarData} = controls\n  // const showSideBarData = Object.values(_showSideBarData).reduce((acc: boolean, val: boolean)=>acc||val, false)\n\n\n\n\n  const [uiConversion, _setUiConversion] = useState<TUiItem>({\n    initialValue: { mantisse: 1, exponent: 1 },\n    initialUnits: ac.current.buildOpUnit([{suffix: SISuffix.CENTI, symbol: 'm', exponent: 2},{suffix: SISuffix.DECI, symbol: 's', exponent: 2}]),\n    targetUnits: ac.current.buildOpUnit([{suffix: SISuffix.CENTI, symbol: 'm', exponent: 2},{suffix: SISuffix.DECI, symbol: 's', exponent: 2}]),\n    targetValue: { mantisse: 1, exponent: 1 },\n    author: \"\"\n  })\n  const setUiConversion = async (ac: AppController, currUiConversion: TUiItem, key: string, val: any)=>{\n    let curr = {...currUiConversion}\n\n    key.toLowerCase() === \"initialValue\".toLowerCase() && val && (curr.initialValue = {...val as TSIValue})\n    key.toLowerCase() === \"initialUnits\".toLowerCase() && val && (curr.initialUnits = ac.buildOpUnit(val as TUnit[]))\n    key.toLowerCase() === \"targetUnits\".toLowerCase() && val && (curr.targetUnits = ac.buildOpUnit(val as TUnit[]))\n    key.toLowerCase() === \"author\".toLowerCase() && val && (curr.author = val as string)\n    if(key.toLowerCase() !== \"author\".toLowerCase()){\n      const tmp = await ac.convert(curr.initialValue, curr.initialUnits, curr.targetUnits)\n                          .catch(err => console.log(err));\n      tmp && (curr.targetValue = {...tmp})\n    }\n    \n    console.log(key, val, curr.initialUnits)\n\n    _setUiConversion({...curr})\n  }\n  console.log(uiConversion.initialUnits.units, uiConversion.initialUnits.dimension)\n\n\n\n\n  // const [unitPane, usingPaneForControl] = useState<boolean>(false)\n  const [siunitToAdd, setSiunitToAdd] = useState<TUnitDefinition>(unitsDefinitionsUtils.getBySymbol(\"m\"))\n  const [siunitOnDisplay, setSiunitOnDisplay] = useState<TUnit>({suffix: SISuffix.UNITY, symbol: 'm', exponent: 0})\n  const onResetApp = ()=>{\n    // setAlsoShowUnitsPane(false)\n    setControls({...controlsDefault})\n    setSiunitToAdd(unitsDefinitionsUtils.getBySymbol(\"m\"))\n    ac.current && _setUiConversion({\n      initialValue: { mantisse: 1, exponent: 1 },\n      initialUnits: ac.current.buildOpUnit([{suffix: SISuffix.CENTI, symbol: 'm', exponent: 2},{suffix: SISuffix.DECI, symbol: 's', exponent: 2}]),\n      targetUnits: ac.current.buildOpUnit([{suffix: SISuffix.CENTI, symbol: 'm', exponent: 2},{suffix: SISuffix.DECI, symbol: 's', exponent: 2}]),\n      targetValue: { mantisse: 1, exponent: 1 },\n      author: \"\"\n    })\n  }\n  \n  \n  \n  \n  \n\n  const updateControlObj = (controlsDefault: TControls, controlsCurrent: TControls, updateKeys: string[], updateVals: boolean[])=>{\n    let state = {...controlsDefault}; \n\n    for(let idx in updateKeys){\n      switch(updateKeys[idx]){\n        case 'initialunits': state.initialunits = updateVals[idx]; break;\n        case 'initialvalue': state.initialvalue = updateVals[idx]; break;\n        case 'targetunits': state.targetunits = updateVals[idx]; break;\n        case 'viewsuffixes': state.viewsuffixes = updateVals[idx]; break;\n        case 'viewunits': state.viewunits = updateVals[idx]; break;\n        default: break;\n      }\n    }\n\n    state.showparenthesis = controlsCurrent.showparenthesis; \n    return state\n  }\n  let onPaneItemClick = useRef<Function|null>(null)\n  \n  \n\n  \n  const [definitionToEdit, setDefinitionToEdit] = useState<TUnitDefinition|null|undefined>(null)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n  \n  return (\n    <div className=\"App d-flex-row bg-white\">\n\n        <div className=\"app-container bg-red-100\">\n\n\n          <h1>Current Conversion</h1>\n          \n          \n          <div className=\"current-conversion\">\n            <Conversion initialValue={uiConversion.initialValue}\n                        targetValue={uiConversion.targetValue}\n                        initialUnits={uiConversion.initialUnits}\n                        targetUnits={uiConversion.targetUnits}\n                        getSuffix={suffixUtils.getByValue}\n                        mustShowParenthesis={showparenthesis}\n            />\n          </div>\n\n\n\n\n\n\n          <SlideUpPane state={controls.initialvalue} onClose={()=>{let state = {...controlsDefault}; state.showparenthesis = controls.showparenthesis; state.initialvalue = false; setControls(state)}}>\n            <SIValueEditor sivalue={{...uiConversion.initialValue}} \n                         onChange={newVal=>ac.current && setUiConversion(ac.current, uiConversion, \"initialValue\", newVal)}\n            />\n          </SlideUpPane>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n          <SlideUpPane state={controls.initialunits} onClose={()=>{let state = {...controlsDefault}; state.showparenthesis = controls.showparenthesis; state.initialunits = false; setControls(state)}}>\n            {\n              uiConversion.initialUnits.units.map((un, index) => { \n                return (\n                  <SIUnitEditor siunit={un} \n                                key={index}\n                                suffixUtils={suffixUtils}\n                                unitDefUtils={unitsDefinitionsUtils}\n                                mustShowParenthesis={showparenthesis}\n                                onOpenSuffixPane={()=>{\n                                  onPaneItemClick.current = (suff: TSuffix)=>{\n                                    setControls(updateControlObj(controlsDefault, controls, [\"viewsuffixes\", \"initialunits\"], [false, true]))\n                                    let _un = {...un}\n                                    _un.suffix = suff.exponentOf10 \n                                    ac.current && setUiConversion(ac.current, uiConversion, \"initialUnits\", updateUnitCollection(uiConversion.initialUnits.units, _un, index))\n                                    onPaneItemClick.current = null;\n                                  }\n                                  setSiunitOnDisplay(tmp => {tmp.suffix = un.suffix/un.exponent; tmp.symbol = un.symbol ; return {...tmp}})\n                                  setControls(updateControlObj(controlsDefault, controls, [\"viewsuffixes\"], [true]))\n                                }}\n                                onOpenUnitPane={()=>{\n                                  onPaneItemClick.current = (def: TUnitDefinition)=>{\n                                    setControls(updateControlObj(controlsDefault, controls, [\"viewsuffixes\", \"initialunits\"], [false, true]))\n                                    let _un = {...un}\n                                    _un.symbol = def.symbol\n                                    _un.suffix = _un.suffix/_un.exponent  \n                                    ac.current && setUiConversion(ac.current, uiConversion, \"initialUnits\", updateUnitCollection(uiConversion.initialUnits.units, _un, index))\n                                    onPaneItemClick.current = null;\n                                  }\n                                  setSiunitOnDisplay(tmp => {tmp.suffix = un.suffix/un.exponent; tmp.symbol = un.symbol ; return {...tmp}})\n                                  setControls(updateControlObj(controlsDefault, controls, [\"viewunits\"], [true]))\n                                }}\n                                onChange={newVal=>ac.current && setUiConversion(ac.current, uiConversion, \"initialUnits\", updateUnitCollection(uiConversion.initialUnits.units, newVal, index))}\n                  />\n                )\n              })\n            }\n\n            \n            <AddSIUnitButton onAdd={()=>ac.current && setUiConversion(ac.current, uiConversion, \"initialUnits\", [...uiConversion.initialUnits.units.map(un=>{un.suffix = un.suffix/un.exponent; return {...un}}), {suffix: SISuffix.UNITY, symbol: siunitToAdd.symbol, exponent: 1}])}>\n                <UpDownInputContainer onNext={()=>setSiunitToAdd({...unitsDefinitionsUtils.getNext(siunitToAdd.symbol)})}\n                                      onPrevious={()=>setSiunitToAdd({...unitsDefinitionsUtils.getPrevious(siunitToAdd.symbol)})}\n                >\n                    {siunitToAdd.symbol + \" \"}\n                </UpDownInputContainer>\n            </AddSIUnitButton>\n          </SlideUpPane>\n\n\n          <SlideUpPane state={controls.targetunits} onClose={()=>{let state = {...controlsDefault}; state.showparenthesis = controls.showparenthesis; state.targetunits = false; setControls(state)}}>\n            {\n              uiConversion.targetUnits.units.map((un, index) => { \n                return (\n                  <SIUnitEditor siunit={un} \n                                key={index}\n                                suffixUtils={suffixUtils}\n                                unitDefUtils={unitsDefinitionsUtils}\n                                onOpenSuffixPane={()=>{\n                                  onPaneItemClick.current = (suff: TSuffix)=>{\n                                    setControls(updateControlObj(controlsDefault, controls, [\"viewsuffixes\", \"targetunits\"], [false, true]))\n                                    let _un = {...un}\n                                    _un.suffix = suff.exponentOf10 \n                                    ac.current && setUiConversion(ac.current, uiConversion, \"targetUnits\", updateUnitCollection(uiConversion.targetUnits.units, _un, index))\n                                    onPaneItemClick.current = null;\n                                  }\n                                  setSiunitOnDisplay(tmp => {tmp.suffix = un.suffix/un.exponent; tmp.symbol = un.symbol ; return {...tmp}})\n                                  setControls(updateControlObj(controlsDefault, controls, [\"viewsuffixes\"], [true]))\n                                }}\n                                onOpenUnitPane={()=>{\n                                  onPaneItemClick.current = (def: TUnitDefinition)=>{\n                                    setControls(updateControlObj(controlsDefault, controls, [\"viewsuffixes\", \"targetunits\"], [false, true]))\n                                    let _un = {...un}\n                                    _un.symbol = def.symbol\n                                    _un.suffix = _un.suffix/_un.exponent  \n                                    ac.current && setUiConversion(ac.current, uiConversion, \"targetUnits\", updateUnitCollection(uiConversion.targetUnits.units, _un, index))\n                                    onPaneItemClick.current = null;\n                                  }\n                                  setSiunitOnDisplay(tmp => {tmp.suffix = un.suffix/un.exponent; tmp.symbol = un.symbol ; return {...tmp}})\n                                  setControls(updateControlObj(controlsDefault, controls, [\"viewunits\"], [true]))\n                                }}\n                                mustShowParenthesis={showparenthesis}\n                                onChange={newVal=>ac.current && setUiConversion(ac.current, uiConversion, \"targetUnits\", updateUnitCollection(uiConversion.targetUnits.units, newVal, index))}\n                  />\n                )\n              })\n            }\n            <AddSIUnitButton onAdd={()=>ac.current && setUiConversion(ac.current, uiConversion, \"targetUnits\", [...uiConversion.targetUnits.units.map(un=>{un.suffix = un.suffix/un.exponent; return {...un}}), {suffix: SISuffix.UNITY, symbol: siunitToAdd.symbol, exponent: 1}])}>\n                <UpDownInputContainer onNext={()=>setSiunitToAdd({...unitsDefinitionsUtils.getNext(siunitToAdd.symbol)})}\n                                          onPrevious={()=>setSiunitToAdd({...unitsDefinitionsUtils.getPrevious(siunitToAdd.symbol)})}\n                >\n                    {siunitToAdd.symbol + \" \"}\n                </UpDownInputContainer>\n            </AddSIUnitButton>\n          </SlideUpPane>\n        </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        <div className=\"app-sidebar bg-gray-800 text-white box-shadow\">\n\n\n          <div className={`app-side-data-container ${controls.viewsuffixes ? 'app-side-data-container--visible' : ''}`}>\n            {\n              suffixUtils.getAll().map((un, id) => (\n                <div key={id} onClick={ evt => { onPaneItemClick && onPaneItemClick.current && onPaneItemClick.current(un); setSiunitOnDisplay(tmp => {tmp.suffix=un.exponentOf10; return {...tmp}}) } } className={`app-side-data-item app-side-data-item-suffix ${un.exponentOf10 === 0?'app-side-data-item-suffix--disabled':''} ${siunitOnDisplay.suffix===un.exponentOf10?'app-side-data-item-suffix--active':''}`}>\n                  <p className=\"suffix-exponent\">10 <span>{un.exponentOf10>0?'+':''}{un.exponentOf10}</span></p>\n                  <p className=\"suffix-details\">\n                    <span className=\"suffix-name\">{un.exponentOf10 > 0 ? toCapital(un.name) : un.name.toLowerCase()}</span>\n                    <span className=\"suffix-symbol\">{un.symbol}&nbsp;</span>\n                  </p>\n                </div>\n              ))\n            }\n          </div>\n\n\n\n          <div className={`app-side-data-container ${controls.viewunits ? 'app-side-data-container--visible' : ''}`}>\n            {\n              unitsDefinitionsUtils.getAll().map((un, id) => (\n                <div key={id} onClick={ evt => { onPaneItemClick && onPaneItemClick.current && onPaneItemClick.current(un); setSiunitOnDisplay(tmp => {tmp.symbol=un.symbol; return {...tmp}}) }  }  className={`app-side-data-item app-side-data-item-unit-definition  ${siunitOnDisplay.symbol===un.symbol?'app-side-data-item-unit-definition--active':''}`}>\n                  <p className=\"definition-symbol\">{un.symbol}</p>\n                  <p className=\"definition-details\">\n                    <span className=\"definition-name\">{un.name}</span>\n                    <span className=\"definition-view\" onClick={evt=>{evt.stopPropagation();evt.preventDefault();setDefinitionToEdit({...un})}}><i className=\"fas fa-eye\"></i></span>\n                    <span className=\"definition-measures\">*{un.measurement}</span>\n                  </p>\n                </div>\n              ))\n            }\n            <div onClick={evt=>setDefinitionToEdit(undefined)} className=\"add-definition app-side-data-item app-side-data-item-unit-definition\"><div><i className=\"fas fa-plus\"></i></div><p>Add New</p></div>\n          </div>\n          {\n            definitionToEdit!==null && ac.current && (\n              <Modal isActive={definitionToEdit!==null} onDeactivate={()=>setDefinitionToEdit(null)} extraClasses={\"top-z-index\"}>\n                <SIDefinitionEditor definition={definitionToEdit} \n                                    onChange={(def)=>setDefinitionToEdit({...def})} \n                                    onSave={(def, isNew)=>{ac.current && isNew && ac.current.addDefinition({...def}); setDefinitionToEdit(null)}}\n                                    suffixUtils={suffixUtils}\n                                    unitDefUtils={unitsDefinitionsUtils}\n                                    mustShowParenthesis={showparenthesis}\n                />\n              </Modal>\n            )\n          }\n          \n\n\n\n\n\n\n\n\n\n\n\n          <div className=\"app-side-controls-container bg-gray-800\">\n            <label htmlFor=\"control-initialunits\" className={`sidebar-control-container ${controls.initialunits?'sidebar-control-container--selected':''}`}><input type=\"checkbox\" id=\"control-initialunits\" checked={controls.initialunits} onChange={evt => { let state = {...controlsDefault}; state.showparenthesis = controls.showparenthesis; state.initialunits = evt.target.checked; setControls(state)}}/><div className=\"sidebar-control_details\">Initial Units</div><div className=\"sidebar-control\"><i className=\"fas fa-balance-scale\"></i></div></label>\n            <label htmlFor=\"control-initialvalue\" className={`sidebar-control-container ${controls.initialvalue?'sidebar-control-container--selected':''}`}><input type=\"checkbox\" id=\"control-initialvalue\" checked={controls.initialvalue} onChange={evt => { let state = {...controlsDefault}; state.showparenthesis = controls.showparenthesis; state.initialvalue = evt.target.checked; setControls(state)}}/><div className=\"sidebar-control_details\">Value To Convert</div><div className=\"sidebar-control\"><i className=\"fas fa-sort-numeric-up\"></i></div></label>\n            <label htmlFor=\"control-targetunits\" className={`sidebar-control-container ${controls.targetunits?'sidebar-control-container--selected':''}`}><input type=\"checkbox\" id=\"control-targetunits\" checked={controls.targetunits} onChange={evt => { let state = {...controlsDefault}; state.showparenthesis = controls.showparenthesis; state.targetunits = evt.target.checked; setControls(state)}}/><div className=\"sidebar-control_details\">Final Units</div><div className=\"sidebar-control\"><i className=\"fas fa-balance-scale-right\"></i></div></label>\n            <label htmlFor=\"control-viewsuffixes\" className={`sidebar-control-container ${controls.viewsuffixes?'sidebar-control-container--selected':''}`}><input type=\"checkbox\" id=\"control-viewsuffixes\" checked={controls.viewsuffixes} onChange={evt => { let state = {...controlsDefault}; state.showparenthesis = controls.showparenthesis; state.viewsuffixes = evt.target.checked; setControls(state)}}/><div className=\"sidebar-control_details\">View Suffixes</div><div className=\"sidebar-control\"><i className=\"fas fa-sort-amount-down\"></i></div></label>\n            <label htmlFor=\"control-viewunits\" className={`sidebar-control-container ${controls.viewunits?'sidebar-control-container--selected':''}`}><input type=\"checkbox\" id=\"control-viewunits\" checked={controls.viewunits} onChange={evt => { let state = {...controlsDefault}; state.showparenthesis = controls.showparenthesis; state.viewunits = evt.target.checked; setControls(state)}}/><div className=\"sidebar-control_details\">View Units</div><div className=\"sidebar-control\"><i className=\"fas fa-font\"></i></div></label>\n            <label htmlFor=\"control-showparenthesis\" className={`sidebar-control-container ${controls.showparenthesis?'sidebar-control-container--selected':''}`}><input type=\"checkbox\" id=\"control-showparenthesis\" checked={controls.showparenthesis} onChange={evt => { const state = evt.target.checked; setControls(cnt => {cnt.showparenthesis=state;return {...cnt}})}}/><div className=\"sidebar-control_details\">Show/Hide Parenthesis</div><div className=\"sidebar-control sidebar-control-parenthesis\"><p>()</p></div></label>\n            <div className=\"sidebar-control-container\" onClick={evt=>onResetApp()}><div className=\"sidebar-control_details\">Reset App</div><div className=\"sidebar-control\"><i className=\"fas fa-undo-alt\"></i></div></div>\n          </div>\n\n\n\n\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n\n\nconst updateUnitCollection = (unCollection: TUnit[], unObj: TUnit, unIndex: number): TUnit[]=>{\n  const uns = unCollection.map((tmp, idx) => {\n    (unIndex === idx) && (tmp = {...unObj});\n    (unIndex !== idx) && (tmp.suffix /= tmp.exponent);\n    return tmp;\n  })\n  return uns\n}\n\nexport {updateUnitCollection}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}