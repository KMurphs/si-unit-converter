{"version":3,"sources":["data/utils/native.data.ts","components/Controls/Controls.tsx","components/SlideUpPane/SlidingPanes.tsx","components/MathJaxCurrentConversion/MathJaxCurrentConversion.tsx","components/Pages/Page.tsx","components/MathJax/MathJaxSIValueEditor.tsx","data/utils/units.manager.ts","data/utils/definitions.manager.ts","data/conversion.manager.ts","components/CustomInput/CustomInput.tsx","components/MathJax/MathJaxSIUnitEditor.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["SISuffix","Controls","onClick","extraClasses","className","Control","children","evt","SlideUpPane","isShowing","onHide","stopPropagation","nativeData","symbol","name","YOTTA","toLowerCase","factor_exponent","ZETTA","EXA","PETA","TERA","GIGA","MEGA","KILO","HECTO","DECA","UNITY","getSuffixObject","suffix","suffixes","filter","suf","baseSymbol","exponent","id","measurement","unitID","description","definition","factor","units","MathJaxCurrentConversion","showParenthesis","conversionObject","round","val","dec","Number","Math","startVal","startExp","finalVal","finalExp","startUnits","finalUnits","mustShowParenthesis","undefined","pRef_start","useRef","pRef_equal","pRef_final","useEffect","current","innerHTML","buildMathJaxUnits","window","MathJax","typeset","ref","addParenthesis","num","den","forEach","unit","buildMathJaxUnit","exp","abs","tmp","Page","onClose","MathJaxSIValueEditor","onChange","useState","expVal","_setExpVal","type","value","placeholder","onInput","targetVal","target","console","log","match","targetValParts","split","has_e","indexOf","mantisse","replace","newExpVal","decimalExp","parseFloat","pow","toExponential","setExpVal","UnitsManager","data","_nativeUnits","storage","key","get","localStorage","getItem","JSON","parse","set","delete","setItem","stringify","removeItem","this","storageUnits","filterOutKnownUnits","newUnits","trulyNewUnits","Promise","resolve","length","map","item","associatedUnit","unitSymbol","filterOutKnownIds","buildUnitID","addUnits","ids","reduce","itemAlreadyInCache","cache","UnitDefinitionsManager","unitsManager","_nativeDefinitions","unitDefinitions","defs","storageDefs","filterOutKnownDefs","names","def","newDefs","trulyNewDefinitions","defName","associatedDef","associatedUnitID","createUnit","getUnits","composedUnits","baseUnits","currUnit","shift","currDefs","getDefinitionsByUnitBaseSymbol","push","collectBaseUnits","composingUnitsIDs","composingFactor","filterOutKnownDefNames","unknownDefName","unknownUnits","unitsCollection","getUnitById","sort","a","b","addDefinitions","ConversionsManager","unitDefinitionsManager","unitsDefsManager","author","getConversions","rec","meta","start","final","Date","getTime","createdTimestamp","base","_getUnit","currOpUnit","getUnitBySymbol","valParts","initial_value","initial_unit","final_unit","unknownUnitIds","initialIDs","finalIDs","message","payload","finalBaseUnits","initialBaseUnits","warn","_initial_unit","_final_unit","now","conversion","numberToSIObject","createDefinition","getDefinitions","getDefinitionsByName","CustomInputText","handleChange","disabled","preventDefault","CustomInputNumberUndefined","min","max","step","willPotentiallyCacheThis","toString","cachedValue","setCachedValue","defaultProps","MAX_SAFE_INTEGER","TControlPanes","MathJaxSIUnitEditor","currentUnit","unitsDefinitions","unitsSuffixes","onNewUnit","onSuffixChange","onUnitChange","onExponentChange","onUnitSelection","onUnitRemoval","index","isActive","onSelected","onRemove","onSelection","newVal","toCapital","str","substr","toUpperCase","UnitComponent","pRef","mathjaxexpression","DefinitionComponent","SuffixComponent","App","cm","getVersion","showingParenthesis","setShowingParenthesis","NONE","showingSlidingPane","setShowingSlidingPane","setStartVal","setStartExp","buildUnitObject","setStartUnits","setFinalVal","setFinalExp","setFinalUnits","conversionObj","currentStartUnit","setCurrentStartUnit","currentFinalUnit","setCurrentFinalUnit","INITIAL_VALUE","res","addConversion","final_value","conversionHandler","INITIAL_UNITS","getUnitsDefinitions","getSuffixes","un","newSuffix","newUnit","newExp","FINAL_UNITS","srcControl","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.2603970b.chunk.js","sourcesContent":["import { TSuffix, TUnit, TUnitDefinition } from \"../types\";\r\n\r\n\r\nexport type TNativeData = {\r\n  suffixes: TSuffix[],\r\n  units: TUnit[],\r\n  unitDefinitions: TUnitDefinition[],\r\n  getSuffixObject: (suufix: SISuffix)=>TSuffix\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport enum SISuffix {\r\n  YOTTA = 24,\r\n  ZETTA = 21,\r\n  EXA = 18,\r\n  PETA = 15,\r\n  TERA = 12,\r\n  GIGA = 9,\r\n  MEGA = 6,\r\n  KILO = 3,\r\n  HECTO = 2,\r\n  DECA = 1,\r\n  UNITY = 0,\r\n  DECI = -1,\r\n  CENTI = -2,\r\n  MILLI = -3,\r\n  MICRO = -6,\r\n  NANO = -9,\r\n  PICO = -12,\r\n  FENTO = -15,\r\n}\r\n\r\n\r\n\r\n\r\n// https://stackoverflow.com/questions/4616202/self-references-in-object-literals-initializers\r\nexport const nativeData: TNativeData = {\r\n  \r\n  get suffixes(){ return [\r\n    { symbol: 'Y', name: SISuffix[SISuffix.YOTTA].toLowerCase(), factor_exponent: SISuffix.YOTTA },\r\n    { symbol: 'Z', name: SISuffix[SISuffix.ZETTA].toLowerCase(), factor_exponent: SISuffix.ZETTA },\r\n    { symbol: 'E', name: SISuffix[SISuffix.EXA].toLowerCase(), factor_exponent: SISuffix.EXA },\r\n    { symbol: 'P', name: SISuffix[SISuffix.PETA].toLowerCase(), factor_exponent: SISuffix.PETA },\r\n    { symbol: 'T', name: SISuffix[SISuffix.TERA].toLowerCase(), factor_exponent: SISuffix.TERA },\r\n    { symbol: 'G', name: SISuffix[SISuffix.GIGA].toLowerCase(), factor_exponent: SISuffix.GIGA },\r\n    { symbol: 'M', name: SISuffix[SISuffix.MEGA].toLowerCase(), factor_exponent: SISuffix.MEGA },\r\n    { symbol: 'k', name: SISuffix[SISuffix.KILO].toLowerCase(), factor_exponent: SISuffix.KILO },\r\n    { symbol: 'h', name: SISuffix[SISuffix.HECTO].toLowerCase(), factor_exponent: SISuffix.HECTO },\r\n    { symbol: 'da', name: SISuffix[SISuffix.DECA].toLowerCase(), factor_exponent: SISuffix.DECA },\r\n    { symbol: '', name: SISuffix[SISuffix.UNITY].toLowerCase(), factor_exponent: SISuffix.UNITY },\r\n  ]},\r\n  getSuffixObject: (suffix)=>nativeData.suffixes.filter(suf => suf.factor_exponent === suffix)[0],\r\n\r\n  get units() { return [{\r\n    baseSymbol: 'm',\r\n    exponent: 1,\r\n    id: 'm'\r\n  },{\r\n    baseSymbol: 's',\r\n    exponent: 1,\r\n    id: 's'\r\n  },{\r\n    baseSymbol: 'g',\r\n    exponent: 1,\r\n    id: 'g'\r\n  }]},\r\n  \r\n  get unitDefinitions(){ return [{\r\n    name: 'meter',\r\n    measurement: 'Length, Height',\r\n    unitID: 'm',\r\n    description: 'Measures Length',\r\n    definition: {\r\n      factor: 1,\r\n      units: []\r\n    }\r\n  },{\r\n    name: 'second',\r\n    measurement: 'Time',\r\n    unitID: 's',\r\n    description: 'Measures Time',\r\n    definition: {\r\n      factor: 1,\r\n      units: []\r\n    }\r\n  },{\r\n    name: 'gram',\r\n    measurement: 'Mass',\r\n    unitID: 'g',\r\n    description: 'Measures Mass',\r\n    definition: {\r\n      factor: 1,\r\n      units: []\r\n    }\r\n  }]}\r\n\r\n}\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport './Controls.css';\r\n\r\n\r\ntype TProps = {\r\n  onClick: (srcControl: string)=>void\r\n  extraClasses?: string\r\n}\r\nconst Controls: React.FC<TProps> = ({onClick, extraClasses}) => {\r\n  \r\n\r\n  return (\r\n    <div className={`controls-component ${extraClasses}`}>\r\n\r\n      <Control onClick={()=>onClick('initial-value')}><i className=\"fas fa-sort-numeric-up\"></i></Control>\r\n      <Control onClick={()=>onClick('initial-units')}><i className=\"fas fa-balance-scale\"></i></Control>\r\n      <Control onClick={()=>onClick('final-units')}><i className=\"fas fa-balance-scale-right\"></i></Control>\r\n      <Control onClick={()=>onClick('toggle-parenthesis')} extraClasses={`bg-parenthesis`} ></Control>\r\n\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default Controls\r\n\r\n\r\n\r\n\r\n\r\ntype TProps1 = {\r\n  onClick: ()=>void\r\n  extraClasses?: string\r\n}\r\nconst Control: React.FC<TProps1> = ({children, extraClasses, onClick}) => {\r\n\r\n  return (\r\n    <div className={`control-component ${extraClasses}`} onClick={evt => onClick && onClick()}>\r\n      <div className=\"control\">\r\n        <span>{children}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}","import React from 'react';\r\nimport './SlidingPanes.css';\r\n\r\n\r\ntype TProps = {\r\n  isShowing: boolean,\r\n  onHide: ()=>void,\r\n  extraClasses?: string\r\n}\r\nconst SlideUpPane: React.FC<TProps> = ({children, isShowing, onHide, extraClasses}) => {\r\n\r\n  return (\r\n    <div className={`sliding-pane-component sliding-up ${isShowing?'sliding-pane-component--showing':''} ${extraClasses}`} onClick={evt=>onHide()}>\r\n      <div className={`sliding-pane-inner-container`} onClick={evt=>evt.stopPropagation()}>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default SlideUpPane","import React, { useState, useRef, useEffect } from 'react';\r\nimport './MathJaxCurrentConversion.css';\r\nimport { TConversionObj } from '../../ui.types';\r\nimport { TOperationalUnit } from '../../data/types';\r\nimport { SISuffix } from '../../data/utils/native.data';\r\n\r\n\r\ntype TProps = {\r\n  conversionObject: TConversionObj\r\n  showParenthesis?: boolean\r\n}\r\nconst MathJaxCurrentConversion: React.FC<TProps> = ({showParenthesis, conversionObject}) => {\r\n  const round = (val: number, dec: number)=>Number(`${Math.round(Number(`${val}e${dec}`))}e-${dec}`)\r\n  const {startVal, startExp, finalVal, finalExp, startUnits, finalUnits} = conversionObject\r\n  const mustShowParenthesis = showParenthesis !== undefined ? showParenthesis : true\r\n  \r\n  let pRef_start = useRef<any>()\r\n  let pRef_equal = useRef<any>()\r\n  let pRef_final = useRef<any>()\r\n  useEffect(() => {\r\n\r\n    pRef_start.current && (pRef_start.current.innerHTML = `\\`${round(startVal, 4)}&nbsp;10^(${startExp})&nbsp;${buildMathJaxUnits(startUnits, mustShowParenthesis)}\\``);\r\n    pRef_equal.current && (pRef_equal.current.innerHTML = `\\`=\\``);\r\n    pRef_final.current && (pRef_final.current.innerHTML = `\\`${round(finalVal, 4)}&nbsp;10^(${finalExp})&nbsp;${buildMathJaxUnits(finalUnits, mustShowParenthesis)}\\``);\r\n\r\n    window.MathJax && window.MathJax.typeset && window.MathJax.typeset()\r\n  });\r\n\r\n  return (\r\n    <div className=\"mathjax-current-conversion-component\">\r\n      <div ref={pRef_start} className=\"mathjax-item\"></div>\r\n      <div ref={pRef_equal}></div>\r\n      <div ref={pRef_final} className=\"mathjax-item\"></div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default MathJaxCurrentConversion\r\n\r\n\r\n\r\n\r\nconst buildMathJaxUnits = (units: TOperationalUnit[], addParenthesis: boolean):string => {\r\n  let num: string = ''\r\n  let den: string = ''\r\n  units.forEach(unit => {\r\n    unit.exponent >= 0 && (num = num + buildMathJaxUnit(unit, addParenthesis));\r\n    unit.exponent < 0 &&  (den = den + buildMathJaxUnit(unit, addParenthesis));\r\n  })\r\n  return `(${num === '' ? '1' : num})${den === '' ? '' : `/(${den})`}`\r\n}\r\n\r\nconst buildMathJaxUnit = (unit: TOperationalUnit, addParenthesis: boolean):string => {\r\n\r\n  let suffix = unit.suffix && SISuffix[unit.suffix] !== SISuffix[SISuffix.UNITY] ? unit.suffix : ''\r\n  let exp = Math.abs(unit.exponent) === 1 ? '' : `^${Math.abs(unit.exponent)}`\r\n  let tmp = ''\r\n  unit.exponent >= 0 && (tmp = tmp + `${addParenthesis?'(':''}${suffix}${unit.symbol}${exp}${addParenthesis?')':''}`);\r\n  unit.exponent < 0 &&  (tmp = tmp + `${addParenthesis?'(':''}${suffix}${unit.symbol}${exp}${addParenthesis?')':''}`);\r\n\r\n\r\n\r\n  return tmp\r\n}\r\nexport {buildMathJaxUnits, buildMathJaxUnit}","import React from 'react';\r\nimport './Page.css';\r\n\r\n\r\n\r\ntype TProps = {\r\n  onClose: ()=>void\r\n}\r\nconst Page: React.FC<TProps> = ({children, onClose}) => {\r\n\r\n  return (\r\n    <div className=\"page-component\">\r\n      <div className=\"page-content\">\r\n        {children}\r\n      </div>\r\n      <div className=\"close-page\" onClick={evt=>onClose()}><span><i className=\"fas fa-times-circle\"></i></span></div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default Page","import React, { useState, useRef, useEffect } from 'react';\r\nimport './MathJax.css';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ntype TProps = {\r\n  onChange: (matisse: number, exponent: number)=>void,\r\n}\r\nconst MathJaxSIValueEditor: React.FC<TProps> = ({onChange}) => {\r\n  \r\n  let [expVal, _setExpVal] = useState<string>('')\r\n  const setExpVal = (newExpVal: string) => {\r\n\r\n    let decimalExp: string = \"\";\r\n    decimalExp = newExpVal.split('e')[1]\r\n    decimalExp && (decimalExp = decimalExp.split(\".\")[1])\r\n    decimalExp && (decimalExp = \"0.\" + decimalExp)\r\n    \r\n    const floatVal = parseFloat(newExpVal) * (decimalExp ? Math.pow(10, parseFloat(decimalExp)) : 1)\r\n    const [val, exp] = floatVal.toExponential().split('e')\r\n\r\n    console.log(newExpVal, parseFloat(val), parseFloat(exp))\r\n    onChange(parseFloat(val), parseFloat(exp))\r\n    _setExpVal(newExpVal)\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"si-object-value-container\">\r\n    <input className=\"si-object-value\" type=\"text\" \r\n           value={expVal} \r\n           onChange={()=>{}}\r\n           placeholder=\"1.23E+12\"\r\n           onInput={evt => {\r\n            const targetVal = (evt.target as HTMLInputElement).value\r\n            console.log(targetVal);\r\n            if(targetVal.match(/^[-0-9]*[\\.]?[0-9]*(E)?[-+]?[0-9]*[\\.]?[0-9]*$/i)){\r\n              const targetValParts = targetVal.toLowerCase().split('e');\r\n              const has_e = targetVal.indexOf('e') !== -1\r\n\r\n              let mantisse: string = targetValParts[0] ? targetValParts[0] : '0';\r\n              targetValParts[0] && has_e && (mantisse = mantisse + 'e')\r\n              targetValParts[0] && !has_e && (mantisse = mantisse.replace(/\\+$/, '').replace(/\\-$/, ''))\r\n\r\n              let exp = targetValParts[1] ? targetValParts[1] : '';\r\n              targetValParts[1] && exp.indexOf('+') === -1 && exp.indexOf('-') == -1 && (exp = '+' + exp);\r\n\r\n              const targetValNew = `${mantisse}${exp}`\r\n              setExpVal(targetValNew)\r\n            }\r\n          }}\r\n    />\r\n    <span className=\"edit-icon\"><i className=\"fas fa-pencil-alt\"></i></span>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default MathJaxSIValueEditor;","import { TUnit } from \"../types\"\r\nimport { nativeData } from \"./native.data\"\r\n\r\n\r\n\r\n\r\n\r\nexport default class UnitsManager{\r\n  private data: TUnit[] = []\r\n  private _nativeUnits: TUnit[] = nativeData.units\r\n\r\n\r\n  \r\n\r\n  constructor(){\r\n    this.data = [...this._nativeUnits]\r\n    const storageUnits = this.filterOutKnownUnits(this.storage.get())\r\n    this.data = [...this.data, ...storageUnits]\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  private storage = {\r\n    key: 'customunits',\r\n    get: (): TUnit[] => {\r\n      const units = localStorage.getItem(this.storage.key)\r\n      return units ? JSON.parse(units) as TUnit[] : []\r\n    },\r\n    set: () => {\r\n      this.storage.delete()\r\n      localStorage.setItem(this.storage.key, JSON.stringify(this.data))\r\n    },\r\n    delete: () => {\r\n      localStorage.removeItem(this.storage.key)\r\n    }\r\n  }\r\n  public buildUnitID(baseSymbol: string, exponent?:number): string{\r\n    const id = (exponent && exponent !==1) ? `${baseSymbol}^(${exponent})` : `${baseSymbol}`\r\n    // console.log('[UM]: Build id for \\'', baseSymbol, '\\', \\'', exponent, '\\' as \\'', id, '\\'')\r\n    return id\r\n  }\r\n  private addUnits(newUnits: TUnit[]): number{\r\n    const trulyNewUnits = this.filterOutKnownUnits(newUnits)\r\n    this.data = [...this.data, ...trulyNewUnits]\r\n\r\n    const sendToStorage = ()=>{\r\n      return new Promise((resolve)=>{\r\n        this.storage.set()\r\n        resolve('done')\r\n      })//.then(res => console.log(\"[UM]: Units Saved To Storage: \", res))\r\n    }\r\n    sendToStorage()\r\n\r\n    return trulyNewUnits.length\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  public getUnits(): TUnit[]{ return [...this.data]}\r\n  public getUnitsIds(): string[]{ return this.data.map(item => item.id)}\r\n  public getUnitById(unitID: string): TUnit|null{\r\n    const associatedUnit = this.data.filter(unit => unit.id === unitID)[0]\r\n    return associatedUnit ? associatedUnit : null\r\n  }\r\n  public getUnitBySymbol(unitSymbol: string): TUnit|null{\r\n    const associatedUnit = this.data.filter(unit => unit.baseSymbol === unitSymbol)[0]\r\n    return associatedUnit ? associatedUnit : null\r\n  }\r\n  public createUnit(baseSymbol: string, exponent?:number): number{\r\n  // public createUnit(baseSymbol: string): number{\r\n\r\n    if(exponent === 0){\r\n      return 0\r\n    }\r\n\r\n    const [id] = this.filterOutKnownIds([this.buildUnitID(baseSymbol, exponent)])\r\n    if(!id){\r\n      return 0\r\n    }\r\n\r\n    return this.addUnits([{\r\n      baseSymbol: baseSymbol,\r\n      exponent: exponent ? exponent : 1,\r\n      id: id\r\n    }])\r\n    \r\n  }\r\n\r\n\r\n\r\n\r\n  public filterOutKnownIds(ids: string[]): string[] {\r\n    return ids.filter(id => !this.data.reduce(\r\n      (itemAlreadyInCache: boolean, cache) => itemAlreadyInCache || (id === cache.id), false)\r\n    )\r\n  }\r\n  public filterOutKnownUnits(units: TUnit[]): TUnit[] {\r\n    return units.filter(unit => !this.data.reduce(\r\n      (itemAlreadyInCache: boolean, cache) => itemAlreadyInCache || (unit.id === cache.id), false)\r\n    )\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n        \r\n\r\n\r\n","import { TUnitDefinition, TUnit } from \"../types\"\r\nimport { nativeData } from \"./native.data\"\r\nimport UnitsManager from \"./units.manager\"\r\n\r\n\r\n\r\n\r\n\r\nexport default class UnitDefinitionsManager{\r\n  private data: TUnitDefinition[] = []\r\n  private _nativeDefinitions: TUnitDefinition[] = nativeData.unitDefinitions\r\n  private unitsManager: UnitsManager\r\n\r\n\r\n  \r\n\r\n  constructor(unitsManager?: UnitsManager){\r\n\r\n    this.data = [...this._nativeDefinitions]\r\n    const storageDefs = this.filterOutKnownDefs(this.storage.get())\r\n    this.data = [...this.data, ...storageDefs]\r\n\r\n    this.unitsManager = unitsManager ? unitsManager : new UnitsManager()\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  private storage = {\r\n    key: 'customunits-definitions',\r\n    get: (): TUnitDefinition[] => {\r\n      const defs = localStorage.getItem(this.storage.key)\r\n      return defs ? JSON.parse(defs) as TUnitDefinition[] : []\r\n    },\r\n    set: () => {\r\n      this.storage.delete()\r\n      localStorage.setItem(this.storage.key, JSON.stringify(this.data))\r\n    },\r\n    delete: () => {\r\n      localStorage.removeItem(this.storage.key)\r\n    }\r\n  }\r\n  private filterOutKnownDefNames(names: string[]): string[] {\r\n    return names.filter(name => !this.data.reduce(\r\n      (itemAlreadyInCache: boolean, cache) => itemAlreadyInCache || (name === cache.name), false)\r\n    )\r\n  }\r\n  private filterOutKnownDefs(defs: TUnitDefinition[]): TUnitDefinition[] {\r\n    return defs.filter(def => !this.data.reduce(\r\n      (itemAlreadyInCache: boolean, cache) => itemAlreadyInCache || (def.name === cache.name), false)\r\n    )\r\n  }\r\n  // private buildUnitID(symbol: string, exponent?:number): string{\r\n  //   return exponent !== 1 ? `${symbol}^(${exponent})` : `${symbol}`\r\n  // }\r\n  private addDefinitions(newDefs: TUnitDefinition[]): number{\r\n    const trulyNewDefinitions = this.filterOutKnownDefs(newDefs)\r\n    this.data = [...this.data, ...trulyNewDefinitions]\r\n\r\n    const sendToStorage = ()=>{\r\n      return new Promise((resolve)=>{\r\n        this.storage.set()\r\n        resolve('done')\r\n      })//.then(res => console.log(\"[DM]: Definitions Saved To Storage: \", res))\r\n    }\r\n    sendToStorage()\r\n\r\n    return trulyNewDefinitions.length\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  public getDefinitions(): TUnitDefinition[]{ return [...this.data]}\r\n  public getDefinitionsNames(): string[]{ return this.data.map(item => item.name)}\r\n  public getDefinitionsByName(defName: string): TUnitDefinition|null{\r\n    const associatedDef = this.data.filter(def => def.name.toLowerCase() === defName.toLowerCase())[0]\r\n    return associatedDef ? associatedDef : null\r\n  }\r\n  public getDefinitionsByUnitBaseSymbol(unitID: string): TUnitDefinition|null{\r\n    const associatedUnitID = this.data.filter(def => def.unitID === unitID)[0]\r\n    return associatedUnitID ? associatedUnitID : null\r\n  }\r\n  public buildUnitObject(baseSymbol: string, exponent?:number): string {\r\n\r\n    const id = this.unitsManager.buildUnitID(baseSymbol, exponent)\r\n    // console.log('[DM]: Built Unit: ', id)\r\n    return id\r\n  }\r\n  public registerUnit(baseSymbol: string, exponent?:number): number {\r\n    return this.unitsManager.createUnit(baseSymbol, exponent)\r\n  }\r\n  public getRegisteredUnits(): TUnit[] {\r\n    return this.unitsManager.getUnits()\r\n  }\r\n  public collectBaseUnits(\r\n    composedUnits: (TUnit|null|undefined)[], \r\n    baseUnits: TUnit[]): number{\r\n    // Process the first unit the array\r\n    let currUnit = composedUnits.shift()\r\n    // Get the associated definition for the base symbole (i.e if m^2 only take m) \r\n    let currDefs = currUnit ? this.getDefinitionsByUnitBaseSymbol(currUnit.baseSymbol) : null\r\n    // If the definition shows that we have a basic dimension, collect it\r\n    currUnit && currDefs && currDefs.definition.units.length === 0 && baseUnits.push(currUnit)\r\n    // If the definition shows that the base symbol is actually a composed unit - as N (newton) is actually kg.m/sec^2\r\n    // Push each one of these composing unit to the unit array\r\n    currUnit && currDefs && currDefs.definition.units.length !== 0 && (composedUnits = [...composedUnits, ...currDefs.definition.units])\r\n\r\n    // End Recursion policy\r\n    if(composedUnits.length !== 0){\r\n      return this.collectBaseUnits(composedUnits, baseUnits)\r\n    }else{\r\n      return 0\r\n    }\r\n  }\r\n\r\n  public createDefinition(name: string, \r\n                          measurement: string, \r\n                          associatedUnitID: string, \r\n                          composingUnitsIDs: string[], \r\n                          composingFactor: number = 1, \r\n                          description?:string): number{\r\n\r\n    if(name === '' \r\n    || measurement === '' \r\n    || composingUnitsIDs === [] \r\n    || composingFactor === 0){\r\n      return 0\r\n    }\r\n\r\n    const [unknownDefName] = this.filterOutKnownDefNames([name])\r\n    if(!unknownDefName){\r\n      return 0\r\n    }\r\n\r\n\r\n    let [unknownUnits] = this.unitsManager.filterOutKnownIds(composingUnitsIDs)\r\n    if(unknownUnits){\r\n      return 0\r\n    }\r\n\r\n    [unknownUnits] = this.unitsManager.filterOutKnownIds([associatedUnitID])\r\n    // console.log(this.unitsManager.getUnits(), unknownUnits)\r\n    if(unknownUnits){\r\n      return 0\r\n    }\r\n\r\n\r\n\r\n    let unitsCollection: TUnit[] = []\r\n    let units = composingUnitsIDs.map(id => this.unitsManager.getUnitById(id)) as any as TUnit[]\r\n    this.collectBaseUnits(units, unitsCollection)\r\n    unitsCollection.sort((a,b) => {\r\n      if(a.id > b.id) return 1\r\n      else return -1\r\n    })\r\n\r\n\r\n\r\n\r\n\r\n    return this.addDefinitions([{\r\n      name: name.toLowerCase(),\r\n      measurement: measurement,\r\n      unitID: associatedUnitID,\r\n      description: description ? description : measurement,\r\n      definition: {\r\n        factor: composingFactor,\r\n        units: unitsCollection\r\n      }\r\n    }])\r\n\r\n    \r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n        \r\n\r\n\r\n","import { TConversion, TUnit, TSIObject, TOperationalUnit, TFeedback, TMeta, TUnitDefinition, TSuffix } from \"./types\"\r\nimport { nativeData, SISuffix } from \"./utils/native.data\"\r\nimport UnitsManager from \"./utils/units.manager\"\r\nimport UnitDefinitionsManager from \"./utils/definitions.manager\"\r\n\r\n\r\n\r\n\r\n\r\nexport default class ConversionsManager{\r\n  private data: TConversion[] = []\r\n  private unitsManager: UnitsManager\r\n  private unitsDefsManager: UnitDefinitionsManager\r\n  public getVersion(): string{\r\n    return '1.0'\r\n  }\r\n\r\n\r\n  \r\n\r\n  constructor(\r\n    unitsManager?: UnitsManager, \r\n    unitDefinitionsManager?:UnitDefinitionsManager\r\n  ){\r\n\r\n    this.data = [...this.storage.get()]\r\n    this.unitsManager = unitsManager ? unitsManager : new UnitsManager()\r\n    this.unitsDefsManager = unitDefinitionsManager \r\n      ? unitDefinitionsManager \r\n      : new UnitDefinitionsManager(this.unitsManager)\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  private storage = {\r\n    key: 'conversions',\r\n    get: (): TConversion[] => {\r\n      const defs = localStorage.getItem(this.storage.key)\r\n      return defs ? JSON.parse(defs) as TConversion[] : []\r\n    },\r\n    set: () => {\r\n      this.storage.delete()\r\n      localStorage.setItem(this.storage.key, JSON.stringify(this.data))\r\n    },\r\n    delete: () => {\r\n      localStorage.removeItem(this.storage.key)\r\n    }\r\n  }\r\n\r\n\r\n  private _getUnit(suffix: SISuffix = SISuffix.UNITY, baseSymbol: string, exponent: number = 1): TOperationalUnit {\r\n    this.unitsManager.createUnit(baseSymbol, exponent)\r\n    return { \r\n      suffix: suffix, \r\n      symbol: baseSymbol,\r\n      exponent: exponent,\r\n      unitID: this.unitsManager.buildUnitID(baseSymbol, exponent)\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  public getConversions(): TConversion[]{ return [...this.data]}\r\n  public getConversionsFromAuthor(author: string): TConversion[] {\r\n    return this.getConversions().filter(rec => rec.meta.author === author)\r\n  }\r\n  public getConversionsInTimeRange(start: number, final: number = 0): TConversion[] {\r\n    if(final === 0){\r\n      final = new Date().getTime()\r\n    }\r\n    return this.getConversions().filter(rec => rec.meta.createdTimestamp > start && rec.meta.createdTimestamp < final)\r\n  }\r\n  public registerUnit(baseSymbol: string, exponent?:number): number {\r\n    return this.unitsManager.createUnit(baseSymbol, exponent)\r\n  }\r\n  public buildUnitObject(...args: any[]): TOperationalUnit {\r\n    let suffix = SISuffix.UNITY\r\n    let base = ''\r\n    let exponent = 1\r\n\r\n    if(typeof args[0] === 'number') {suffix = args[0]}\r\n\r\n    if(typeof args[0] === 'string') {base = args[0]}\r\n    if(typeof args[1] === 'string') {base = args[1]}\r\n\r\n    if(typeof args[1] === 'number') {exponent = args[1]}\r\n    if(typeof args[2] === 'number') {exponent = args[2]}\r\n\r\n    // console.log('[CM]: ', suffix, base, exponent)\r\n    const unit = this._getUnit(suffix, base, exponent)\r\n    // console.log('[RM]: Built Unit: ', unit)\r\n    return unit\r\n  }\r\n  public getUnits(): TUnit[]{\r\n    return this.unitsManager.getUnits()\r\n  }\r\n\r\n  public collectBaseUnits(\r\n    composedUnits: (TOperationalUnit|null|undefined)[], \r\n    baseUnits: TUnit[]): number{\r\n    // console.log(composedUnits)\r\n\r\n    // Get the first unit from the array\r\n    let currOpUnit = composedUnits.shift()\r\n    let currUnit: TUnit | null = null;\r\n    let factor: number = 1\r\n    currOpUnit && currOpUnit.symbol && (currUnit = this.unitsManager.getUnitBySymbol(currOpUnit.symbol));\r\n    currOpUnit && currOpUnit.symbol && currUnit && (currUnit = {\r\n      baseSymbol: currUnit.baseSymbol,\r\n      exponent: currOpUnit.exponent,\r\n      id: this.unitsManager.buildUnitID(currUnit.baseSymbol, currOpUnit.exponent)\r\n    } as TUnit);\r\n    currOpUnit && currOpUnit.symbol && currOpUnit.suffix!==undefined && (factor = factor * Math.pow(10, currOpUnit.suffix * currOpUnit.exponent))\r\n    \r\n    // console.log(currOpUnit)\r\n    // console.log(currOpUnit && currOpUnit.unit)\r\n    // console.log(currOpUnit && currOpUnit.unit && currOpUnit.suffix)\r\n    // currOpUnit && currOpUnit.unit && currOpUnit.suffix!==undefined && console.log(currOpUnit.suffix, Math.pow(10, currOpUnit.suffix), factor)\r\n\r\n    // Get the associated definition for the base symbole (i.e if m^2 only take m) \r\n    let currDefs = currUnit ? this.unitsDefsManager.getDefinitionsByUnitBaseSymbol(currUnit.baseSymbol) : null\r\n    // console.log(currUnit)\r\n    // console.log(currDefs)\r\n    // console.log(factor)\r\n\r\n    // If the definition shows that we have a basic dimension, collect it\r\n    currOpUnit && currDefs && currDefs.definition.units.length === 0 && currUnit && baseUnits.push(currUnit)\r\n    currOpUnit && currDefs && currUnit && (factor = factor * Math.pow(currDefs.definition.factor, currOpUnit.exponent))\r\n    // console.log(factor)\r\n    // If the definition shows that the base symbol is actually a composed unit - as N (newton) is actually kg.m/sec^2\r\n    // Push each one of these composing unit to the unit array\r\n    currOpUnit \r\n    && currDefs \r\n    && currDefs.definition.units.length !== 0 \r\n    && (composedUnits = [\r\n      ...composedUnits, \r\n      ...currDefs.definition.units.map(item => {\r\n        let tmp: TOperationalUnit = {\r\n          suffix: SISuffix.UNITY,\r\n          symbol: item.baseSymbol,\r\n          exponent: currOpUnit ? currOpUnit.exponent : 1,\r\n          unitID: this.unitsManager.buildUnitID(item.baseSymbol, currOpUnit ? currOpUnit.exponent : 1)\r\n        }\r\n        return tmp\r\n      })])\r\n\r\n    // End Recursion policy\r\n    if(composedUnits.length !== 0){\r\n      return factor * this.collectBaseUnits(composedUnits, baseUnits)\r\n    }else{\r\n      return factor\r\n    }\r\n  }\r\n  public numberToSIObject(val: number): TSIObject{\r\n    let valParts = val.toExponential().toLowerCase().split('e')\r\n    let tmp: TSIObject = {\r\n      mantisse: parseFloat(valParts[0]),\r\n      exponent: parseFloat(valParts[1]),\r\n    }\r\n    return tmp\r\n  }\r\n  public addConversion(initial_value: TSIObject, \r\n                    initial_unit: TOperationalUnit[], \r\n                    final_unit: TOperationalUnit[], \r\n                    author?: string): TFeedback{\r\n\r\n\r\n    let initialIDs = initial_unit.map(item => this.unitsManager.buildUnitID(item.symbol, item.exponent)).sort()\r\n    let finalIDs = final_unit.map(item =>  this.unitsManager.buildUnitID(item.symbol, item.exponent)).sort()\r\n    \r\n    let unknownUnitIds: string[]\r\n    unknownUnitIds = this.unitsManager.filterOutKnownIds(finalIDs)\r\n    if(unknownUnitIds.length !== 0){\r\n      return {\r\n        message: 'Invalid Initial Units',\r\n        payload: unknownUnitIds\r\n      }\r\n    }\r\n    unknownUnitIds = this.unitsManager.filterOutKnownIds(initialIDs)\r\n    if(unknownUnitIds.length !== 0){\r\n      return {\r\n        message: 'Invalid Final Units',\r\n        payload: unknownUnitIds\r\n      }\r\n    }\r\n\r\n\r\n    let finalBaseUnits: TUnit[] = []\r\n    let den = this.collectBaseUnits(\r\n      [...final_unit],\r\n      finalBaseUnits\r\n    )\r\n    let initialBaseUnits: TUnit[] = []\r\n    let num = this.collectBaseUnits(\r\n      [...initial_unit],\r\n      initialBaseUnits\r\n    )\r\n\r\n\r\n\r\n    initialIDs = initialBaseUnits.map(item => item.id).sort()\r\n    finalIDs = finalBaseUnits.map(item => item.id).sort()\r\n    console.warn('[CM]: Initial Units: ', initialIDs, ' - Final Units: ', finalIDs)\r\n\r\n    if(JSON.stringify(initialIDs) !== JSON.stringify(finalIDs)){\r\n      return {\r\n        message: 'Invalid Initial vs Final Units',\r\n        payload: null\r\n      }\r\n    }\r\n\r\n\r\n    let _initial_unit = initial_unit.map(unit => {\r\n      if(!unit.suffix){\r\n        unit.suffix = SISuffix.UNITY\r\n      }\r\n      return unit\r\n    })\r\n    let _final_unit = final_unit.map(unit => {\r\n      if(!unit.suffix){\r\n        unit.suffix = SISuffix.UNITY\r\n      }\r\n      return unit\r\n    })\r\n\r\n\r\n    const now = new Date().getTime()\r\n    const meta: TMeta = {\r\n      author: author ? author : 'unknown',\r\n      id: `${now}`,\r\n      createdTimestamp: now,\r\n    }\r\n\r\n    const conversion: TConversion = {\r\n      meta: meta,\r\n      initial_value: initial_value,\r\n      initial_unit: _initial_unit,\r\n      final_unit: _final_unit\r\n    }\r\n\r\n    this.data = [...this.data, conversion]\r\n    this.storage.set()\r\n\r\n\r\n    return {\r\n      message: 'success',\r\n      payload: this.numberToSIObject(\r\n        initial_value.mantisse * Math.pow(10, initial_value.exponent) * num / den\r\n      )\r\n    }\r\n    \r\n  }\r\n\r\n  public registerDefinition(name: string, \r\n                          measurement: string, \r\n                          associatedUnitID: string, \r\n                          composingUnitsIDs: string[], \r\n                          composingFactor: number = 1, \r\n                          description?:string): number{\r\n    return this.unitsDefsManager.createDefinition(\r\n      name,\r\n      measurement,\r\n      associatedUnitID,\r\n      composingUnitsIDs,\r\n      composingFactor,\r\n      description\r\n    )\r\n  }\r\n  public getUnitsDefinitions(): TUnitDefinition[]{\r\n    return this.unitsDefsManager.getDefinitions()\r\n  }\r\n  public getUnitsDefinitionByName(defName: string): TUnitDefinition|null{\r\n    return this.unitsDefsManager.getDefinitionsByName(defName)\r\n  }\r\n\r\n  public getSuffixes(): TSuffix[]{\r\n    return nativeData.suffixes\r\n  }\r\n\r\n}\r\n\r\n\r\n        \r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport './CustomInput.css';\r\n\r\n\r\n\r\ntype Props = {\r\n    value: string,\r\n    handleChange: (newValue: string)=>void,\r\n    extraClasses?: string,\r\n    disabled?: boolean,\r\n    placeholder?: string\r\n}\r\ntype PropsNumber = {\r\n    value: number,\r\n    handleChange: (newValue: string)=>void,\r\n    extraClasses?: string,\r\n    placeholder?: string,\r\n    min?: number,\r\n    max?: number,\r\n    disabled?: boolean,\r\n    step?: number,\r\n}\r\n  \r\n  \r\nconst CustomInputText: React.FC<Props> = ({value, handleChange, extraClasses, placeholder, disabled}) => {\r\n    return (\r\n        <div className={`custom-input align-self-stretch flex flex-column ${extraClasses} ${disabled ? 'custom-input--disabled': ''}`}>\r\n            <div className='disabling-overlay' onClick={evt => {evt.stopPropagation(); evt.preventDefault()}}></div>\r\n            <input type=\"text\" value={value} onChange={evt=>handleChange(evt.target.value)} placeholder={placeholder}/>\r\n            <span className=\"pen-icon flex-centered\"><i className=\"fas fa-pen\"></i></span>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst CustomInputNumber: React.FC<PropsNumber> = ({value, handleChange, extraClasses, placeholder, disabled, min, max, step}) => {\r\n    return (\r\n        <div className={`custom-input align-self-stretch flex flex-column ${extraClasses} ${disabled ? 'custom-input--disabled': ''}`}>\r\n            <div className='disabling-overlay' onClick={evt => {evt.stopPropagation(); evt.preventDefault()}}></div>\r\n            <input type=\"number\" value={value} onChange={evt=>handleChange(evt.target.value)} min={min} max={max} step={step} placeholder={placeholder}/>\r\n            <span className=\"pen-icon flex-centered\"><i className=\"fas fa-pen\"></i></span>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst CustomInputNumberUndefined: React.FC<PropsNumber> = ({value, handleChange, extraClasses, placeholder, disabled, min, max, step}) => {\r\n    // This component will allow the input field to remain empty while the user is typing.\r\n    // It is therefore agnostic of the empty/undefined/null value policy of the higher compoennt/source of truth\r\n    // While the field is empty the last value from the source of truth is cached.\r\n    // This only works under the assumption that the value can only change from this field, and that the source of\r\n    // truth does not in anyway coerce/update/cahnge this value\r\n\r\n    // To allow the field to remain empty while the user is typing\r\n    // Give the illusion to the source of truth (higher component) that the value never becomes empty:\r\n    // When it actually does, cache the current value received from props and send that to the source of truth\r\n    // on subsequent re-renders until the user enters a non null value\r\n    // thus allowing the input field to remain empty, and prevent it to be coerced to some value by a source\r\n    // of truth that does not like empty fields...\r\n    const willPotentiallyCacheThis: string = value.toString() \r\n    const [cachedValue, setCachedValue] = useState<string|undefined>()\r\n    \r\n    return (\r\n        <div className={`custom-input align-self-stretch flex flex-column ${extraClasses} ${disabled ? 'custom-input--disabled': ''}`}>\r\n            <div className='disabling-overlay' onClick={evt => {evt.stopPropagation(); evt.preventDefault()}}></div>\r\n            <input type=\"number\" value={cachedValue ? '' : value} onChange={evt=>{\r\n                    if(!evt.target.value){\r\n                        setCachedValue(willPotentiallyCacheThis);\r\n                        handleChange(willPotentiallyCacheThis);\r\n                    }else{\r\n                        setCachedValue(undefined)\r\n                        handleChange(evt.target.value);\r\n                    }\r\n                }} min={min} max={max} step={step} placeholder={placeholder}/>\r\n            <span className=\"pen-icon flex-centered\"><i className=\"fas fa-pen\"></i></span>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst CustomInputTextPassword: React.FC<Props> = ({value, handleChange, extraClasses, placeholder, disabled}) => {\r\n    return (\r\n        <div className={`custom-input align-self-stretch flex flex-column ${extraClasses} ${disabled ? 'custom-input--disabled': ''}`}>\r\n            <div className='disabling-overlay' onClick={evt => {evt.stopPropagation(); evt.preventDefault()}}></div>\r\n            <input type=\"password\" value={value} onChange={evt=>handleChange(evt.target.value)} placeholder={placeholder}/>\r\n            <span className=\"pen-icon flex-centered\"><i className=\"fas fa-pen\"></i></span>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst CustomInputNumberPassword: React.FC<Props> = ({value, handleChange, extraClasses, placeholder, disabled}) => {\r\n    return (\r\n        <div className={`custom-input align-self-stretch flex flex-column ${extraClasses} ${disabled ? 'custom-input--disabled': ''}`}>\r\n            <div className='disabling-overlay' onClick={evt => {evt.stopPropagation(); evt.preventDefault()}}></div>\r\n            <input type=\"password\" pattern=\"[0-9]*\" value={value === 'NaN' ? '' : value} onChange={evt=>handleChange(evt.target.value)} placeholder={placeholder}/>\r\n            <span className=\"pen-icon flex-centered\"><i className=\"fas fa-pen\"></i></span>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n  \r\nCustomInputText.defaultProps = {\r\n    value: '',\r\n    extraClasses: '',\r\n    placeholder: 'Your Input Here',\r\n    disabled: false\r\n}\r\nCustomInputNumber.defaultProps = {\r\n    value: 0,\r\n    extraClasses: '',\r\n    placeholder: 'Your Input Here',\r\n    min: -1*Number.MAX_SAFE_INTEGER,\r\n    max: Number.MAX_SAFE_INTEGER,\r\n    step: 1,\r\n    disabled: false\r\n}\r\nCustomInputTextPassword.defaultProps = {...CustomInputText.defaultProps}\r\nCustomInputNumberPassword.defaultProps = {...CustomInputText.defaultProps}\r\nexport { CustomInputText, CustomInputNumber, CustomInputTextPassword, CustomInputNumberPassword, CustomInputNumberUndefined };","import React, { useState, useRef, useEffect } from 'react';\r\nimport './MathJax.css';\r\nimport { TOperationalUnit, TUnitDefinition, TSuffix } from '../../data/types';\r\nimport { buildMathJaxUnit } from '../MathJaxCurrentConversion/MathJaxCurrentConversion';\r\nimport { CustomInputNumberUndefined as CustomInput } from '../CustomInput/CustomInput';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ntype TProps = {\r\n  units: TOperationalUnit[],\r\n  currentUnit: TOperationalUnit,\r\n  // setUnits: (newUnits: TOperationalUnit[])=>void,\r\n  unitsDefinitions: TUnitDefinition[],\r\n  unitsSuffixes: TSuffix[],\r\n  showParenthesis: boolean,\r\n  onNewUnit: ()=>void,\r\n  onSuffixChange: (newSuffix: TSuffix, unit: TOperationalUnit)=>void\r\n  onUnitChange: (newUnit: TUnitDefinition, unit: TOperationalUnit)=>void\r\n  onExponentChange: (newExp: number, unit: TOperationalUnit)=>void\r\n  onUnitSelection: (unit: TOperationalUnit)=>void \r\n  onUnitRemoval: (unit: TOperationalUnit)=>void\r\n}\r\nconst MathJaxSIUnitEditor: React.FC<TProps> = ({units, currentUnit, unitsDefinitions, unitsSuffixes, showParenthesis, onNewUnit, onSuffixChange, onUnitChange, onExponentChange, onUnitSelection, onUnitRemoval}) => {\r\n  \r\n  console.log(unitsSuffixes)\r\n  \r\n  // const [currentUnit, setCurrentUnit] = useState<TOperationalUnit>(units[0])\r\n\r\n\r\n  return (\r\n    <div className=\"si-object-units-container\">\r\n        <div className=\"container units-manager\">\r\n          {\r\n            units.map((unit, index) => (\r\n              <UnitComponent unit={unit} key={index} \r\n                             showParenthesis={showParenthesis} \r\n                             isActive={currentUnit.unitID===unit.unitID} \r\n                             onSelected={()=>onUnitSelection(unit)}\r\n                             onRemove={()=>onUnitRemoval(unit)}\r\n              />\r\n            ))\r\n          }\r\n          <div className={`unit-component unit-component--add`}\r\n               onClick={evt => onNewUnit()}\r\n          >\r\n            <i className=\"fas fa-plus\"></i>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"container suffix-selection\">\r\n          {\r\n            unitsSuffixes.map((suf, index) => (\r\n              <SuffixComponent suffix={suf} \r\n                               isActive={currentUnit.suffix===suf.factor_exponent} \r\n                               key={suf.symbol}\r\n                               onSelection={()=>onSuffixChange(suf, currentUnit)}\r\n              />\r\n            ))\r\n          }\r\n        </div>\r\n\r\n        <div className=\"container units-selection\">\r\n          {\r\n            unitsDefinitions.map((def, index) => (\r\n              <DefinitionComponent definition={def} \r\n                                   isActive={currentUnit.symbol===def.unitID} \r\n                                   key={def.unitID}\r\n                                   onSelection={()=>onUnitChange(def, currentUnit)}\r\n              />\r\n            ))\r\n          }\r\n        </div>\r\n        \r\n        <div className=\"unit-exponent\">\r\n          <CustomInput  value={currentUnit.exponent} \r\n                        handleChange={(newVal)=>onExponentChange(parseFloat(newVal), currentUnit)}\r\n          />\r\n        </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default MathJaxSIUnitEditor;\r\n\r\n\r\nconst toCapital = (str: string): string=>str.substr(0,1).toUpperCase() + str.substr(1).toLowerCase()\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ntype TUnitComponentProps = {\r\n  unit: TOperationalUnit,\r\n  showParenthesis: boolean,\r\n  isActive: boolean,\r\n  onSelected: ()=>void,\r\n  onRemove: ()=>void,\r\n}\r\nconst UnitComponent: React.FC<TUnitComponentProps> = ({unit, showParenthesis, isActive, onRemove, onSelected}) => {\r\n  let pRef = useRef<any>()\r\n\r\n  useEffect(() => {\r\n    let mathjaxexpression = buildMathJaxUnit(unit, showParenthesis);\r\n    unit.exponent < 0 && (mathjaxexpression = `(1)/(${mathjaxexpression})`)\r\n    pRef.current && (pRef.current.innerHTML = `\\`${mathjaxexpression}\\``);\r\n    window.MathJax && window.MathJax.typeset && window.MathJax.typeset()\r\n  });\r\n\r\n  return (\r\n    <div className={`unit-component ${isActive?'unit-component--active':''}`}\r\n         onClick={evt => onSelected()}\r\n    \r\n    >\r\n      <span className=\"unit-name\" ref={pRef}></span>\r\n      <span className={`unit-component--remove`}\r\n            onClick={evt => {\r\n              evt.stopPropagation()\r\n              onRemove()\r\n            }}\r\n      >\r\n        <i className=\"fas fa-minus\"></i>\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ntype TDefinitionComponentProps = {\r\n  definition: TUnitDefinition,\r\n  isActive: boolean,\r\n  onSelection: ()=> void\r\n}\r\nconst DefinitionComponent: React.FC<TDefinitionComponentProps> = ({definition, isActive, onSelection}) => {\r\n  \r\n  // const exp = `${definition.factor_exponent > 0 ? '+' :''}${definition.factor_exponent}`\r\n  return (\r\n    <div className={`definition-component ${isActive?'definition-component--active':''}`} onClick={evt => onSelection()}>\r\n      <span className=\"definition-name\">{toCapital(definition.name)}</span>\r\n      <span className=\"definition-symbol\">{definition.unitID}</span>\r\n      <span className=\"definition-details\"><i className=\"fas fa-cog\"></i></span>\r\n      <span className=\"definition-measurement\">{`*${definition.measurement}`}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\ntype TSuffixComponentProps = {\r\n  suffix: TSuffix,\r\n  isActive: boolean,\r\n  onSelection: ()=> void\r\n}\r\nconst SuffixComponent: React.FC<TSuffixComponentProps> = ({suffix, isActive, onSelection}) => {\r\n  \r\n  const exp = `${suffix.factor_exponent > 0 ? '+' :''}${suffix.factor_exponent}`\r\n  return (\r\n    <div className={`suffix-component ${isActive?'suffix-component--active':''}`} onClick={evt => onSelection()}>\r\n      <span className=\"suffix-name\">{toCapital(suffix.name)}</span>\r\n      <span className=\"suffix-symbol\">{suffix.symbol}</span>\r\n      <span className=\"suffix-exponent\">10<span>{exp}</span></span>\r\n    </div>\r\n  )\r\n}","import React, { useState, useRef, useEffect, useMemo } from 'react';\r\nimport './App.css';\r\nimport Controls from './components/Controls/Controls';\r\nimport SlideUpPane from './components/SlideUpPane/SlidingPanes';\r\nimport MathJaxCurrentConversion from './components/MathJaxCurrentConversion/MathJaxCurrentConversion';\r\nimport { TConversionObj } from './ui.types';\r\nimport Page from './components/Pages/Page';\r\nimport MathJaxSIValueEditor  from './components/MathJax/MathJaxSIValueEditor';\r\nimport ConversionsManager from './data/conversion.manager';\r\nimport { TSIObject, TOperationalUnit } from './data/types';\r\nimport MathJaxSIUnitEditor from './components/MathJax/MathJaxSIUnitEditor';\r\n\r\ndeclare global {\r\n  interface Window { MathJax: any; }\r\n}\r\nenum TControlPanes {\r\n  NONE = 0,\r\n  INITIAL_VALUE,\r\n  INITIAL_UNITS,\r\n  FINAL_UNITS\r\n}\r\n\r\n\r\nfunction App() {\r\n  window.MathJax && console.log(window.MathJax)\r\n  let cm = useRef<ConversionsManager|null>(null);\r\n  (cm.current === null) && (cm.current = new ConversionsManager());\r\n  console.log('[App]: Conversion Manager Version: ', cm.current.getVersion())\r\n\r\n  const [showingParenthesis, setShowingParenthesis] = useState<boolean>(true)\r\n  const [showingSlidingPane, setShowingSlidingPane] = useState<TControlPanes>(TControlPanes.NONE)\r\n\r\n  const [startVal, setStartVal] = useState<number>(1.2345)\r\n  const [startExp, setStartExp] = useState<number>(21.12)\r\n  const [startUnits, setStartUnits] = useState<TOperationalUnit[]>([\r\n    cm.current.buildUnitObject('g'),\r\n    cm.current.buildUnitObject('m', -1),\r\n    cm.current.buildUnitObject('s', -1),\r\n  ])\r\n  const [finalVal, setFinalVal] = useState<number>(13.2345)\r\n  const [finalExp, setFinalExp] = useState<number>(22.12)\r\n  const [finalUnits, setFinalUnits] = useState<TOperationalUnit[]>([\r\n    cm.current.buildUnitObject('g'),\r\n    cm.current.buildUnitObject('m', -1),\r\n    cm.current.buildUnitObject('s', -1),\r\n  ])\r\n  const conversionObj: TConversionObj = {\r\n    startVal: startVal, finalVal: finalVal, \r\n    startExp: startExp, finalExp: finalExp,\r\n    startUnits: startUnits, finalUnits: finalUnits,\r\n  }\r\n\r\n  const [currentStartUnit, setCurrentStartUnit] = useState<TOperationalUnit>(startUnits[0])\r\n  const [currentFinalUnit, setCurrentFinalUnit] = useState<TOperationalUnit>(startUnits[0])\r\n  const handleControlAction = (srcControl: string)=>{\r\n    console.log('[App]: Clicked on: ', srcControl)\r\n    switch (srcControl){\r\n      case 'initial-value':\r\n        setShowingSlidingPane(TControlPanes.INITIAL_VALUE);\r\n        break\r\n      case 'initial-units':\r\n        setShowingSlidingPane(TControlPanes.INITIAL_UNITS);\r\n        break\r\n      case 'final-units':\r\n        setShowingSlidingPane(TControlPanes.FINAL_UNITS);\r\n        break\r\n      case 'toggle-parenthesis':\r\n        setShowingParenthesis(val=>!val);\r\n        break\r\n      default:\r\n        console.log('[App]: Unsupported Control was clicked. That woudld be reeaaaaally weird...')\r\n        break\r\n    }\r\n  }\r\n  const conversionHandler = ()=>{\r\n    if(cm.current === null){\r\n      return\r\n    }\r\n    let res = cm.current.addConversion({\r\n      mantisse: startVal,\r\n      exponent: startExp\r\n    }, startUnits, finalUnits)\r\n    let final_value: TSIObject = res.payload as TSIObject\r\n    setFinalVal(final_value.mantisse)\r\n    setFinalExp(final_value.exponent)\r\n    console.log(res, final_value)\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"current-conversion\">\r\n        <MathJaxCurrentConversion showParenthesis={showingParenthesis} conversionObject={conversionObj}/>\r\n      </div>\r\n\r\n      <div className=\"details\">\r\n            {/* hello from details */}\r\n      </div>\r\n\r\n      <div className=\"slide-up-pane\">\r\n        <SlideUpPane isShowing={showingSlidingPane===TControlPanes.INITIAL_VALUE} \r\n                      onHide={()=>setShowingSlidingPane(TControlPanes.NONE)}\r\n        >\r\n          <Page onClose={()=>setShowingSlidingPane(TControlPanes.NONE)}>\r\n            <MathJaxSIValueEditor onChange={(val, exp)=>{\r\n              setStartVal(val)\r\n              setStartExp(exp)\r\n              conversionHandler()\r\n            }}/>\r\n          </Page>\r\n        </SlideUpPane>\r\n        <SlideUpPane isShowing={showingSlidingPane===TControlPanes.INITIAL_UNITS} \r\n                      onHide={()=>setShowingSlidingPane(TControlPanes.NONE)}\r\n                      extraClasses=\"max-content-height-width\"\r\n        >\r\n          <Page onClose={()=>setShowingSlidingPane(TControlPanes.NONE)}>\r\n            <MathJaxSIUnitEditor  units={startUnits} \r\n                                  currentUnit={currentStartUnit}\r\n                                  unitsDefinitions={cm.current.getUnitsDefinitions()}\r\n                                  unitsSuffixes={cm.current.getSuffixes()}\r\n                                  showParenthesis={showingParenthesis}\r\n                                  onUnitSelection={(unit)=>setCurrentStartUnit(startUnits.filter(un => un.unitID === unit.unitID)[0])}\r\n                                  onUnitRemoval={(unit)=>{setStartUnits(startUnits => {\r\n                                    const newUnits = startUnits.filter(un => un.unitID !== unit.unitID)\r\n                                    setCurrentStartUnit(newUnits[0])\r\n                                    return newUnits\r\n                                  })}}\r\n                                  onSuffixChange={(newSuffix, unit)=>setFinalUnits(units => cm && cm.current ? units.map(un => {\r\n                                    if(un.unitID === unit.unitID && cm && cm.current){\r\n                                      un = cm.current.buildUnitObject(newSuffix.symbol, un.symbol, un.exponent)\r\n                                    }\r\n                                    return un\r\n                                  }) : [...units])}\r\n                                  onUnitChange={(newUnit, unit)=>setFinalUnits(units => cm && cm.current ? units.map(un => {\r\n                                    if(un.unitID === unit.unitID && cm && cm.current){\r\n                                      un = cm.current.buildUnitObject(un.suffix, newUnit.unitID, un.exponent)\r\n                                    }\r\n                                    return un\r\n                                  }) : [...units])}\r\n                                  onExponentChange={(newExp, unit)=>setFinalUnits(units => cm && cm.current ? units.map(un => {\r\n                                    if(un.unitID === unit.unitID && cm && cm.current){\r\n                                      un = cm.current.buildUnitObject(un.suffix, un.symbol, newExp)\r\n                                    }\r\n                                    return un\r\n                                  }) : [...units])}\r\n                                  onNewUnit={()=>setStartUnits(units=> cm && cm.current ? [...units, cm.current.buildUnitObject('m', -1)] : [...units])}\r\n            />\r\n          </Page>\r\n        </SlideUpPane>\r\n        <SlideUpPane isShowing={showingSlidingPane===TControlPanes.FINAL_UNITS} \r\n                      onHide={()=>setShowingSlidingPane(TControlPanes.NONE)}\r\n        >\r\n          <Page onClose={()=>setShowingSlidingPane(TControlPanes.NONE)}>\r\n          <MathJaxSIUnitEditor  units={finalUnits} \r\n                                currentUnit={currentFinalUnit}\r\n                                onUnitSelection={(unit)=>setCurrentFinalUnit(finalUnits.filter(un => un.unitID === unit.unitID)[0])}\r\n                                onUnitRemoval={(unit)=>{setFinalUnits(finalUnits => {\r\n                                  const newUnits = finalUnits.filter(un => un.unitID !== unit.unitID)\r\n                                  setCurrentFinalUnit(newUnits[0])\r\n                                  return newUnits\r\n                                })}}\r\n                                unitsDefinitions={cm.current.getUnitsDefinitions()}\r\n                                unitsSuffixes={cm.current.getSuffixes()}\r\n                                showParenthesis={showingParenthesis}\r\n                                onSuffixChange={(newSuffix, unit)=>setFinalUnits(units => cm && cm.current ? units.map(un => {\r\n                                  if(un.unitID === unit.unitID && cm && cm.current){\r\n                                    un = cm.current.buildUnitObject(newSuffix.symbol, un.symbol, un.exponent)\r\n                                  }\r\n                                  return un\r\n                                }) : [...units])}\r\n                                onUnitChange={(newUnit, unit)=>setFinalUnits(units => cm && cm.current ? units.map(un => {\r\n                                  if(un.unitID === unit.unitID && cm && cm.current){\r\n                                    un = cm.current.buildUnitObject(un.suffix, newUnit.unitID, un.exponent)\r\n                                  }\r\n                                  return un\r\n                                }) : [...units])}\r\n                                onExponentChange={(newExp, unit)=>setFinalUnits(units => cm && cm.current ? units.map(un => {\r\n                                  if(un.unitID === unit.unitID && cm && cm.current){\r\n                                    un = cm.current.buildUnitObject(un.suffix, un.symbol, newExp)\r\n                                  }\r\n                                  return un\r\n                                }) : [...units])}\r\n                                onNewUnit={()=>setFinalUnits(units=> cm && cm.current ? [...units, cm.current.buildUnitObject('m', -1)] : [...units])}\r\n            />\r\n          </Page>\r\n        </SlideUpPane>\r\n      </div>\r\n\r\n      <div className=\"controls-container\">\r\n        <Controls onClick={handleControlAction} extraClasses={`${showingParenthesis ? 'showing-parenthesis' : ''}`}/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}